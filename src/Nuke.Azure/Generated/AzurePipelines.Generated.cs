// Generated from https://github.com/nuke-build/azure/blob/master/src/Nuke.Azure/specifications/AzurePipelines.json
// Generated with Nuke.CodeGeneration version 0.20.1 (OSX,.NETStandard,Version=v2.0)

using JetBrains.Annotations;
using Newtonsoft.Json;
using Nuke.Common;
using Nuke.Common.Execution;
using Nuke.Common.Tooling;
using Nuke.Common.Tools;
using Nuke.Common.Utilities.Collections;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Linq;
using System.Text;

namespace Nuke.Azure
{
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesTasks
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public static string AzurePipelinesPath =>
            ToolPathResolver.TryGetEnvironmentExecutable("AZUREPIPELINES_EXE") ??
            ToolPathResolver.GetPathExecutable("az");
        public static Action<OutputType, string> AzurePipelinesLogger { get; set; } = ProcessTasks.DefaultLogger;
        /// <summary>
        ///   Manage Azure Pipelines.
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelines(string arguments, string workingDirectory = null, IReadOnlyDictionary<string, string> environmentVariables = null, int? timeout = null, bool? logOutput = null, bool? logInvocation = null, Func<string, string> outputFilter = null)
        {
            var process = ProcessTasks.StartProcess(AzurePipelinesPath, arguments, workingDirectory, environmentVariables, timeout, logOutput, logInvocation, AzurePipelinesLogger, outputFilter);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesCreate(AzurePipelinesCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesCreateSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesCreateSettings.Query"/></li>
        ///     <li><c>--queue-id</c> via <see cref="AzurePipelinesCreateSettings.QueueId"/></li>
        ///     <li><c>--repository</c> via <see cref="AzurePipelinesCreateSettings.Repository"/></li>
        ///     <li><c>--repository-type</c> via <see cref="AzurePipelinesCreateSettings.RepositoryType"/></li>
        ///     <li><c>--service-connection</c> via <see cref="AzurePipelinesCreateSettings.ServiceConnection"/></li>
        ///     <li><c>--skip-first-run</c> via <see cref="AzurePipelinesCreateSettings.SkipFirstRun"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesCreateSettings.Verbose"/></li>
        ///     <li><c>--yaml-path</c> via <see cref="AzurePipelinesCreateSettings.YamlPath"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesCreate(Configure<AzurePipelinesCreateSettings> configurator)
        {
            return AzurePipelinesCreate(configurator(new AzurePipelinesCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesCreateSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesCreateSettings.Query"/></li>
        ///     <li><c>--queue-id</c> via <see cref="AzurePipelinesCreateSettings.QueueId"/></li>
        ///     <li><c>--repository</c> via <see cref="AzurePipelinesCreateSettings.Repository"/></li>
        ///     <li><c>--repository-type</c> via <see cref="AzurePipelinesCreateSettings.RepositoryType"/></li>
        ///     <li><c>--service-connection</c> via <see cref="AzurePipelinesCreateSettings.ServiceConnection"/></li>
        ///     <li><c>--skip-first-run</c> via <see cref="AzurePipelinesCreateSettings.SkipFirstRun"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesCreateSettings.Verbose"/></li>
        ///     <li><c>--yaml-path</c> via <see cref="AzurePipelinesCreateSettings.YamlPath"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesCreate(CombinatorialConfigure<AzurePipelinesCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesCreate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesDelete(AzurePipelinesDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesDelete(Configure<AzurePipelinesDeleteSettings> configurator)
        {
            return AzurePipelinesDelete(configurator(new AzurePipelinesDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesDelete(CombinatorialConfigure<AzurePipelinesDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesDelete, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesList(AzurePipelinesListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesListSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesListSettings.Query"/></li>
        ///     <li><c>--query-order</c> via <see cref="AzurePipelinesListSettings.QueryOrder"/></li>
        ///     <li><c>--repository</c> via <see cref="AzurePipelinesListSettings.Repository"/></li>
        ///     <li><c>--repository-type</c> via <see cref="AzurePipelinesListSettings.RepositoryType"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesList(Configure<AzurePipelinesListSettings> configurator)
        {
            return AzurePipelinesList(configurator(new AzurePipelinesListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesListSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesListSettings.Query"/></li>
        ///     <li><c>--query-order</c> via <see cref="AzurePipelinesListSettings.QueryOrder"/></li>
        ///     <li><c>--repository</c> via <see cref="AzurePipelinesListSettings.Repository"/></li>
        ///     <li><c>--repository-type</c> via <see cref="AzurePipelinesListSettings.RepositoryType"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesList(CombinatorialConfigure<AzurePipelinesListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRun(AzurePipelinesRunSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesRunSettings.Branch"/></li>
        ///     <li><c>--commit-id</c> via <see cref="AzurePipelinesRunSettings.CommitId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesRunSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesRunSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesRunSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunSettings.Subscription"/></li>
        ///     <li><c>--variables</c> via <see cref="AzurePipelinesRunSettings.Variables"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRun(Configure<AzurePipelinesRunSettings> configurator)
        {
            return AzurePipelinesRun(configurator(new AzurePipelinesRunSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesRunSettings.Branch"/></li>
        ///     <li><c>--commit-id</c> via <see cref="AzurePipelinesRunSettings.CommitId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesRunSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesRunSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesRunSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunSettings.Subscription"/></li>
        ///     <li><c>--variables</c> via <see cref="AzurePipelinesRunSettings.Variables"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRun(CombinatorialConfigure<AzurePipelinesRunSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRun, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesShow(AzurePipelinesShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesShowSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesShowSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesShow(Configure<AzurePipelinesShowSettings> configurator)
        {
            return AzurePipelinesShow(configurator(new AzurePipelinesShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesShowSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesShowSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesShow(CombinatorialConfigure<AzurePipelinesShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesUpdate(AzurePipelinesUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesUpdateSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesUpdateSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesUpdateSettings.Name"/></li>
        ///     <li><c>--new-name</c> via <see cref="AzurePipelinesUpdateSettings.NewName"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesUpdateSettings.Query"/></li>
        ///     <li><c>--queue-id</c> via <see cref="AzurePipelinesUpdateSettings.QueueId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesUpdateSettings.Verbose"/></li>
        ///     <li><c>--yaml-path</c> via <see cref="AzurePipelinesUpdateSettings.YamlPath"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesUpdate(Configure<AzurePipelinesUpdateSettings> configurator)
        {
            return AzurePipelinesUpdate(configurator(new AzurePipelinesUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesUpdateSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesUpdateSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesUpdateSettings.Name"/></li>
        ///     <li><c>--new-name</c> via <see cref="AzurePipelinesUpdateSettings.NewName"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesUpdateSettings.Query"/></li>
        ///     <li><c>--queue-id</c> via <see cref="AzurePipelinesUpdateSettings.QueueId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesUpdateSettings.Verbose"/></li>
        ///     <li><c>--yaml-path</c> via <see cref="AzurePipelinesUpdateSettings.YamlPath"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesUpdate(CombinatorialConfigure<AzurePipelinesUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesUpdate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseCreate(AzurePipelinesReleaseCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesReleaseCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-metadata-list</c> via <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseCreateSettings.Debug"/></li>
        ///     <li><c>--definition-id</c> via <see cref="AzurePipelinesReleaseCreateSettings.DefinitionId"/></li>
        ///     <li><c>--definition-name</c> via <see cref="AzurePipelinesReleaseCreateSettings.DefinitionName"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesReleaseCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseCreateSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesReleaseCreateSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseCreate(Configure<AzurePipelinesReleaseCreateSettings> configurator)
        {
            return AzurePipelinesReleaseCreate(configurator(new AzurePipelinesReleaseCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-metadata-list</c> via <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseCreateSettings.Debug"/></li>
        ///     <li><c>--definition-id</c> via <see cref="AzurePipelinesReleaseCreateSettings.DefinitionId"/></li>
        ///     <li><c>--definition-name</c> via <see cref="AzurePipelinesReleaseCreateSettings.DefinitionName"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesReleaseCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseCreateSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesReleaseCreateSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesReleaseCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesReleaseCreate(CombinatorialConfigure<AzurePipelinesReleaseCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesReleaseCreate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseList(AzurePipelinesReleaseListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesReleaseListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseListSettings.Debug"/></li>
        ///     <li><c>--definition-id</c> via <see cref="AzurePipelinesReleaseListSettings.DefinitionId"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseListSettings.Query"/></li>
        ///     <li><c>--source-branch</c> via <see cref="AzurePipelinesReleaseListSettings.SourceBranch"/></li>
        ///     <li><c>--status</c> via <see cref="AzurePipelinesReleaseListSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesReleaseListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseList(Configure<AzurePipelinesReleaseListSettings> configurator)
        {
            return AzurePipelinesReleaseList(configurator(new AzurePipelinesReleaseListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseListSettings.Debug"/></li>
        ///     <li><c>--definition-id</c> via <see cref="AzurePipelinesReleaseListSettings.DefinitionId"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseListSettings.Query"/></li>
        ///     <li><c>--source-branch</c> via <see cref="AzurePipelinesReleaseListSettings.SourceBranch"/></li>
        ///     <li><c>--status</c> via <see cref="AzurePipelinesReleaseListSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesReleaseListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesReleaseListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesReleaseList(CombinatorialConfigure<AzurePipelinesReleaseListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesReleaseList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseShow(AzurePipelinesReleaseShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesReleaseShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesReleaseShowSettings.Id"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesReleaseShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseShow(Configure<AzurePipelinesReleaseShowSettings> configurator)
        {
            return AzurePipelinesReleaseShow(configurator(new AzurePipelinesReleaseShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesReleaseShowSettings.Id"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesReleaseShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesReleaseShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesReleaseShow(CombinatorialConfigure<AzurePipelinesReleaseShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesReleaseShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsList(AzurePipelinesRunsListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesRunsListSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsListSettings.Output"/></li>
        ///     <li><c>--pipeline-ids</c> via <see cref="AzurePipelinesRunsListSettings.PipelineIds"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsListSettings.Query"/></li>
        ///     <li><c>--query-order</c> via <see cref="AzurePipelinesRunsListSettings.QueryOrder"/></li>
        ///     <li><c>--reason</c> via <see cref="AzurePipelinesRunsListSettings.Reason"/></li>
        ///     <li><c>--requested-for</c> via <see cref="AzurePipelinesRunsListSettings.RequestedFor"/></li>
        ///     <li><c>--result</c> via <see cref="AzurePipelinesRunsListSettings.Result"/></li>
        ///     <li><c>--status</c> via <see cref="AzurePipelinesRunsListSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsListSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesRunsListSettings.Tags"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesRunsListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsList(Configure<AzurePipelinesRunsListSettings> configurator)
        {
            return AzurePipelinesRunsList(configurator(new AzurePipelinesRunsListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesRunsListSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsListSettings.Output"/></li>
        ///     <li><c>--pipeline-ids</c> via <see cref="AzurePipelinesRunsListSettings.PipelineIds"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsListSettings.Query"/></li>
        ///     <li><c>--query-order</c> via <see cref="AzurePipelinesRunsListSettings.QueryOrder"/></li>
        ///     <li><c>--reason</c> via <see cref="AzurePipelinesRunsListSettings.Reason"/></li>
        ///     <li><c>--requested-for</c> via <see cref="AzurePipelinesRunsListSettings.RequestedFor"/></li>
        ///     <li><c>--result</c> via <see cref="AzurePipelinesRunsListSettings.Result"/></li>
        ///     <li><c>--status</c> via <see cref="AzurePipelinesRunsListSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsListSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesRunsListSettings.Tags"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesRunsListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsList(CombinatorialConfigure<AzurePipelinesRunsListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsShow(AzurePipelinesRunsShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesRunsShowSettings.Id"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesRunsShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsShow(Configure<AzurePipelinesRunsShowSettings> configurator)
        {
            return AzurePipelinesRunsShow(configurator(new AzurePipelinesRunsShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesRunsShowSettings.Id"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesRunsShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsShow(CombinatorialConfigure<AzurePipelinesRunsShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesPoolList(AzurePipelinesPoolListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesPoolListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesPoolListSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesPoolListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesPoolListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesPoolListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesPoolListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesPoolListSettings.Output"/></li>
        ///     <li><c>--pool-name</c> via <see cref="AzurePipelinesPoolListSettings.PoolName"/></li>
        ///     <li><c>--pool-type</c> via <see cref="AzurePipelinesPoolListSettings.PoolType"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesPoolListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesPoolListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesPoolListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesPoolList(Configure<AzurePipelinesPoolListSettings> configurator)
        {
            return AzurePipelinesPoolList(configurator(new AzurePipelinesPoolListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesPoolListSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesPoolListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesPoolListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesPoolListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesPoolListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesPoolListSettings.Output"/></li>
        ///     <li><c>--pool-name</c> via <see cref="AzurePipelinesPoolListSettings.PoolName"/></li>
        ///     <li><c>--pool-type</c> via <see cref="AzurePipelinesPoolListSettings.PoolType"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesPoolListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesPoolListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesPoolListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesPoolListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesPoolList(CombinatorialConfigure<AzurePipelinesPoolListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesPoolList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesPoolShow(AzurePipelinesPoolShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesPoolShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesPoolShowSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesPoolShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesPoolShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesPoolShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesPoolShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesPoolShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesPoolShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesPoolShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesPoolShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesPoolShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesPoolShow(Configure<AzurePipelinesPoolShowSettings> configurator)
        {
            return AzurePipelinesPoolShow(configurator(new AzurePipelinesPoolShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesPoolShowSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesPoolShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesPoolShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesPoolShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesPoolShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesPoolShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesPoolShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesPoolShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesPoolShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesPoolShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesPoolShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesPoolShow(CombinatorialConfigure<AzurePipelinesPoolShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesPoolShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesQueueList(AzurePipelinesQueueListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesQueueListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesQueueListSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesQueueListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesQueueListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesQueueListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesQueueListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesQueueListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesQueueListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesQueueListSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzurePipelinesQueueListSettings.QueueName"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesQueueListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesQueueListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesQueueList(Configure<AzurePipelinesQueueListSettings> configurator)
        {
            return AzurePipelinesQueueList(configurator(new AzurePipelinesQueueListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesQueueListSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesQueueListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesQueueListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesQueueListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesQueueListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesQueueListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesQueueListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesQueueListSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzurePipelinesQueueListSettings.QueueName"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesQueueListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesQueueListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesQueueListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesQueueList(CombinatorialConfigure<AzurePipelinesQueueListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesQueueList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesQueueShow(AzurePipelinesQueueShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesQueueShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesQueueShowSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesQueueShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesQueueShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesQueueShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesQueueShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesQueueShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesQueueShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesQueueShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesQueueShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesQueueShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesQueueShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesQueueShow(Configure<AzurePipelinesQueueShowSettings> configurator)
        {
            return AzurePipelinesQueueShow(configurator(new AzurePipelinesQueueShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesQueueShowSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesQueueShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesQueueShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesQueueShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesQueueShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesQueueShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesQueueShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesQueueShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesQueueShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesQueueShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesQueueShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesQueueShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesQueueShow(CombinatorialConfigure<AzurePipelinesQueueShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesQueueShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableCreate(AzurePipelinesVariableCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--allow-override</c> via <see cref="AzurePipelinesVariableCreateSettings.AllowOverride"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableCreateSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableCreateSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableCreateSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableCreateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableCreateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableCreateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableCreateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableCreate(Configure<AzurePipelinesVariableCreateSettings> configurator)
        {
            return AzurePipelinesVariableCreate(configurator(new AzurePipelinesVariableCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--allow-override</c> via <see cref="AzurePipelinesVariableCreateSettings.AllowOverride"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableCreateSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableCreateSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableCreateSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableCreateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableCreateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableCreateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableCreateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableCreate(CombinatorialConfigure<AzurePipelinesVariableCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableCreate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableDelete(AzurePipelinesVariableDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableDeleteSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableDeleteSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableDeleteSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableDeleteSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableDeleteSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesVariableDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableDelete(Configure<AzurePipelinesVariableDeleteSettings> configurator)
        {
            return AzurePipelinesVariableDelete(configurator(new AzurePipelinesVariableDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableDeleteSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableDeleteSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableDeleteSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableDeleteSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableDeleteSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesVariableDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableDelete(CombinatorialConfigure<AzurePipelinesVariableDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableDelete, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableList(AzurePipelinesVariableListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableListSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableListSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableListSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableList(Configure<AzurePipelinesVariableListSettings> configurator)
        {
            return AzurePipelinesVariableList(configurator(new AzurePipelinesVariableListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableListSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableListSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableListSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableList(CombinatorialConfigure<AzurePipelinesVariableListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableUpdate(AzurePipelinesVariableUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--allow-override</c> via <see cref="AzurePipelinesVariableUpdateSettings.AllowOverride"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableUpdateSettings.Name"/></li>
        ///     <li><c>--new-name</c> via <see cref="AzurePipelinesVariableUpdateSettings.NewName"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableUpdateSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableUpdateSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableUpdateSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableUpdateSettings.Project"/></li>
        ///     <li><c>--prompt-value</c> via <see cref="AzurePipelinesVariableUpdateSettings.PromptValue"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableUpdateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableUpdateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableUpdateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableUpdateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableUpdate(Configure<AzurePipelinesVariableUpdateSettings> configurator)
        {
            return AzurePipelinesVariableUpdate(configurator(new AzurePipelinesVariableUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--allow-override</c> via <see cref="AzurePipelinesVariableUpdateSettings.AllowOverride"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableUpdateSettings.Name"/></li>
        ///     <li><c>--new-name</c> via <see cref="AzurePipelinesVariableUpdateSettings.NewName"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableUpdateSettings.Output"/></li>
        ///     <li><c>--pipeline-id</c> via <see cref="AzurePipelinesVariableUpdateSettings.PipelineId"/></li>
        ///     <li><c>--pipeline-name</c> via <see cref="AzurePipelinesVariableUpdateSettings.PipelineName"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableUpdateSettings.Project"/></li>
        ///     <li><c>--prompt-value</c> via <see cref="AzurePipelinesVariableUpdateSettings.PromptValue"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableUpdateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableUpdateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableUpdateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableUpdateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableUpdate(CombinatorialConfigure<AzurePipelinesVariableUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableUpdate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupCreate(AzurePipelinesVariableGroupCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--authorize</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Authorize"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Subscription"/></li>
        ///     <li><c>--variables</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Variables"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupCreate(Configure<AzurePipelinesVariableGroupCreateSettings> configurator)
        {
            return AzurePipelinesVariableGroupCreate(configurator(new AzurePipelinesVariableGroupCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--authorize</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Authorize"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Subscription"/></li>
        ///     <li><c>--variables</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Variables"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupCreate(CombinatorialConfigure<AzurePipelinesVariableGroupCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupCreate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupDelete(AzurePipelinesVariableGroupDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupDelete(Configure<AzurePipelinesVariableGroupDeleteSettings> configurator)
        {
            return AzurePipelinesVariableGroupDelete(configurator(new AzurePipelinesVariableGroupDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesVariableGroupDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupDelete(CombinatorialConfigure<AzurePipelinesVariableGroupDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupDelete, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupList(AzurePipelinesVariableGroupListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesVariableGroupListSettings.Action"/></li>
        ///     <li><c>--continuation-token</c> via <see cref="AzurePipelinesVariableGroupListSettings.ContinuationToken"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupListSettings.Detect"/></li>
        ///     <li><c>--group-name</c> via <see cref="AzurePipelinesVariableGroupListSettings.GroupName"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupListSettings.Query"/></li>
        ///     <li><c>--query-order</c> via <see cref="AzurePipelinesVariableGroupListSettings.QueryOrder"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesVariableGroupListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupList(Configure<AzurePipelinesVariableGroupListSettings> configurator)
        {
            return AzurePipelinesVariableGroupList(configurator(new AzurePipelinesVariableGroupListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzurePipelinesVariableGroupListSettings.Action"/></li>
        ///     <li><c>--continuation-token</c> via <see cref="AzurePipelinesVariableGroupListSettings.ContinuationToken"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupListSettings.Detect"/></li>
        ///     <li><c>--group-name</c> via <see cref="AzurePipelinesVariableGroupListSettings.GroupName"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupListSettings.Query"/></li>
        ///     <li><c>--query-order</c> via <see cref="AzurePipelinesVariableGroupListSettings.QueryOrder"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesVariableGroupListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupList(CombinatorialConfigure<AzurePipelinesVariableGroupListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupShow(AzurePipelinesVariableGroupShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupShowSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupShow(Configure<AzurePipelinesVariableGroupShowSettings> configurator)
        {
            return AzurePipelinesVariableGroupShow(configurator(new AzurePipelinesVariableGroupShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupShowSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupShow(CombinatorialConfigure<AzurePipelinesVariableGroupShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupUpdate(AzurePipelinesVariableGroupUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--authorize</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Authorize"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupUpdate(Configure<AzurePipelinesVariableGroupUpdateSettings> configurator)
        {
            return AzurePipelinesVariableGroupUpdate(configurator(new AzurePipelinesVariableGroupUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--authorize</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Authorize"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupUpdate(CombinatorialConfigure<AzurePipelinesVariableGroupUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupUpdate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesAgentList(AzurePipelinesAgentListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesAgentListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--agent-name</c> via <see cref="AzurePipelinesAgentListSettings.AgentName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesAgentListSettings.Debug"/></li>
        ///     <li><c>--demands</c> via <see cref="AzurePipelinesAgentListSettings.Demands"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesAgentListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesAgentListSettings.Help"/></li>
        ///     <li><c>--include-assigned-request</c> via <see cref="AzurePipelinesAgentListSettings.IncludeAssignedRequest"/></li>
        ///     <li><c>--include-capabilities</c> via <see cref="AzurePipelinesAgentListSettings.IncludeCapabilities"/></li>
        ///     <li><c>--include-last-completed-request</c> via <see cref="AzurePipelinesAgentListSettings.IncludeLastCompletedRequest"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesAgentListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesAgentListSettings.Output"/></li>
        ///     <li><c>--pool-id</c> via <see cref="AzurePipelinesAgentListSettings.PoolId"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesAgentListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesAgentListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesAgentListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesAgentList(Configure<AzurePipelinesAgentListSettings> configurator)
        {
            return AzurePipelinesAgentList(configurator(new AzurePipelinesAgentListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--agent-name</c> via <see cref="AzurePipelinesAgentListSettings.AgentName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesAgentListSettings.Debug"/></li>
        ///     <li><c>--demands</c> via <see cref="AzurePipelinesAgentListSettings.Demands"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesAgentListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesAgentListSettings.Help"/></li>
        ///     <li><c>--include-assigned-request</c> via <see cref="AzurePipelinesAgentListSettings.IncludeAssignedRequest"/></li>
        ///     <li><c>--include-capabilities</c> via <see cref="AzurePipelinesAgentListSettings.IncludeCapabilities"/></li>
        ///     <li><c>--include-last-completed-request</c> via <see cref="AzurePipelinesAgentListSettings.IncludeLastCompletedRequest"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesAgentListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesAgentListSettings.Output"/></li>
        ///     <li><c>--pool-id</c> via <see cref="AzurePipelinesAgentListSettings.PoolId"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesAgentListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesAgentListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesAgentListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesAgentListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesAgentList(CombinatorialConfigure<AzurePipelinesAgentListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesAgentList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesAgentShow(AzurePipelinesAgentShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesAgentShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--agent-id</c> via <see cref="AzurePipelinesAgentShowSettings.AgentId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesAgentShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesAgentShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesAgentShowSettings.Help"/></li>
        ///     <li><c>--include-assigned-request</c> via <see cref="AzurePipelinesAgentShowSettings.IncludeAssignedRequest"/></li>
        ///     <li><c>--include-capabilities</c> via <see cref="AzurePipelinesAgentShowSettings.IncludeCapabilities"/></li>
        ///     <li><c>--include-last-completed-request</c> via <see cref="AzurePipelinesAgentShowSettings.IncludeLastCompletedRequest"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesAgentShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesAgentShowSettings.Output"/></li>
        ///     <li><c>--pool-id</c> via <see cref="AzurePipelinesAgentShowSettings.PoolId"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesAgentShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesAgentShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesAgentShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesAgentShow(Configure<AzurePipelinesAgentShowSettings> configurator)
        {
            return AzurePipelinesAgentShow(configurator(new AzurePipelinesAgentShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--agent-id</c> via <see cref="AzurePipelinesAgentShowSettings.AgentId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesAgentShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesAgentShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesAgentShowSettings.Help"/></li>
        ///     <li><c>--include-assigned-request</c> via <see cref="AzurePipelinesAgentShowSettings.IncludeAssignedRequest"/></li>
        ///     <li><c>--include-capabilities</c> via <see cref="AzurePipelinesAgentShowSettings.IncludeCapabilities"/></li>
        ///     <li><c>--include-last-completed-request</c> via <see cref="AzurePipelinesAgentShowSettings.IncludeLastCompletedRequest"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesAgentShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesAgentShowSettings.Output"/></li>
        ///     <li><c>--pool-id</c> via <see cref="AzurePipelinesAgentShowSettings.PoolId"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesAgentShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesAgentShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesAgentShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesAgentShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesAgentShow(CombinatorialConfigure<AzurePipelinesAgentShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesAgentShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildList(AzurePipelinesBuildListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesBuildListSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildListSettings.Debug"/></li>
        ///     <li><c>--definition-ids</c> via <see cref="AzurePipelinesBuildListSettings.DefinitionIds"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildListSettings.Query"/></li>
        ///     <li><c>--reason</c> via <see cref="AzurePipelinesBuildListSettings.Reason"/></li>
        ///     <li><c>--requested-for</c> via <see cref="AzurePipelinesBuildListSettings.RequestedFor"/></li>
        ///     <li><c>--result</c> via <see cref="AzurePipelinesBuildListSettings.Result"/></li>
        ///     <li><c>--status</c> via <see cref="AzurePipelinesBuildListSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildListSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesBuildListSettings.Tags"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesBuildListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildList(Configure<AzurePipelinesBuildListSettings> configurator)
        {
            return AzurePipelinesBuildList(configurator(new AzurePipelinesBuildListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesBuildListSettings.Branch"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildListSettings.Debug"/></li>
        ///     <li><c>--definition-ids</c> via <see cref="AzurePipelinesBuildListSettings.DefinitionIds"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildListSettings.Query"/></li>
        ///     <li><c>--reason</c> via <see cref="AzurePipelinesBuildListSettings.Reason"/></li>
        ///     <li><c>--requested-for</c> via <see cref="AzurePipelinesBuildListSettings.RequestedFor"/></li>
        ///     <li><c>--result</c> via <see cref="AzurePipelinesBuildListSettings.Result"/></li>
        ///     <li><c>--status</c> via <see cref="AzurePipelinesBuildListSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildListSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesBuildListSettings.Tags"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesBuildListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildList(CombinatorialConfigure<AzurePipelinesBuildListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildQueue(AzurePipelinesBuildQueueSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildQueueSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesBuildQueueSettings.Branch"/></li>
        ///     <li><c>--commit-id</c> via <see cref="AzurePipelinesBuildQueueSettings.CommitId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildQueueSettings.Debug"/></li>
        ///     <li><c>--definition-id</c> via <see cref="AzurePipelinesBuildQueueSettings.DefinitionId"/></li>
        ///     <li><c>--definition-name</c> via <see cref="AzurePipelinesBuildQueueSettings.DefinitionName"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildQueueSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildQueueSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesBuildQueueSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildQueueSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildQueueSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildQueueSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildQueueSettings.Query"/></li>
        ///     <li><c>--queue-id</c> via <see cref="AzurePipelinesBuildQueueSettings.QueueId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildQueueSettings.Subscription"/></li>
        ///     <li><c>--variables</c> via <see cref="AzurePipelinesBuildQueueSettings.Variables"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildQueueSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildQueue(Configure<AzurePipelinesBuildQueueSettings> configurator)
        {
            return AzurePipelinesBuildQueue(configurator(new AzurePipelinesBuildQueueSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--branch</c> via <see cref="AzurePipelinesBuildQueueSettings.Branch"/></li>
        ///     <li><c>--commit-id</c> via <see cref="AzurePipelinesBuildQueueSettings.CommitId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildQueueSettings.Debug"/></li>
        ///     <li><c>--definition-id</c> via <see cref="AzurePipelinesBuildQueueSettings.DefinitionId"/></li>
        ///     <li><c>--definition-name</c> via <see cref="AzurePipelinesBuildQueueSettings.DefinitionName"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildQueueSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildQueueSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesBuildQueueSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildQueueSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildQueueSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildQueueSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildQueueSettings.Query"/></li>
        ///     <li><c>--queue-id</c> via <see cref="AzurePipelinesBuildQueueSettings.QueueId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildQueueSettings.Subscription"/></li>
        ///     <li><c>--variables</c> via <see cref="AzurePipelinesBuildQueueSettings.Variables"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildQueueSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildQueueSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildQueue(CombinatorialConfigure<AzurePipelinesBuildQueueSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildQueue, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildShow(AzurePipelinesBuildShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesBuildShowSettings.Id"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesBuildShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildShow(Configure<AzurePipelinesBuildShowSettings> configurator)
        {
            return AzurePipelinesBuildShow(configurator(new AzurePipelinesBuildShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesBuildShowSettings.Id"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesBuildShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildShow(CombinatorialConfigure<AzurePipelinesBuildShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseDefinitionList(AzurePipelinesReleaseDefinitionListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesReleaseDefinitionListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-source-id</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactSourceId"/></li>
        ///     <li><c>--artifact-type</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactType"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseDefinitionList(Configure<AzurePipelinesReleaseDefinitionListSettings> configurator)
        {
            return AzurePipelinesReleaseDefinitionList(configurator(new AzurePipelinesReleaseDefinitionListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-source-id</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactSourceId"/></li>
        ///     <li><c>--artifact-type</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactType"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseDefinitionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesReleaseDefinitionListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesReleaseDefinitionList(CombinatorialConfigure<AzurePipelinesReleaseDefinitionListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesReleaseDefinitionList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseDefinitionShow(AzurePipelinesReleaseDefinitionShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesReleaseDefinitionShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesReleaseDefinitionShow(Configure<AzurePipelinesReleaseDefinitionShowSettings> configurator)
        {
            return AzurePipelinesReleaseDefinitionShow(configurator(new AzurePipelinesReleaseDefinitionShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesReleaseDefinitionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesReleaseDefinitionShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesReleaseDefinitionShow(CombinatorialConfigure<AzurePipelinesReleaseDefinitionShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesReleaseDefinitionShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildTagAdd(AzurePipelinesBuildTagAddSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildTagAddSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--build-id</c> via <see cref="AzurePipelinesBuildTagAddSettings.BuildId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildTagAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildTagAddSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildTagAddSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildTagAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildTagAddSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildTagAddSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildTagAddSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildTagAddSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesBuildTagAddSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildTagAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildTagAdd(Configure<AzurePipelinesBuildTagAddSettings> configurator)
        {
            return AzurePipelinesBuildTagAdd(configurator(new AzurePipelinesBuildTagAddSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--build-id</c> via <see cref="AzurePipelinesBuildTagAddSettings.BuildId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildTagAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildTagAddSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildTagAddSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildTagAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildTagAddSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildTagAddSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildTagAddSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildTagAddSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesBuildTagAddSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildTagAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildTagAddSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildTagAdd(CombinatorialConfigure<AzurePipelinesBuildTagAddSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildTagAdd, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildTagDelete(AzurePipelinesBuildTagDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildTagDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--build-id</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.BuildId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Subscription"/></li>
        ///     <li><c>--tag</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Tag"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildTagDelete(Configure<AzurePipelinesBuildTagDeleteSettings> configurator)
        {
            return AzurePipelinesBuildTagDelete(configurator(new AzurePipelinesBuildTagDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--build-id</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.BuildId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Subscription"/></li>
        ///     <li><c>--tag</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Tag"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildTagDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildTagDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildTagDelete(CombinatorialConfigure<AzurePipelinesBuildTagDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildTagDelete, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildTagList(AzurePipelinesBuildTagListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildTagListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--build-id</c> via <see cref="AzurePipelinesBuildTagListSettings.BuildId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildTagListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildTagListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildTagListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildTagListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildTagListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildTagListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildTagListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildTagListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildTagListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildTagList(Configure<AzurePipelinesBuildTagListSettings> configurator)
        {
            return AzurePipelinesBuildTagList(configurator(new AzurePipelinesBuildTagListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--build-id</c> via <see cref="AzurePipelinesBuildTagListSettings.BuildId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildTagListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildTagListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildTagListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildTagListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildTagListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildTagListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildTagListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildTagListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildTagListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildTagListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildTagList(CombinatorialConfigure<AzurePipelinesBuildTagListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildTagList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildDefinitionList(AzurePipelinesBuildDefinitionListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildDefinitionListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Query"/></li>
        ///     <li><c>--repository</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Repository"/></li>
        ///     <li><c>--repository-type</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.RepositoryType"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildDefinitionList(Configure<AzurePipelinesBuildDefinitionListSettings> configurator)
        {
            return AzurePipelinesBuildDefinitionList(configurator(new AzurePipelinesBuildDefinitionListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Query"/></li>
        ///     <li><c>--repository</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Repository"/></li>
        ///     <li><c>--repository-type</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.RepositoryType"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildDefinitionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildDefinitionListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildDefinitionList(CombinatorialConfigure<AzurePipelinesBuildDefinitionListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildDefinitionList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildDefinitionShow(AzurePipelinesBuildDefinitionShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesBuildDefinitionShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesBuildDefinitionShow(Configure<AzurePipelinesBuildDefinitionShowSettings> configurator)
        {
            return AzurePipelinesBuildDefinitionShow(configurator(new AzurePipelinesBuildDefinitionShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesBuildDefinitionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesBuildDefinitionShowSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesBuildDefinitionShow(CombinatorialConfigure<AzurePipelinesBuildDefinitionShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesBuildDefinitionShow, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableCreate(AzurePipelinesVariableGroupVariableCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupVariableCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableCreate(Configure<AzurePipelinesVariableGroupVariableCreateSettings> configurator)
        {
            return AzurePipelinesVariableGroupVariableCreate(configurator(new AzurePipelinesVariableGroupVariableCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupVariableCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupVariableCreate(CombinatorialConfigure<AzurePipelinesVariableGroupVariableCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupVariableCreate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableDelete(AzurePipelinesVariableGroupVariableDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupVariableDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableDelete(Configure<AzurePipelinesVariableGroupVariableDeleteSettings> configurator)
        {
            return AzurePipelinesVariableGroupVariableDelete(configurator(new AzurePipelinesVariableGroupVariableDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupVariableDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupVariableDelete(CombinatorialConfigure<AzurePipelinesVariableGroupVariableDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupVariableDelete, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableList(AzurePipelinesVariableGroupVariableListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupVariableListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableList(Configure<AzurePipelinesVariableGroupVariableListSettings> configurator)
        {
            return AzurePipelinesVariableGroupVariableList(configurator(new AzurePipelinesVariableGroupVariableListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupVariableListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupVariableList(CombinatorialConfigure<AzurePipelinesVariableGroupVariableListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupVariableList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableUpdate(AzurePipelinesVariableGroupVariableUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesVariableGroupVariableUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Name"/></li>
        ///     <li><c>--new-name</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.NewName"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Project"/></li>
        ///     <li><c>--prompt-value</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.PromptValue"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesVariableGroupVariableUpdate(Configure<AzurePipelinesVariableGroupVariableUpdateSettings> configurator)
        {
            return AzurePipelinesVariableGroupVariableUpdate(configurator(new AzurePipelinesVariableGroupVariableUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Name"/></li>
        ///     <li><c>--new-name</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.NewName"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Project"/></li>
        ///     <li><c>--prompt-value</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.PromptValue"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Query"/></li>
        ///     <li><c>--secret</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Secret"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Subscription"/></li>
        ///     <li><c>--value</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Value"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesVariableGroupVariableUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesVariableGroupVariableUpdate(CombinatorialConfigure<AzurePipelinesVariableGroupVariableUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesVariableGroupVariableUpdate, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsArtifactDownload(AzurePipelinesRunsArtifactDownloadSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsArtifactDownloadSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-name</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.ArtifactName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsArtifactDownload(Configure<AzurePipelinesRunsArtifactDownloadSettings> configurator)
        {
            return AzurePipelinesRunsArtifactDownload(configurator(new AzurePipelinesRunsArtifactDownloadSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-name</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.ArtifactName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsArtifactDownloadSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsArtifactDownloadSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsArtifactDownload(CombinatorialConfigure<AzurePipelinesRunsArtifactDownloadSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsArtifactDownload, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsArtifactList(AzurePipelinesRunsArtifactListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsArtifactListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsArtifactListSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsArtifactList(Configure<AzurePipelinesRunsArtifactListSettings> configurator)
        {
            return AzurePipelinesRunsArtifactList(configurator(new AzurePipelinesRunsArtifactListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsArtifactListSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsArtifactListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsArtifactListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsArtifactList(CombinatorialConfigure<AzurePipelinesRunsArtifactListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsArtifactList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsArtifactUpload(AzurePipelinesRunsArtifactUploadSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsArtifactUploadSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-name</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.ArtifactName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsArtifactUpload(Configure<AzurePipelinesRunsArtifactUploadSettings> configurator)
        {
            return AzurePipelinesRunsArtifactUpload(configurator(new AzurePipelinesRunsArtifactUploadSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--artifact-name</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.ArtifactName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsArtifactUploadSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsArtifactUploadSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsArtifactUpload(CombinatorialConfigure<AzurePipelinesRunsArtifactUploadSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsArtifactUpload, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsTagAdd(AzurePipelinesRunsTagAddSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsTagAddSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsTagAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsTagAddSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsTagAddSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsTagAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsTagAddSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsTagAddSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsTagAddSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsTagAddSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsTagAddSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesRunsTagAddSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsTagAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsTagAdd(Configure<AzurePipelinesRunsTagAddSettings> configurator)
        {
            return AzurePipelinesRunsTagAdd(configurator(new AzurePipelinesRunsTagAddSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsTagAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsTagAddSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsTagAddSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsTagAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsTagAddSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsTagAddSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsTagAddSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsTagAddSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsTagAddSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzurePipelinesRunsTagAddSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsTagAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsTagAddSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsTagAdd(CombinatorialConfigure<AzurePipelinesRunsTagAddSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsTagAdd, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsTagDelete(AzurePipelinesRunsTagDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsTagDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Subscription"/></li>
        ///     <li><c>--tag</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Tag"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsTagDelete(Configure<AzurePipelinesRunsTagDeleteSettings> configurator)
        {
            return AzurePipelinesRunsTagDelete(configurator(new AzurePipelinesRunsTagDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Subscription"/></li>
        ///     <li><c>--tag</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Tag"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsTagDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsTagDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsTagDelete(CombinatorialConfigure<AzurePipelinesRunsTagDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsTagDelete, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsTagList(AzurePipelinesRunsTagListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzurePipelinesRunsTagListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsTagListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsTagListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsTagListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsTagListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsTagListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsTagListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsTagListSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsTagListSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsTagListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsTagListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzurePipelinesRunsTagList(Configure<AzurePipelinesRunsTagListSettings> configurator)
        {
            return AzurePipelinesRunsTagList(configurator(new AzurePipelinesRunsTagListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Pipelines.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/pipelines?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzurePipelinesRunsTagListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzurePipelinesRunsTagListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzurePipelinesRunsTagListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzurePipelinesRunsTagListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzurePipelinesRunsTagListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzurePipelinesRunsTagListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzurePipelinesRunsTagListSettings.Query"/></li>
        ///     <li><c>--run-id</c> via <see cref="AzurePipelinesRunsTagListSettings.RunId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzurePipelinesRunsTagListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzurePipelinesRunsTagListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzurePipelinesRunsTagListSettings Settings, IReadOnlyCollection<Output> Output)> AzurePipelinesRunsTagList(CombinatorialConfigure<AzurePipelinesRunsTagListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzurePipelinesRunsTagList, AzurePipelinesLogger, degreeOfParallelism, completeOnFailure);
        }
    }
    #region AzurePipelinesCreateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the new pipeline.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Branch name for which the pipeline will be configured. If omitted, it will be auto-detected from local repository.
        /// </summary>
        public virtual string Branch { get; internal set; }
        /// <summary>
        ///   Description for the new pipeline.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Id of the queue in the available agent pools. Will be auto detected if not specified.
        /// </summary>
        public virtual string QueueId { get; internal set; }
        /// <summary>
        ///   Repository for which the pipeline needs to be configured. Can be clone url of the git repository or name of the repository for a Azure Repos or Owner/RepoName in case of GitHub repository. If omitted it will be auto-detected from the remote url of local git repository. If name is mentioned instead of url, --repository-type argument is also required.
        /// </summary>
        public virtual string Repository { get; internal set; }
        /// <summary>
        ///   Type of repository. If omitted, it will be auto-detected from remote url of local repository. 'tfsgit' for Azure Repos, 'github' for GitHub repository.
        /// </summary>
        public virtual PipelinesCreateRepositoryType RepositoryType { get; internal set; }
        /// <summary>
        ///   Id of the Service connection created for the repository for GitHub repository. Use command az devops service-endpoint -h for creating/listing service_connections. Not required for Azure Repos.
        /// </summary>
        public virtual string ServiceConnection { get; internal set; }
        /// <summary>
        ///   Specify this flag to prevent the first run being triggered by the command. Command will return a pipeline if run is skipped else it will output a pipeline run.
        /// </summary>
        public virtual bool? SkipFirstRun { get; internal set; }
        /// <summary>
        ///   Path of the pipelines yaml file in the repo (if yaml is already present in the repo).
        /// </summary>
        public virtual string YamlPath { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines create")
              .Add("--name {value}", Name)
              .Add("--branch {value}", Branch)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--queue-id {value}", QueueId)
              .Add("--repository {value}", Repository)
              .Add("--repository-type {value}", RepositoryType)
              .Add("--service-connection {value}", ServiceConnection)
              .Add("--skip-first-run", SkipFirstRun)
              .Add("--yaml-path {value}", YamlPath)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the pipeline.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines delete")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Limit results to pipelines with this name or starting with this name. Examples: "FabCI" or "Fab\*".
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Order of the results.
        /// </summary>
        public virtual PipelinesListQueryOrder QueryOrder { get; internal set; }
        /// <summary>
        ///   Limit results to pipelines associated with this repository.
        /// </summary>
        public virtual string Repository { get; internal set; }
        /// <summary>
        ///   Limit results to pipelines associated with this repository type. It is mandatory to pass 'repository' argument along with this argument.
        /// </summary>
        public virtual PipelinesRepositoryType RepositoryType { get; internal set; }
        /// <summary>
        ///   Maximum number of pipelines to list.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines list")
              .Add("--detect", Detect)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--query-order {value}", QueryOrder)
              .Add("--repository {value}", Repository)
              .Add("--repository-type {value}", RepositoryType)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the branch on which the pipeline run is to be queued. Example: refs/heads/master or master or refs/pull/1/merge.
        /// </summary>
        public virtual string Branch { get; internal set; }
        /// <summary>
        ///   Commit-id on which the pipeline run is to be queued.
        /// </summary>
        public virtual string CommitId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   ID of the pipeline to queue. Required if --name is not supplied.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Name of the pipeline to queue. Ignored if --id is supplied.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Open the pipeline results page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Space separated "name=value" pairs for the variables you would like to set.
        /// </summary>
        public virtual IReadOnlyList<string> Variables => VariablesInternal.AsReadOnly();
        internal List<string> VariablesInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines run")
              .Add("--branch {value}", Branch)
              .Add("--commit-id {value}", CommitId)
              .Add("--detect", Detect)
              .Add("--id {value}", Id)
              .Add("--name {value}", Name)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--variables {value}", Variables, separator: ' ')
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   ID of the pipeline.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Name of the pipeline. Ignored if --id is supplied.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Open the pipeline summary page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines show")
              .Add("--detect", Detect)
              .Add("--id {value}", Id)
              .Add("--name {value}", Name)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Branch name for which the pipeline will be configured.
        /// </summary>
        public virtual string Branch { get; internal set; }
        /// <summary>
        ///   Description to be updated for the pipeline.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Id of the pipeline to update.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Name of the pipeline to update.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   New updated name of the pipeline.
        /// </summary>
        public virtual string NewName { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Queue id of the agent pool where the pipeline needs to run.
        /// </summary>
        public virtual string QueueId { get; internal set; }
        /// <summary>
        ///   Path of the pipelines yaml file in the repo.
        /// </summary>
        public virtual string YamlPath { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines update")
              .Add("--branch {value}", Branch)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--id {value}", Id)
              .Add("--name {value}", Name)
              .Add("--new-name {value}", NewName)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--queue-id {value}", QueueId)
              .Add("--yaml-path {value}", YamlPath)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesReleaseCreateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesReleaseCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Space separated "alias=version_id" pairs.
        /// </summary>
        public virtual IReadOnlyList<string> ArtifactMetadataList => ArtifactMetadataListInternal.AsReadOnly();
        internal List<string> ArtifactMetadataListInternal { get; set; } = new List<string>();
        /// <summary>
        ///   ID of the definition to create. Required if --definition-name is not supplied.
        /// </summary>
        public virtual string DefinitionId { get; internal set; }
        /// <summary>
        ///   Name of the definition to create. Ignored if --definition-id is supplied.
        /// </summary>
        public virtual string DefinitionName { get; internal set; }
        /// <summary>
        ///   Description of the release.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the release results page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines release create")
              .Add("--artifact-metadata-list {value}", ArtifactMetadataList, separator: ' ')
              .Add("--definition-id {value}", DefinitionId)
              .Add("--definition-name {value}", DefinitionName)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesReleaseListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesReleaseListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of definition to list releases for.
        /// </summary>
        public virtual string DefinitionId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Filter releases for this branch.
        /// </summary>
        public virtual string SourceBranch { get; internal set; }
        /// <summary>
        ///   Limit to releases with this status.
        /// </summary>
        public virtual string Status { get; internal set; }
        /// <summary>
        ///   Maximum number of releases to list. Default is 50.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines release list")
              .Add("--definition-id {value}", DefinitionId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--source-branch {value}", SourceBranch)
              .Add("--status {value}", Status)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesReleaseShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesReleaseShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the release.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the release results page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines release show")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Filter by builds for this branch.
        /// </summary>
        public virtual string Branch { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   ID of definition to list builds for.
        /// </summary>
        public virtual string PipelineIds { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Order of pipeline runs.
        /// </summary>
        public virtual PipelinesRunsListQueryOrder QueryOrder { get; internal set; }
        /// <summary>
        ///   Limit to builds with this reason.
        /// </summary>
        public virtual PipelinesRunsReason Reason { get; internal set; }
        /// <summary>
        ///   Limit to builds requested for this user or group.
        /// </summary>
        public virtual string RequestedFor { get; internal set; }
        /// <summary>
        ///   Limit to builds with this result.
        /// </summary>
        public virtual PipelinesRunsResult Result { get; internal set; }
        /// <summary>
        ///   Limit to builds with this status.
        /// </summary>
        public virtual PipelinesRunsStatus Status { get; internal set; }
        /// <summary>
        ///   Limit to builds with each of the specified tags. Space separated.
        /// </summary>
        public virtual string Tags { get; internal set; }
        /// <summary>
        ///   Maximum number of builds to list.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs list")
              .Add("--branch {value}", Branch)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--pipeline-ids {value}", PipelineIds)
              .Add("--project {value}", Project)
              .Add("--query-order {value}", QueryOrder)
              .Add("--reason {value}", Reason)
              .Add("--requested-for {value}", RequestedFor)
              .Add("--result {value}", Result)
              .Add("--status {value}", Status)
              .Add("--tags {value}", Tags)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the pipeline run.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the build results page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs show")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesPoolListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesPoolListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Filter the list with user action permitted.
        /// </summary>
        public virtual PipelinesPoolAction Action { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Filter the list with matching pool name.
        /// </summary>
        public virtual string PoolName { get; internal set; }
        /// <summary>
        ///   Filter the list with type of pool.
        /// </summary>
        public virtual PipelinesPoolListPoolType PoolType { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines pool list")
              .Add("--action {value}", Action)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--pool-name {value}", PoolName)
              .Add("--pool-type {value}", PoolType)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesPoolShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesPoolShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the pool to list the details.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Filter the list with user action permitted.
        /// </summary>
        public virtual PipelinesPoolAction Action { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines pool show")
              .Add("--id {value}", Id)
              .Add("--action {value}", Action)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesQueueListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesQueueListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Filter by whether the calling user has use or manage permissions.
        /// </summary>
        public virtual PipelinesPoolAction Action { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Filter the list with matching queue name regex. e.g. \*ubuntu\* for queue with name 'Hosted Ubuntu 1604'.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines queue list")
              .Add("--action {value}", Action)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--queue-name {value}", QueueName)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesQueueShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesQueueShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the agent queue to get information about.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Filter by whether the calling user has use or manage permissions.
        /// </summary>
        public virtual PipelinesPoolAction Action { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines queue show")
              .Add("--id {value}", Id)
              .Add("--action {value}", Action)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableCreateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the variable.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Indicates whether the value can be set at queue time.
        /// </summary>
        public virtual bool? AllowOverride { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Id of the pipeline.
        /// </summary>
        public virtual string PipelineId { get; internal set; }
        /// <summary>
        ///   Name of the pipeline. Ignored if --pipeline-id parameter is supplied.
        /// </summary>
        public virtual string PipelineName { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Indicates whether the variable's value is a secret.
        /// </summary>
        public virtual bool? Secret { get; internal set; }
        /// <summary>
        ///   Value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with &lt;problematic ids="id58" refid="id57"&gt;AZURE_DEVOPS_EXT_PIPELINE_VAR_&lt;/problematic&gt; or user will be prompted to enter it via standard input. e.g. A variable named `MySecret` can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret.
        /// </summary>
        public virtual string Value { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable create")
              .Add("--name {value}", Name)
              .Add("--allow-override", AllowOverride)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--pipeline-id {value}", PipelineId)
              .Add("--pipeline-name {value}", PipelineName)
              .Add("--project {value}", Project)
              .Add("--secret", Secret, secret: true)
              .Add("--value {value}", Value)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the variable to delete.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Id of the pipeline.
        /// </summary>
        public virtual string PipelineId { get; internal set; }
        /// <summary>
        ///   Name of the pipeline.
        /// </summary>
        public virtual string PipelineName { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable delete")
              .Add("--name {value}", Name)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--pipeline-id {value}", PipelineId)
              .Add("--pipeline-name {value}", PipelineName)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Id of the pipeline.
        /// </summary>
        public virtual string PipelineId { get; internal set; }
        /// <summary>
        ///   Name of the pipeline. Ignored if --pipeline-id parameter is supplied.
        /// </summary>
        public virtual string PipelineName { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable list")
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--pipeline-id {value}", PipelineId)
              .Add("--pipeline-name {value}", PipelineName)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the variable.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Indicates whether the value can be set at queue time.
        /// </summary>
        public virtual bool? AllowOverride { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   New name of the variable.
        /// </summary>
        public virtual string NewName { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Id of the pipeline.
        /// </summary>
        public virtual string PipelineId { get; internal set; }
        /// <summary>
        ///   Name of the pipeline. Ignored if --pipeline-id parameter is supplied.
        /// </summary>
        public virtual string PipelineName { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Set it to True to update the value of a secret variable using environment variable or prompt via standard input.
        /// </summary>
        public virtual bool? PromptValue { get; internal set; }
        /// <summary>
        ///   If the value of the variable is a secret.
        /// </summary>
        public virtual bool? Secret { get; internal set; }
        /// <summary>
        ///   New value of the variable. For secret variables, use --prompt-value parameter, to be prompted to enter it via standard input. For non-interactive consoles it can be picked from environment variable prefixed with &lt;problematic ids="id60" refid="id59"&gt;AZURE_DEVOPS_EXT_PIPELINE_VAR_&lt;/problematic&gt; e.g. A variable nameed `MySecret` can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret.
        /// </summary>
        public virtual string Value { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable update")
              .Add("--name {value}", Name)
              .Add("--allow-override", AllowOverride)
              .Add("--detect", Detect)
              .Add("--new-name {value}", NewName)
              .Add("--org {value}", Org)
              .Add("--pipeline-id {value}", PipelineId)
              .Add("--pipeline-name {value}", PipelineName)
              .Add("--project {value}", Project)
              .Add("--prompt-value", PromptValue)
              .Add("--secret", Secret, secret: true)
              .Add("--value {value}", Value)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupCreateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the variable group.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Variables in format key=value space separated pairs. Secret variables should be managed using `az pipelines variable-group variable` commands.
        /// </summary>
        public virtual string Variables { get; internal set; }
        /// <summary>
        ///   Whether the variable group should be accessible by all pipelines.
        /// </summary>
        public virtual bool? Authorize { get; internal set; }
        /// <summary>
        ///   Description of the variable group.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group create")
              .Add("--name {value}", Name)
              .Add("--variables {value}", Variables)
              .Add("--authorize", Authorize)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the variable group.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group delete")
              .Add("--group-id {value}", GroupId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Action filter for the variable group. It specifies the action which can be performed on the variable groups.
        /// </summary>
        public virtual PipelinesPoolAction Action { get; internal set; }
        /// <summary>
        ///   Gets the variable groups after the continuation token provided.
        /// </summary>
        public virtual string ContinuationToken { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Name of the variable group. Wildcards are accepted. e.g. var_group\*.
        /// </summary>
        public virtual string GroupName { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Gets the results in the defined order.
        /// </summary>
        public virtual PipelinesVariableGroupListQueryOrder QueryOrder { get; internal set; }
        /// <summary>
        ///   Number of variable groups to get.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group list")
              .Add("--action {value}", Action)
              .Add("--continuation-token {value}", ContinuationToken)
              .Add("--detect", Detect)
              .Add("--group-name {value}", GroupName)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--query-order {value}", QueryOrder)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the variable group.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group show")
              .Add("--group-id {value}", GroupId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the variable group.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Whether the variable group should be accessible by all pipelines.
        /// </summary>
        public virtual bool? Authorize { get; internal set; }
        /// <summary>
        ///   New description of the variable group.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   New name of the variable group.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group update")
              .Add("--group-id {value}", GroupId)
              .Add("--authorize", Authorize)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesAgentListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesAgentListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   The agent pool containing the agents.
        /// </summary>
        public virtual string PoolId { get; internal set; }
        /// <summary>
        ///   Filter on agent name.
        /// </summary>
        public virtual string AgentName { get; internal set; }
        /// <summary>
        ///   Filter by demands the agents can satisfy. Comma separated list.
        /// </summary>
        public virtual string Demands { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Whether to include details about the agents' current work.
        /// </summary>
        public virtual bool? IncludeAssignedRequest { get; internal set; }
        /// <summary>
        ///   Whether to include the agents' capabilities in the response.
        /// </summary>
        public virtual bool? IncludeCapabilities { get; internal set; }
        /// <summary>
        ///   Whether to include details about the agents' most recent completed work.
        /// </summary>
        public virtual bool? IncludeLastCompletedRequest { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines agent list")
              .Add("--pool-id {value}", PoolId)
              .Add("--agent-name {value}", AgentName)
              .Add("--demands {value}", Demands)
              .Add("--detect", Detect)
              .Add("--include-assigned-request", IncludeAssignedRequest)
              .Add("--include-capabilities", IncludeCapabilities)
              .Add("--include-last-completed-request", IncludeLastCompletedRequest)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesAgentShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesAgentShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   The agent ID to get information about.
        /// </summary>
        public virtual string AgentId { get; internal set; }
        /// <summary>
        ///   The agent pool containing the agent.
        /// </summary>
        public virtual string PoolId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Whether to include details about the agents' current work.
        /// </summary>
        public virtual bool? IncludeAssignedRequest { get; internal set; }
        /// <summary>
        ///   Whether to include the agents' capabilities in the response.
        /// </summary>
        public virtual bool? IncludeCapabilities { get; internal set; }
        /// <summary>
        ///   Whether to include details about the agents' most recent completed work.
        /// </summary>
        public virtual bool? IncludeLastCompletedRequest { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines agent show")
              .Add("--agent-id {value}", AgentId)
              .Add("--pool-id {value}", PoolId)
              .Add("--detect", Detect)
              .Add("--include-assigned-request", IncludeAssignedRequest)
              .Add("--include-capabilities", IncludeCapabilities)
              .Add("--include-last-completed-request", IncludeLastCompletedRequest)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Filter by builds for this branch.
        /// </summary>
        public virtual string Branch { get; internal set; }
        /// <summary>
        ///   IDs (space separated) of definitions to list builds for.
        /// </summary>
        public virtual string DefinitionIds { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Limit to builds with this reason.
        /// </summary>
        public virtual PipelinesRunsReason Reason { get; internal set; }
        /// <summary>
        ///   Limit to builds requested for this user or group.
        /// </summary>
        public virtual string RequestedFor { get; internal set; }
        /// <summary>
        ///   Limit to builds with this result.
        /// </summary>
        public virtual PipelinesRunsResult Result { get; internal set; }
        /// <summary>
        ///   Limit to builds with this status.
        /// </summary>
        public virtual PipelinesRunsStatus Status { get; internal set; }
        /// <summary>
        ///   Limit to builds with each of the specified tags. Space separated.
        /// </summary>
        public virtual string Tags { get; internal set; }
        /// <summary>
        ///   Maximum number of builds to list.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build list")
              .Add("--branch {value}", Branch)
              .Add("--definition-ids {value}", DefinitionIds)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--reason {value}", Reason)
              .Add("--requested-for {value}", RequestedFor)
              .Add("--result {value}", Result)
              .Add("--status {value}", Status)
              .Add("--tags {value}", Tags)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildQueueSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildQueueSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Branch to build. Required if there is not a default branch set up on the definition. Example: refs/heads/master or master or refs/pull/1/merge.
        /// </summary>
        public virtual string Branch { get; internal set; }
        /// <summary>
        ///   Commit ID of the branch to build.
        /// </summary>
        public virtual string CommitId { get; internal set; }
        /// <summary>
        ///   ID of the definition to queue. Required if --name is not supplied.
        /// </summary>
        public virtual string DefinitionId { get; internal set; }
        /// <summary>
        ///   Name of the definition to queue. Ignored if --id is supplied.
        /// </summary>
        public virtual string DefinitionName { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the build results page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Queue Id of the pool that will be used to queue the build.
        /// </summary>
        public virtual string QueueId { get; internal set; }
        /// <summary>
        ///   Space separated "name=value" pairs for the variables you would like to set.
        /// </summary>
        public virtual IReadOnlyList<string> Variables => VariablesInternal.AsReadOnly();
        internal List<string> VariablesInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build queue")
              .Add("--branch {value}", Branch)
              .Add("--commit-id {value}", CommitId)
              .Add("--definition-id {value}", DefinitionId)
              .Add("--definition-name {value}", DefinitionName)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--queue-id {value}", QueueId)
              .Add("--variables {value}", Variables, separator: ' ')
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the build.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the build results page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build show")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesReleaseDefinitionListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesReleaseDefinitionListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Limit results to definitions associated with this artifact_source_id. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json at <a href="https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions">https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions</a>.
        /// </summary>
        public virtual string ArtifactSourceId { get; internal set; }
        /// <summary>
        ///   Release definitions with given artifactType will be returned.
        /// </summary>
        public virtual PipelinesReleaseDefinitionListArtifactType ArtifactType { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Limit results to definitions with this name or contains this name. Example: "FabCI".
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Maximum number of definitions to list.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines release definition list")
              .Add("--artifact-source-id {value}", ArtifactSourceId)
              .Add("--artifact-type {value}", ArtifactType)
              .Add("--detect", Detect)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesReleaseDefinitionShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesReleaseDefinitionShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   ID of the definition.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Name of the definition. Ignored if --id is supplied.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Open the definition summary page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines release definition show")
              .Add("--detect", Detect)
              .Add("--id {value}", Id)
              .Add("--name {value}", Name)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildTagAddSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildTagAddSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the build.
        /// </summary>
        public virtual string BuildId { get; internal set; }
        /// <summary>
        ///   Tag(s) to be added to the build. [Comma seperated values].
        /// </summary>
        public virtual string Tags { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build tag add")
              .Add("--build-id {value}", BuildId)
              .Add("--tags {value}", Tags)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildTagDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildTagDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the build.
        /// </summary>
        public virtual string BuildId { get; internal set; }
        /// <summary>
        ///   Tag to be deleted from the build.
        /// </summary>
        public virtual string Tag { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build tag delete")
              .Add("--build-id {value}", BuildId)
              .Add("--tag {value}", Tag)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildTagListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildTagListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the build.
        /// </summary>
        public virtual string BuildId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build tag list")
              .Add("--build-id {value}", BuildId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildDefinitionListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildDefinitionListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Limit results to definitions with this name or starting with this name. Examples: "FabCI" or "Fab\*".
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Limit results to definitions associated with this repository.
        /// </summary>
        public virtual string Repository { get; internal set; }
        /// <summary>
        ///   Limit results to definitions associated with this repository type. It is mandatory to pass 'repository' argument along with this argument.
        /// </summary>
        public virtual PipelinesRepositoryType RepositoryType { get; internal set; }
        /// <summary>
        ///   Maximum number of definitions to list.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build definition list")
              .Add("--detect", Detect)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--repository {value}", Repository)
              .Add("--repository-type {value}", RepositoryType)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesBuildDefinitionShowSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesBuildDefinitionShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   ID of the definition.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Name of the definition. Ignored if --id is supplied.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Open the definition summary page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines build definition show")
              .Add("--detect", Detect)
              .Add("--id {value}", Id)
              .Add("--name {value}", Name)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableCreateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupVariableCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the variable group.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Name of the variable.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   If the value of the variable is a secret.
        /// </summary>
        public virtual bool? Secret { get; internal set; }
        /// <summary>
        ///   Value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with AZURE_DEVOPS_EXT_PIPELINE_VAR_ or user will be prompted to enter it via standard input. e.g. PersonalAccessToken can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_PersonalAccessToken.
        /// </summary>
        public virtual string Value { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group variable create")
              .Add("--group-id {value}", GroupId)
              .Add("--name {value}", Name)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--secret", Secret, secret: true)
              .Add("--value {value}", Value)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupVariableDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the variable group.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Name of the variable.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group variable delete")
              .Add("--group-id {value}", GroupId)
              .Add("--name {value}", Name)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupVariableListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the variable group.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group variable list")
              .Add("--group-id {value}", GroupId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesVariableGroupVariableUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Id of the variable group.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Name of the variable.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   New name of the variable.
        /// </summary>
        public virtual string NewName { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Set it to True to update the value of a secret variable using environment variable or prompt via standard input.
        /// </summary>
        public virtual bool? PromptValue { get; internal set; }
        /// <summary>
        ///   If the value of the variable is a secret.
        /// </summary>
        public virtual bool? Secret { get; internal set; }
        /// <summary>
        ///   New value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with AZURE_DEVOPS_EXT_PIPELINE_VAR_ or user will be prompted to enter it via standard input. e.g. PersonalAccessToken can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_PersonalAccessToken.
        /// </summary>
        public virtual string Value { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines variable-group variable update")
              .Add("--group-id {value}", GroupId)
              .Add("--name {value}", Name)
              .Add("--detect", Detect)
              .Add("--new-name {value}", NewName)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--prompt-value", PromptValue)
              .Add("--secret", Secret, secret: true)
              .Add("--value {value}", Value)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsArtifactDownloadSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsArtifactDownloadSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the artifact to download.
        /// </summary>
        public virtual string ArtifactName { get; internal set; }
        /// <summary>
        ///   Path to download the artifact into.
        /// </summary>
        public virtual string Path { get; internal set; }
        /// <summary>
        ///   ID of the run that the artifact is associated to.
        /// </summary>
        public virtual string RunId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs artifact download")
              .Add("--artifact-name {value}", ArtifactName)
              .Add("--path {value}", Path)
              .Add("--run-id {value}", RunId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsArtifactListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsArtifactListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the run that the artifact is associated to.
        /// </summary>
        public virtual string RunId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs artifact list")
              .Add("--run-id {value}", RunId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsArtifactUploadSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsArtifactUploadSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   Name of the artifact to upload.
        /// </summary>
        public virtual string ArtifactName { get; internal set; }
        /// <summary>
        ///   Path to upload the artifact from.
        /// </summary>
        public virtual string Path { get; internal set; }
        /// <summary>
        ///   ID of the run that the artifact is associated to.
        /// </summary>
        public virtual string RunId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs artifact upload")
              .Add("--artifact-name {value}", ArtifactName)
              .Add("--path {value}", Path)
              .Add("--run-id {value}", RunId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsTagAddSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsTagAddSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the pipeline run.
        /// </summary>
        public virtual string RunId { get; internal set; }
        /// <summary>
        ///   Tag(s) to be added to the pipeline run. [Comma seperated values].
        /// </summary>
        public virtual string Tags { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs tag add")
              .Add("--run-id {value}", RunId)
              .Add("--tags {value}", Tags)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsTagDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsTagDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the pipeline run.
        /// </summary>
        public virtual string RunId { get; internal set; }
        /// <summary>
        ///   Tag to be deleted from the pipeline run.
        /// </summary>
        public virtual string Tag { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs tag delete")
              .Add("--run-id {value}", RunId)
              .Add("--tag {value}", Tag)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesRunsTagListSettings
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzurePipelinesRunsTagListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzurePipelines executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzurePipelinesTasks.AzurePipelinesPath;
        public override Action<OutputType, string> CustomLogger => AzurePipelinesTasks.AzurePipelinesLogger;
        /// <summary>
        ///   ID of the  pipeline run.
        /// </summary>
        public virtual string RunId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("pipelines runs tag list")
              .Add("--run-id {value}", RunId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzurePipelinesCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Name"/></em></p>
        ///   <p>Name of the new pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetName(this AzurePipelinesCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Name"/></em></p>
        ///   <p>Name of the new pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetName(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Branch
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Branch"/></em></p>
        ///   <p>Branch name for which the pipeline will be configured. If omitted, it will be auto-detected from local repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetBranch(this AzurePipelinesCreateSettings toolSettings, string branch)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = branch;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Branch"/></em></p>
        ///   <p>Branch name for which the pipeline will be configured. If omitted, it will be auto-detected from local repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetBranch(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = null;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Description"/></em></p>
        ///   <p>Description for the new pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetDescription(this AzurePipelinesCreateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Description"/></em></p>
        ///   <p>Description for the new pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetDescription(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetDetect(this AzurePipelinesCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetDetect(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings EnableDetect(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings DisableDetect(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ToggleDetect(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetOrg(this AzurePipelinesCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetOrg(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetProject(this AzurePipelinesCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetProject(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region QueueId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.QueueId"/></em></p>
        ///   <p>Id of the queue in the available agent pools. Will be auto detected if not specified.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetQueueId(this AzurePipelinesCreateSettings toolSettings, string queueId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueId = queueId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.QueueId"/></em></p>
        ///   <p>Id of the queue in the available agent pools. Will be auto detected if not specified.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetQueueId(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueId = null;
            return toolSettings;
        }
        #endregion
        #region Repository
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Repository"/></em></p>
        ///   <p>Repository for which the pipeline needs to be configured. Can be clone url of the git repository or name of the repository for a Azure Repos or Owner/RepoName in case of GitHub repository. If omitted it will be auto-detected from the remote url of local git repository. If name is mentioned instead of url, --repository-type argument is also required.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetRepository(this AzurePipelinesCreateSettings toolSettings, string repository)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = repository;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Repository"/></em></p>
        ///   <p>Repository for which the pipeline needs to be configured. Can be clone url of the git repository or name of the repository for a Azure Repos or Owner/RepoName in case of GitHub repository. If omitted it will be auto-detected from the remote url of local git repository. If name is mentioned instead of url, --repository-type argument is also required.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetRepository(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = null;
            return toolSettings;
        }
        #endregion
        #region RepositoryType
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.RepositoryType"/></em></p>
        ///   <p>Type of repository. If omitted, it will be auto-detected from remote url of local repository. 'tfsgit' for Azure Repos, 'github' for GitHub repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetRepositoryType(this AzurePipelinesCreateSettings toolSettings, PipelinesCreateRepositoryType repositoryType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RepositoryType = repositoryType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.RepositoryType"/></em></p>
        ///   <p>Type of repository. If omitted, it will be auto-detected from remote url of local repository. 'tfsgit' for Azure Repos, 'github' for GitHub repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetRepositoryType(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RepositoryType = null;
            return toolSettings;
        }
        #endregion
        #region ServiceConnection
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.ServiceConnection"/></em></p>
        ///   <p>Id of the Service connection created for the repository for GitHub repository. Use command az devops service-endpoint -h for creating/listing service_connections. Not required for Azure Repos.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetServiceConnection(this AzurePipelinesCreateSettings toolSettings, string serviceConnection)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ServiceConnection = serviceConnection;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.ServiceConnection"/></em></p>
        ///   <p>Id of the Service connection created for the repository for GitHub repository. Use command az devops service-endpoint -h for creating/listing service_connections. Not required for Azure Repos.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetServiceConnection(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ServiceConnection = null;
            return toolSettings;
        }
        #endregion
        #region SkipFirstRun
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.SkipFirstRun"/></em></p>
        ///   <p>Specify this flag to prevent the first run being triggered by the command. Command will return a pipeline if run is skipped else it will output a pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetSkipFirstRun(this AzurePipelinesCreateSettings toolSettings, bool? skipFirstRun)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SkipFirstRun = skipFirstRun;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.SkipFirstRun"/></em></p>
        ///   <p>Specify this flag to prevent the first run being triggered by the command. Command will return a pipeline if run is skipped else it will output a pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetSkipFirstRun(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SkipFirstRun = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesCreateSettings.SkipFirstRun"/></em></p>
        ///   <p>Specify this flag to prevent the first run being triggered by the command. Command will return a pipeline if run is skipped else it will output a pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings EnableSkipFirstRun(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SkipFirstRun = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesCreateSettings.SkipFirstRun"/></em></p>
        ///   <p>Specify this flag to prevent the first run being triggered by the command. Command will return a pipeline if run is skipped else it will output a pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings DisableSkipFirstRun(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SkipFirstRun = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesCreateSettings.SkipFirstRun"/></em></p>
        ///   <p>Specify this flag to prevent the first run being triggered by the command. Command will return a pipeline if run is skipped else it will output a pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ToggleSkipFirstRun(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SkipFirstRun = !toolSettings.SkipFirstRun;
            return toolSettings;
        }
        #endregion
        #region YamlPath
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.YamlPath"/></em></p>
        ///   <p>Path of the pipelines yaml file in the repo (if yaml is already present in the repo).</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetYamlPath(this AzurePipelinesCreateSettings toolSettings, string yamlPath)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.YamlPath = yamlPath;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.YamlPath"/></em></p>
        ///   <p>Path of the pipelines yaml file in the repo (if yaml is already present in the repo).</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetYamlPath(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.YamlPath = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetSubscription(this AzurePipelinesCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetSubscription(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetDebug(this AzurePipelinesCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetDebug(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetHelp(this AzurePipelinesCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetHelp(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetOutput(this AzurePipelinesCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetOutput(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetQuery(this AzurePipelinesCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetQuery(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings SetVerbose(this AzurePipelinesCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesCreateSettings ResetVerbose(this AzurePipelinesCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesDeleteSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Id"/></em></p>
        ///   <p>ID of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetId(this AzurePipelinesDeleteSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Id"/></em></p>
        ///   <p>ID of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetId(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetDetect(this AzurePipelinesDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetDetect(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings EnableDetect(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings DisableDetect(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ToggleDetect(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetOrg(this AzurePipelinesDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetOrg(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetProject(this AzurePipelinesDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetProject(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetYes(this AzurePipelinesDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetYes(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetSubscription(this AzurePipelinesDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetSubscription(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetDebug(this AzurePipelinesDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetDebug(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetHelp(this AzurePipelinesDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetHelp(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetOutput(this AzurePipelinesDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetOutput(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetQuery(this AzurePipelinesDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetQuery(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings SetVerbose(this AzurePipelinesDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesDeleteSettings ResetVerbose(this AzurePipelinesDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetDetect(this AzurePipelinesListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetDetect(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings EnableDetect(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings DisableDetect(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ToggleDetect(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Name"/></em></p>
        ///   <p>Limit results to pipelines with this name or starting with this name. Examples: "FabCI" or "Fab\*".</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetName(this AzurePipelinesListSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Name"/></em></p>
        ///   <p>Limit results to pipelines with this name or starting with this name. Examples: "FabCI" or "Fab\*".</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetName(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetOrg(this AzurePipelinesListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetOrg(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetProject(this AzurePipelinesListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetProject(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region QueryOrder
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.QueryOrder"/></em></p>
        ///   <p>Order of the results.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetQueryOrder(this AzurePipelinesListSettings toolSettings, PipelinesListQueryOrder queryOrder)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryOrder = queryOrder;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.QueryOrder"/></em></p>
        ///   <p>Order of the results.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetQueryOrder(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryOrder = null;
            return toolSettings;
        }
        #endregion
        #region Repository
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Repository"/></em></p>
        ///   <p>Limit results to pipelines associated with this repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetRepository(this AzurePipelinesListSettings toolSettings, string repository)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = repository;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Repository"/></em></p>
        ///   <p>Limit results to pipelines associated with this repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetRepository(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = null;
            return toolSettings;
        }
        #endregion
        #region RepositoryType
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.RepositoryType"/></em></p>
        ///   <p>Limit results to pipelines associated with this repository type. It is mandatory to pass 'repository' argument along with this argument.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetRepositoryType(this AzurePipelinesListSettings toolSettings, PipelinesRepositoryType repositoryType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RepositoryType = repositoryType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.RepositoryType"/></em></p>
        ///   <p>Limit results to pipelines associated with this repository type. It is mandatory to pass 'repository' argument along with this argument.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetRepositoryType(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RepositoryType = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Top"/></em></p>
        ///   <p>Maximum number of pipelines to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetTop(this AzurePipelinesListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Top"/></em></p>
        ///   <p>Maximum number of pipelines to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetTop(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetSubscription(this AzurePipelinesListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetSubscription(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetDebug(this AzurePipelinesListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetDebug(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetHelp(this AzurePipelinesListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetHelp(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetOutput(this AzurePipelinesListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetOutput(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetQuery(this AzurePipelinesListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetQuery(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings SetVerbose(this AzurePipelinesListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesListSettings ResetVerbose(this AzurePipelinesListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunSettingsExtensions
    {
        #region Branch
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Branch"/></em></p>
        ///   <p>Name of the branch on which the pipeline run is to be queued. Example: refs/heads/master or master or refs/pull/1/merge.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetBranch(this AzurePipelinesRunSettings toolSettings, string branch)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = branch;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Branch"/></em></p>
        ///   <p>Name of the branch on which the pipeline run is to be queued. Example: refs/heads/master or master or refs/pull/1/merge.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetBranch(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = null;
            return toolSettings;
        }
        #endregion
        #region CommitId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.CommitId"/></em></p>
        ///   <p>Commit-id on which the pipeline run is to be queued.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetCommitId(this AzurePipelinesRunSettings toolSettings, string commitId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CommitId = commitId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.CommitId"/></em></p>
        ///   <p>Commit-id on which the pipeline run is to be queued.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetCommitId(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CommitId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetDetect(this AzurePipelinesRunSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetDetect(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings EnableDetect(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings DisableDetect(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ToggleDetect(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Id"/></em></p>
        ///   <p>ID of the pipeline to queue. Required if --name is not supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetId(this AzurePipelinesRunSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Id"/></em></p>
        ///   <p>ID of the pipeline to queue. Required if --name is not supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetId(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Name"/></em></p>
        ///   <p>Name of the pipeline to queue. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetName(this AzurePipelinesRunSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Name"/></em></p>
        ///   <p>Name of the pipeline to queue. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetName(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Open"/></em></p>
        ///   <p>Open the pipeline results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetOpen(this AzurePipelinesRunSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Open"/></em></p>
        ///   <p>Open the pipeline results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetOpen(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetOrg(this AzurePipelinesRunSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetOrg(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetProject(this AzurePipelinesRunSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetProject(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Variables
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Variables"/> to a new list</em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetVariables(this AzurePipelinesRunSettings toolSettings, params string[] variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal = variables.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Variables"/> to a new list</em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetVariables(this AzurePipelinesRunSettings toolSettings, IEnumerable<string> variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal = variables.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzurePipelinesRunSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings AddVariables(this AzurePipelinesRunSettings toolSettings, params string[] variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal.AddRange(variables);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzurePipelinesRunSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings AddVariables(this AzurePipelinesRunSettings toolSettings, IEnumerable<string> variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal.AddRange(variables);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzurePipelinesRunSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ClearVariables(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzurePipelinesRunSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings RemoveVariables(this AzurePipelinesRunSettings toolSettings, params string[] variables)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(variables);
            toolSettings.VariablesInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzurePipelinesRunSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings RemoveVariables(this AzurePipelinesRunSettings toolSettings, IEnumerable<string> variables)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(variables);
            toolSettings.VariablesInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetSubscription(this AzurePipelinesRunSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetSubscription(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetDebug(this AzurePipelinesRunSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetDebug(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetHelp(this AzurePipelinesRunSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetHelp(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetOutput(this AzurePipelinesRunSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetOutput(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetQuery(this AzurePipelinesRunSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetQuery(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings SetVerbose(this AzurePipelinesRunSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunSettings ResetVerbose(this AzurePipelinesRunSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesShowSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetDetect(this AzurePipelinesShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetDetect(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings EnableDetect(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings DisableDetect(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ToggleDetect(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Id"/></em></p>
        ///   <p>ID of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetId(this AzurePipelinesShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Id"/></em></p>
        ///   <p>ID of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetId(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Name"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetName(this AzurePipelinesShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Name"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetName(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Open"/></em></p>
        ///   <p>Open the pipeline summary page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetOpen(this AzurePipelinesShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Open"/></em></p>
        ///   <p>Open the pipeline summary page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetOpen(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetOrg(this AzurePipelinesShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetOrg(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetProject(this AzurePipelinesShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetProject(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetSubscription(this AzurePipelinesShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetSubscription(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetDebug(this AzurePipelinesShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetDebug(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetHelp(this AzurePipelinesShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetHelp(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetOutput(this AzurePipelinesShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetOutput(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetQuery(this AzurePipelinesShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetQuery(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings SetVerbose(this AzurePipelinesShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesShowSettings ResetVerbose(this AzurePipelinesShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesUpdateSettingsExtensions
    {
        #region Branch
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Branch"/></em></p>
        ///   <p>Branch name for which the pipeline will be configured.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetBranch(this AzurePipelinesUpdateSettings toolSettings, string branch)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = branch;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Branch"/></em></p>
        ///   <p>Branch name for which the pipeline will be configured.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetBranch(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = null;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Description"/></em></p>
        ///   <p>Description to be updated for the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetDescription(this AzurePipelinesUpdateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Description"/></em></p>
        ///   <p>Description to be updated for the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetDescription(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetDetect(this AzurePipelinesUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetDetect(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings EnableDetect(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings DisableDetect(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ToggleDetect(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Id"/></em></p>
        ///   <p>Id of the pipeline to update.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetId(this AzurePipelinesUpdateSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Id"/></em></p>
        ///   <p>Id of the pipeline to update.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetId(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Name"/></em></p>
        ///   <p>Name of the pipeline to update.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetName(this AzurePipelinesUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Name"/></em></p>
        ///   <p>Name of the pipeline to update.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetName(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NewName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.NewName"/></em></p>
        ///   <p>New updated name of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetNewName(this AzurePipelinesUpdateSettings toolSettings, string newName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NewName = newName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.NewName"/></em></p>
        ///   <p>New updated name of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetNewName(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NewName = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetOrg(this AzurePipelinesUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetOrg(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetProject(this AzurePipelinesUpdateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetProject(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region QueueId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.QueueId"/></em></p>
        ///   <p>Queue id of the agent pool where the pipeline needs to run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetQueueId(this AzurePipelinesUpdateSettings toolSettings, string queueId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueId = queueId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.QueueId"/></em></p>
        ///   <p>Queue id of the agent pool where the pipeline needs to run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetQueueId(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueId = null;
            return toolSettings;
        }
        #endregion
        #region YamlPath
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.YamlPath"/></em></p>
        ///   <p>Path of the pipelines yaml file in the repo.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetYamlPath(this AzurePipelinesUpdateSettings toolSettings, string yamlPath)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.YamlPath = yamlPath;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.YamlPath"/></em></p>
        ///   <p>Path of the pipelines yaml file in the repo.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetYamlPath(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.YamlPath = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetSubscription(this AzurePipelinesUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetSubscription(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetDebug(this AzurePipelinesUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetDebug(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetHelp(this AzurePipelinesUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetHelp(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetOutput(this AzurePipelinesUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetOutput(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetQuery(this AzurePipelinesUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetQuery(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings SetVerbose(this AzurePipelinesUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesUpdateSettings ResetVerbose(this AzurePipelinesUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesReleaseCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesReleaseCreateSettingsExtensions
    {
        #region ArtifactMetadataList
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/> to a new list</em></p>
        ///   <p>Space separated "alias=version_id" pairs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetArtifactMetadataList(this AzurePipelinesReleaseCreateSettings toolSettings, params string[] artifactMetadataList)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactMetadataListInternal = artifactMetadataList.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/> to a new list</em></p>
        ///   <p>Space separated "alias=version_id" pairs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetArtifactMetadataList(this AzurePipelinesReleaseCreateSettings toolSettings, IEnumerable<string> artifactMetadataList)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactMetadataListInternal = artifactMetadataList.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/></em></p>
        ///   <p>Space separated "alias=version_id" pairs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings AddArtifactMetadataList(this AzurePipelinesReleaseCreateSettings toolSettings, params string[] artifactMetadataList)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactMetadataListInternal.AddRange(artifactMetadataList);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/></em></p>
        ///   <p>Space separated "alias=version_id" pairs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings AddArtifactMetadataList(this AzurePipelinesReleaseCreateSettings toolSettings, IEnumerable<string> artifactMetadataList)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactMetadataListInternal.AddRange(artifactMetadataList);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/></em></p>
        ///   <p>Space separated "alias=version_id" pairs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ClearArtifactMetadataList(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactMetadataListInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/></em></p>
        ///   <p>Space separated "alias=version_id" pairs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings RemoveArtifactMetadataList(this AzurePipelinesReleaseCreateSettings toolSettings, params string[] artifactMetadataList)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(artifactMetadataList);
            toolSettings.ArtifactMetadataListInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzurePipelinesReleaseCreateSettings.ArtifactMetadataList"/></em></p>
        ///   <p>Space separated "alias=version_id" pairs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings RemoveArtifactMetadataList(this AzurePipelinesReleaseCreateSettings toolSettings, IEnumerable<string> artifactMetadataList)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(artifactMetadataList);
            toolSettings.ArtifactMetadataListInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region DefinitionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.DefinitionId"/></em></p>
        ///   <p>ID of the definition to create. Required if --definition-name is not supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetDefinitionId(this AzurePipelinesReleaseCreateSettings toolSettings, string definitionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionId = definitionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.DefinitionId"/></em></p>
        ///   <p>ID of the definition to create. Required if --definition-name is not supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetDefinitionId(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionId = null;
            return toolSettings;
        }
        #endregion
        #region DefinitionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.DefinitionName"/></em></p>
        ///   <p>Name of the definition to create. Ignored if --definition-id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetDefinitionName(this AzurePipelinesReleaseCreateSettings toolSettings, string definitionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionName = definitionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.DefinitionName"/></em></p>
        ///   <p>Name of the definition to create. Ignored if --definition-id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetDefinitionName(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionName = null;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Description"/></em></p>
        ///   <p>Description of the release.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetDescription(this AzurePipelinesReleaseCreateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Description"/></em></p>
        ///   <p>Description of the release.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetDescription(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetDetect(this AzurePipelinesReleaseCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetDetect(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesReleaseCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings EnableDetect(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesReleaseCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings DisableDetect(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesReleaseCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ToggleDetect(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Open"/></em></p>
        ///   <p>Open the release results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetOpen(this AzurePipelinesReleaseCreateSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Open"/></em></p>
        ///   <p>Open the release results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetOpen(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetOrg(this AzurePipelinesReleaseCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetOrg(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetProject(this AzurePipelinesReleaseCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetProject(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetSubscription(this AzurePipelinesReleaseCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetSubscription(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetDebug(this AzurePipelinesReleaseCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetDebug(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetHelp(this AzurePipelinesReleaseCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetHelp(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetOutput(this AzurePipelinesReleaseCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetOutput(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetQuery(this AzurePipelinesReleaseCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetQuery(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings SetVerbose(this AzurePipelinesReleaseCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseCreateSettings ResetVerbose(this AzurePipelinesReleaseCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesReleaseListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesReleaseListSettingsExtensions
    {
        #region DefinitionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.DefinitionId"/></em></p>
        ///   <p>ID of definition to list releases for.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetDefinitionId(this AzurePipelinesReleaseListSettings toolSettings, string definitionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionId = definitionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.DefinitionId"/></em></p>
        ///   <p>ID of definition to list releases for.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetDefinitionId(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetDetect(this AzurePipelinesReleaseListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetDetect(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesReleaseListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings EnableDetect(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesReleaseListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings DisableDetect(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesReleaseListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ToggleDetect(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetOrg(this AzurePipelinesReleaseListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetOrg(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetProject(this AzurePipelinesReleaseListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetProject(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region SourceBranch
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.SourceBranch"/></em></p>
        ///   <p>Filter releases for this branch.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetSourceBranch(this AzurePipelinesReleaseListSettings toolSettings, string sourceBranch)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SourceBranch = sourceBranch;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.SourceBranch"/></em></p>
        ///   <p>Filter releases for this branch.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetSourceBranch(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SourceBranch = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Status"/></em></p>
        ///   <p>Limit to releases with this status.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetStatus(this AzurePipelinesReleaseListSettings toolSettings, string status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Status"/></em></p>
        ///   <p>Limit to releases with this status.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetStatus(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Top"/></em></p>
        ///   <p>Maximum number of releases to list. Default is 50.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetTop(this AzurePipelinesReleaseListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Top"/></em></p>
        ///   <p>Maximum number of releases to list. Default is 50.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetTop(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetSubscription(this AzurePipelinesReleaseListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetSubscription(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetDebug(this AzurePipelinesReleaseListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetDebug(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetHelp(this AzurePipelinesReleaseListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetHelp(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetOutput(this AzurePipelinesReleaseListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetOutput(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetQuery(this AzurePipelinesReleaseListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetQuery(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings SetVerbose(this AzurePipelinesReleaseListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseListSettings ResetVerbose(this AzurePipelinesReleaseListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesReleaseShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesReleaseShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Id"/></em></p>
        ///   <p>ID of the release.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetId(this AzurePipelinesReleaseShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Id"/></em></p>
        ///   <p>ID of the release.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetId(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetDetect(this AzurePipelinesReleaseShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetDetect(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesReleaseShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings EnableDetect(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesReleaseShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings DisableDetect(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesReleaseShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ToggleDetect(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Open"/></em></p>
        ///   <p>Open the release results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetOpen(this AzurePipelinesReleaseShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Open"/></em></p>
        ///   <p>Open the release results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetOpen(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetOrg(this AzurePipelinesReleaseShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetOrg(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetProject(this AzurePipelinesReleaseShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetProject(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetSubscription(this AzurePipelinesReleaseShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetSubscription(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetDebug(this AzurePipelinesReleaseShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetDebug(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetHelp(this AzurePipelinesReleaseShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetHelp(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetOutput(this AzurePipelinesReleaseShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetOutput(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetQuery(this AzurePipelinesReleaseShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetQuery(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings SetVerbose(this AzurePipelinesReleaseShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseShowSettings ResetVerbose(this AzurePipelinesReleaseShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsListSettingsExtensions
    {
        #region Branch
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Branch"/></em></p>
        ///   <p>Filter by builds for this branch.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetBranch(this AzurePipelinesRunsListSettings toolSettings, string branch)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = branch;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Branch"/></em></p>
        ///   <p>Filter by builds for this branch.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetBranch(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetDetect(this AzurePipelinesRunsListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetDetect(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings EnableDetect(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings DisableDetect(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ToggleDetect(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetOrg(this AzurePipelinesRunsListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetOrg(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region PipelineIds
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.PipelineIds"/></em></p>
        ///   <p>ID of definition to list builds for.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetPipelineIds(this AzurePipelinesRunsListSettings toolSettings, string pipelineIds)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineIds = pipelineIds;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.PipelineIds"/></em></p>
        ///   <p>ID of definition to list builds for.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetPipelineIds(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineIds = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetProject(this AzurePipelinesRunsListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetProject(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region QueryOrder
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.QueryOrder"/></em></p>
        ///   <p>Order of pipeline runs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetQueryOrder(this AzurePipelinesRunsListSettings toolSettings, PipelinesRunsListQueryOrder queryOrder)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryOrder = queryOrder;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.QueryOrder"/></em></p>
        ///   <p>Order of pipeline runs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetQueryOrder(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryOrder = null;
            return toolSettings;
        }
        #endregion
        #region Reason
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Reason"/></em></p>
        ///   <p>Limit to builds with this reason.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetReason(this AzurePipelinesRunsListSettings toolSettings, PipelinesRunsReason reason)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Reason = reason;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Reason"/></em></p>
        ///   <p>Limit to builds with this reason.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetReason(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Reason = null;
            return toolSettings;
        }
        #endregion
        #region RequestedFor
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.RequestedFor"/></em></p>
        ///   <p>Limit to builds requested for this user or group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetRequestedFor(this AzurePipelinesRunsListSettings toolSettings, string requestedFor)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RequestedFor = requestedFor;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.RequestedFor"/></em></p>
        ///   <p>Limit to builds requested for this user or group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetRequestedFor(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RequestedFor = null;
            return toolSettings;
        }
        #endregion
        #region Result
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Result"/></em></p>
        ///   <p>Limit to builds with this result.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetResult(this AzurePipelinesRunsListSettings toolSettings, PipelinesRunsResult result)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Result = result;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Result"/></em></p>
        ///   <p>Limit to builds with this result.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetResult(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Result = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Status"/></em></p>
        ///   <p>Limit to builds with this status.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetStatus(this AzurePipelinesRunsListSettings toolSettings, PipelinesRunsStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Status"/></em></p>
        ///   <p>Limit to builds with this status.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetStatus(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Tags
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Tags"/></em></p>
        ///   <p>Limit to builds with each of the specified tags. Space separated.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetTags(this AzurePipelinesRunsListSettings toolSettings, string tags)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = tags;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Tags"/></em></p>
        ///   <p>Limit to builds with each of the specified tags. Space separated.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetTags(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Top"/></em></p>
        ///   <p>Maximum number of builds to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetTop(this AzurePipelinesRunsListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Top"/></em></p>
        ///   <p>Maximum number of builds to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetTop(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetSubscription(this AzurePipelinesRunsListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetSubscription(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetDebug(this AzurePipelinesRunsListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetDebug(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetHelp(this AzurePipelinesRunsListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetHelp(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetOutput(this AzurePipelinesRunsListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetOutput(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetQuery(this AzurePipelinesRunsListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetQuery(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings SetVerbose(this AzurePipelinesRunsListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsListSettings ResetVerbose(this AzurePipelinesRunsListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Id"/></em></p>
        ///   <p>ID of the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetId(this AzurePipelinesRunsShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Id"/></em></p>
        ///   <p>ID of the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetId(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetDetect(this AzurePipelinesRunsShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetDetect(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings EnableDetect(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings DisableDetect(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ToggleDetect(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Open"/></em></p>
        ///   <p>Open the build results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetOpen(this AzurePipelinesRunsShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Open"/></em></p>
        ///   <p>Open the build results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetOpen(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetOrg(this AzurePipelinesRunsShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetOrg(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetProject(this AzurePipelinesRunsShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetProject(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetSubscription(this AzurePipelinesRunsShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetSubscription(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetDebug(this AzurePipelinesRunsShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetDebug(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetHelp(this AzurePipelinesRunsShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetHelp(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetOutput(this AzurePipelinesRunsShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetOutput(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetQuery(this AzurePipelinesRunsShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetQuery(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings SetVerbose(this AzurePipelinesRunsShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsShowSettings ResetVerbose(this AzurePipelinesRunsShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesPoolListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesPoolListSettingsExtensions
    {
        #region Action
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Action"/></em></p>
        ///   <p>Filter the list with user action permitted.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetAction(this AzurePipelinesPoolListSettings toolSettings, PipelinesPoolAction action)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = action;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Action"/></em></p>
        ///   <p>Filter the list with user action permitted.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetAction(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetDetect(this AzurePipelinesPoolListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetDetect(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesPoolListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings EnableDetect(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesPoolListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings DisableDetect(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesPoolListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ToggleDetect(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetOrg(this AzurePipelinesPoolListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetOrg(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region PoolName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.PoolName"/></em></p>
        ///   <p>Filter the list with matching pool name.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetPoolName(this AzurePipelinesPoolListSettings toolSettings, string poolName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolName = poolName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.PoolName"/></em></p>
        ///   <p>Filter the list with matching pool name.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetPoolName(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolName = null;
            return toolSettings;
        }
        #endregion
        #region PoolType
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.PoolType"/></em></p>
        ///   <p>Filter the list with type of pool.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetPoolType(this AzurePipelinesPoolListSettings toolSettings, PipelinesPoolListPoolType poolType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolType = poolType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.PoolType"/></em></p>
        ///   <p>Filter the list with type of pool.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetPoolType(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolType = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetSubscription(this AzurePipelinesPoolListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetSubscription(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetDebug(this AzurePipelinesPoolListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetDebug(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetHelp(this AzurePipelinesPoolListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetHelp(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetOutput(this AzurePipelinesPoolListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetOutput(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetQuery(this AzurePipelinesPoolListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetQuery(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings SetVerbose(this AzurePipelinesPoolListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolListSettings ResetVerbose(this AzurePipelinesPoolListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesPoolShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesPoolShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Id"/></em></p>
        ///   <p>Id of the pool to list the details.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetId(this AzurePipelinesPoolShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Id"/></em></p>
        ///   <p>Id of the pool to list the details.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetId(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Action
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Action"/></em></p>
        ///   <p>Filter the list with user action permitted.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetAction(this AzurePipelinesPoolShowSettings toolSettings, PipelinesPoolAction action)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = action;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Action"/></em></p>
        ///   <p>Filter the list with user action permitted.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetAction(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetDetect(this AzurePipelinesPoolShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetDetect(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesPoolShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings EnableDetect(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesPoolShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings DisableDetect(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesPoolShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ToggleDetect(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetOrg(this AzurePipelinesPoolShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetOrg(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetSubscription(this AzurePipelinesPoolShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetSubscription(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetDebug(this AzurePipelinesPoolShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetDebug(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetHelp(this AzurePipelinesPoolShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetHelp(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetOutput(this AzurePipelinesPoolShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetOutput(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetQuery(this AzurePipelinesPoolShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetQuery(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesPoolShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings SetVerbose(this AzurePipelinesPoolShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesPoolShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesPoolShowSettings ResetVerbose(this AzurePipelinesPoolShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesQueueListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesQueueListSettingsExtensions
    {
        #region Action
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Action"/></em></p>
        ///   <p>Filter by whether the calling user has use or manage permissions.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetAction(this AzurePipelinesQueueListSettings toolSettings, PipelinesPoolAction action)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = action;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Action"/></em></p>
        ///   <p>Filter by whether the calling user has use or manage permissions.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetAction(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetDetect(this AzurePipelinesQueueListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetDetect(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesQueueListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings EnableDetect(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesQueueListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings DisableDetect(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesQueueListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ToggleDetect(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetOrg(this AzurePipelinesQueueListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetOrg(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetProject(this AzurePipelinesQueueListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetProject(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.QueueName"/></em></p>
        ///   <p>Filter the list with matching queue name regex. e.g. \*ubuntu\* for queue with name 'Hosted Ubuntu 1604'.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetQueueName(this AzurePipelinesQueueListSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.QueueName"/></em></p>
        ///   <p>Filter the list with matching queue name regex. e.g. \*ubuntu\* for queue with name 'Hosted Ubuntu 1604'.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetQueueName(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetSubscription(this AzurePipelinesQueueListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetSubscription(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetDebug(this AzurePipelinesQueueListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetDebug(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetHelp(this AzurePipelinesQueueListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetHelp(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetOutput(this AzurePipelinesQueueListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetOutput(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetQuery(this AzurePipelinesQueueListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetQuery(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings SetVerbose(this AzurePipelinesQueueListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueListSettings ResetVerbose(this AzurePipelinesQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesQueueShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesQueueShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Id"/></em></p>
        ///   <p>Id of the agent queue to get information about.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetId(this AzurePipelinesQueueShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Id"/></em></p>
        ///   <p>Id of the agent queue to get information about.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetId(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Action
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Action"/></em></p>
        ///   <p>Filter by whether the calling user has use or manage permissions.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetAction(this AzurePipelinesQueueShowSettings toolSettings, PipelinesPoolAction action)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = action;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Action"/></em></p>
        ///   <p>Filter by whether the calling user has use or manage permissions.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetAction(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetDetect(this AzurePipelinesQueueShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetDetect(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesQueueShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings EnableDetect(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesQueueShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings DisableDetect(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesQueueShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ToggleDetect(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetOrg(this AzurePipelinesQueueShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetOrg(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetProject(this AzurePipelinesQueueShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetProject(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetSubscription(this AzurePipelinesQueueShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetSubscription(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetDebug(this AzurePipelinesQueueShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetDebug(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetHelp(this AzurePipelinesQueueShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetHelp(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetOutput(this AzurePipelinesQueueShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetOutput(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetQuery(this AzurePipelinesQueueShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetQuery(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesQueueShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings SetVerbose(this AzurePipelinesQueueShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesQueueShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesQueueShowSettings ResetVerbose(this AzurePipelinesQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetName(this AzurePipelinesVariableCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetName(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region AllowOverride
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetAllowOverride(this AzurePipelinesVariableCreateSettings toolSettings, bool? allowOverride)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = allowOverride;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetAllowOverride(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableCreateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings EnableAllowOverride(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableCreateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings DisableAllowOverride(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableCreateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ToggleAllowOverride(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = !toolSettings.AllowOverride;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetDetect(this AzurePipelinesVariableCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetDetect(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings EnableDetect(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings DisableDetect(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ToggleDetect(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetOrg(this AzurePipelinesVariableCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetOrg(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region PipelineId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetPipelineId(this AzurePipelinesVariableCreateSettings toolSettings, string pipelineId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = pipelineId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetPipelineId(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = null;
            return toolSettings;
        }
        #endregion
        #region PipelineName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --pipeline-id parameter is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetPipelineName(this AzurePipelinesVariableCreateSettings toolSettings, string pipelineName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = pipelineName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --pipeline-id parameter is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetPipelineName(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetProject(this AzurePipelinesVariableCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetProject(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Secret
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Secret"/></em></p>
        ///   <p>Indicates whether the variable's value is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetSecret(this AzurePipelinesVariableCreateSettings toolSettings, bool? secret)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = secret;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Secret"/></em></p>
        ///   <p>Indicates whether the variable's value is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetSecret(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableCreateSettings.Secret"/></em></p>
        ///   <p>Indicates whether the variable's value is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings EnableSecret(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableCreateSettings.Secret"/></em></p>
        ///   <p>Indicates whether the variable's value is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings DisableSecret(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableCreateSettings.Secret"/></em></p>
        ///   <p>Indicates whether the variable's value is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ToggleSecret(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = !toolSettings.Secret;
            return toolSettings;
        }
        #endregion
        #region Value
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Value"/></em></p>
        ///   <p>Value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with &lt;problematic ids="id58" refid="id57"&gt;AZURE_DEVOPS_EXT_PIPELINE_VAR_&lt;/problematic&gt; or user will be prompted to enter it via standard input. e.g. A variable named `MySecret` can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetValue(this AzurePipelinesVariableCreateSettings toolSettings, string value)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = value;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Value"/></em></p>
        ///   <p>Value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with &lt;problematic ids="id58" refid="id57"&gt;AZURE_DEVOPS_EXT_PIPELINE_VAR_&lt;/problematic&gt; or user will be prompted to enter it via standard input. e.g. A variable named `MySecret` can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetValue(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetSubscription(this AzurePipelinesVariableCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetSubscription(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetDebug(this AzurePipelinesVariableCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetDebug(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetHelp(this AzurePipelinesVariableCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetHelp(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetOutput(this AzurePipelinesVariableCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetOutput(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetQuery(this AzurePipelinesVariableCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetQuery(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings SetVerbose(this AzurePipelinesVariableCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableCreateSettings ResetVerbose(this AzurePipelinesVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableDeleteSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Name"/></em></p>
        ///   <p>Name of the variable to delete.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetName(this AzurePipelinesVariableDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Name"/></em></p>
        ///   <p>Name of the variable to delete.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetName(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetDetect(this AzurePipelinesVariableDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetDetect(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings EnableDetect(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings DisableDetect(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ToggleDetect(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetOrg(this AzurePipelinesVariableDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetOrg(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region PipelineId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetPipelineId(this AzurePipelinesVariableDeleteSettings toolSettings, string pipelineId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = pipelineId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetPipelineId(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = null;
            return toolSettings;
        }
        #endregion
        #region PipelineName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetPipelineName(this AzurePipelinesVariableDeleteSettings toolSettings, string pipelineName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = pipelineName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetPipelineName(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetProject(this AzurePipelinesVariableDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetProject(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetYes(this AzurePipelinesVariableDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetYes(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetSubscription(this AzurePipelinesVariableDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetSubscription(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetDebug(this AzurePipelinesVariableDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetDebug(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetHelp(this AzurePipelinesVariableDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetHelp(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetOutput(this AzurePipelinesVariableDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetOutput(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetQuery(this AzurePipelinesVariableDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetQuery(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings SetVerbose(this AzurePipelinesVariableDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableDeleteSettings ResetVerbose(this AzurePipelinesVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetDetect(this AzurePipelinesVariableListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetDetect(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings EnableDetect(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings DisableDetect(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ToggleDetect(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetOrg(this AzurePipelinesVariableListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetOrg(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region PipelineId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetPipelineId(this AzurePipelinesVariableListSettings toolSettings, string pipelineId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = pipelineId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetPipelineId(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = null;
            return toolSettings;
        }
        #endregion
        #region PipelineName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --pipeline-id parameter is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetPipelineName(this AzurePipelinesVariableListSettings toolSettings, string pipelineName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = pipelineName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --pipeline-id parameter is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetPipelineName(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetProject(this AzurePipelinesVariableListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetProject(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetSubscription(this AzurePipelinesVariableListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetSubscription(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetDebug(this AzurePipelinesVariableListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetDebug(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetHelp(this AzurePipelinesVariableListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetHelp(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetOutput(this AzurePipelinesVariableListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetOutput(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetQuery(this AzurePipelinesVariableListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetQuery(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings SetVerbose(this AzurePipelinesVariableListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableListSettings ResetVerbose(this AzurePipelinesVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableUpdateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetName(this AzurePipelinesVariableUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetName(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region AllowOverride
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetAllowOverride(this AzurePipelinesVariableUpdateSettings toolSettings, bool? allowOverride)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = allowOverride;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetAllowOverride(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableUpdateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings EnableAllowOverride(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableUpdateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings DisableAllowOverride(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableUpdateSettings.AllowOverride"/></em></p>
        ///   <p>Indicates whether the value can be set at queue time.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ToggleAllowOverride(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowOverride = !toolSettings.AllowOverride;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetDetect(this AzurePipelinesVariableUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetDetect(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings EnableDetect(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings DisableDetect(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ToggleDetect(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region NewName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.NewName"/></em></p>
        ///   <p>New name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetNewName(this AzurePipelinesVariableUpdateSettings toolSettings, string newName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NewName = newName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.NewName"/></em></p>
        ///   <p>New name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetNewName(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NewName = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetOrg(this AzurePipelinesVariableUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetOrg(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region PipelineId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetPipelineId(this AzurePipelinesVariableUpdateSettings toolSettings, string pipelineId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = pipelineId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.PipelineId"/></em></p>
        ///   <p>Id of the pipeline.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetPipelineId(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineId = null;
            return toolSettings;
        }
        #endregion
        #region PipelineName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --pipeline-id parameter is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetPipelineName(this AzurePipelinesVariableUpdateSettings toolSettings, string pipelineName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = pipelineName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.PipelineName"/></em></p>
        ///   <p>Name of the pipeline. Ignored if --pipeline-id parameter is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetPipelineName(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PipelineName = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetProject(this AzurePipelinesVariableUpdateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetProject(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region PromptValue
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetPromptValue(this AzurePipelinesVariableUpdateSettings toolSettings, bool? promptValue)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = promptValue;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetPromptValue(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings EnablePromptValue(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings DisablePromptValue(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings TogglePromptValue(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = !toolSettings.PromptValue;
            return toolSettings;
        }
        #endregion
        #region Secret
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetSecret(this AzurePipelinesVariableUpdateSettings toolSettings, bool? secret)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = secret;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetSecret(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings EnableSecret(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings DisableSecret(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ToggleSecret(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = !toolSettings.Secret;
            return toolSettings;
        }
        #endregion
        #region Value
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Value"/></em></p>
        ///   <p>New value of the variable. For secret variables, use --prompt-value parameter, to be prompted to enter it via standard input. For non-interactive consoles it can be picked from environment variable prefixed with &lt;problematic ids="id60" refid="id59"&gt;AZURE_DEVOPS_EXT_PIPELINE_VAR_&lt;/problematic&gt; e.g. A variable nameed `MySecret` can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetValue(this AzurePipelinesVariableUpdateSettings toolSettings, string value)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = value;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Value"/></em></p>
        ///   <p>New value of the variable. For secret variables, use --prompt-value parameter, to be prompted to enter it via standard input. For non-interactive consoles it can be picked from environment variable prefixed with &lt;problematic ids="id60" refid="id59"&gt;AZURE_DEVOPS_EXT_PIPELINE_VAR_&lt;/problematic&gt; e.g. A variable nameed `MySecret` can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetValue(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetSubscription(this AzurePipelinesVariableUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetSubscription(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetDebug(this AzurePipelinesVariableUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetDebug(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetHelp(this AzurePipelinesVariableUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetHelp(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetOutput(this AzurePipelinesVariableUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetOutput(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetQuery(this AzurePipelinesVariableUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetQuery(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings SetVerbose(this AzurePipelinesVariableUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableUpdateSettings ResetVerbose(this AzurePipelinesVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Name"/></em></p>
        ///   <p>Name of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetName(this AzurePipelinesVariableGroupCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Name"/></em></p>
        ///   <p>Name of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetName(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Variables
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Variables"/></em></p>
        ///   <p>Variables in format key=value space separated pairs. Secret variables should be managed using `az pipelines variable-group variable` commands.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetVariables(this AzurePipelinesVariableGroupCreateSettings toolSettings, string variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Variables = variables;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Variables"/></em></p>
        ///   <p>Variables in format key=value space separated pairs. Secret variables should be managed using `az pipelines variable-group variable` commands.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetVariables(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Variables = null;
            return toolSettings;
        }
        #endregion
        #region Authorize
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetAuthorize(this AzurePipelinesVariableGroupCreateSettings toolSettings, bool? authorize)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = authorize;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetAuthorize(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupCreateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings EnableAuthorize(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupCreateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings DisableAuthorize(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupCreateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ToggleAuthorize(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = !toolSettings.Authorize;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Description"/></em></p>
        ///   <p>Description of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetDescription(this AzurePipelinesVariableGroupCreateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Description"/></em></p>
        ///   <p>Description of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetDescription(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetDetect(this AzurePipelinesVariableGroupCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetDetect(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings EnableDetect(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings DisableDetect(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ToggleDetect(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetOrg(this AzurePipelinesVariableGroupCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetOrg(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetProject(this AzurePipelinesVariableGroupCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetProject(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetSubscription(this AzurePipelinesVariableGroupCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetSubscription(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetDebug(this AzurePipelinesVariableGroupCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetDebug(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetHelp(this AzurePipelinesVariableGroupCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetHelp(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetOutput(this AzurePipelinesVariableGroupCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetOutput(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetQuery(this AzurePipelinesVariableGroupCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetQuery(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings SetVerbose(this AzurePipelinesVariableGroupCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupCreateSettings ResetVerbose(this AzurePipelinesVariableGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupDeleteSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetGroupId(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetGroupId(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetDetect(this AzurePipelinesVariableGroupDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetDetect(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings EnableDetect(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings DisableDetect(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ToggleDetect(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetOrg(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetOrg(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetProject(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetProject(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetYes(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetYes(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetSubscription(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetSubscription(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetDebug(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetDebug(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetHelp(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetHelp(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetOutput(this AzurePipelinesVariableGroupDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetOutput(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetQuery(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetQuery(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings SetVerbose(this AzurePipelinesVariableGroupDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupDeleteSettings ResetVerbose(this AzurePipelinesVariableGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupListSettingsExtensions
    {
        #region Action
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Action"/></em></p>
        ///   <p>Action filter for the variable group. It specifies the action which can be performed on the variable groups.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetAction(this AzurePipelinesVariableGroupListSettings toolSettings, PipelinesPoolAction action)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = action;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Action"/></em></p>
        ///   <p>Action filter for the variable group. It specifies the action which can be performed on the variable groups.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetAction(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = null;
            return toolSettings;
        }
        #endregion
        #region ContinuationToken
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.ContinuationToken"/></em></p>
        ///   <p>Gets the variable groups after the continuation token provided.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetContinuationToken(this AzurePipelinesVariableGroupListSettings toolSettings, string continuationToken)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContinuationToken = continuationToken;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.ContinuationToken"/></em></p>
        ///   <p>Gets the variable groups after the continuation token provided.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetContinuationToken(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContinuationToken = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetDetect(this AzurePipelinesVariableGroupListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetDetect(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings EnableDetect(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings DisableDetect(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ToggleDetect(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region GroupName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.GroupName"/></em></p>
        ///   <p>Name of the variable group. Wildcards are accepted. e.g. var_group\*.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetGroupName(this AzurePipelinesVariableGroupListSettings toolSettings, string groupName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupName = groupName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.GroupName"/></em></p>
        ///   <p>Name of the variable group. Wildcards are accepted. e.g. var_group\*.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetGroupName(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupName = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetOrg(this AzurePipelinesVariableGroupListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetOrg(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetProject(this AzurePipelinesVariableGroupListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetProject(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region QueryOrder
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.QueryOrder"/></em></p>
        ///   <p>Gets the results in the defined order.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetQueryOrder(this AzurePipelinesVariableGroupListSettings toolSettings, PipelinesVariableGroupListQueryOrder queryOrder)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryOrder = queryOrder;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.QueryOrder"/></em></p>
        ///   <p>Gets the results in the defined order.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetQueryOrder(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryOrder = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Top"/></em></p>
        ///   <p>Number of variable groups to get.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetTop(this AzurePipelinesVariableGroupListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Top"/></em></p>
        ///   <p>Number of variable groups to get.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetTop(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetSubscription(this AzurePipelinesVariableGroupListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetSubscription(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetDebug(this AzurePipelinesVariableGroupListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetDebug(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetHelp(this AzurePipelinesVariableGroupListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetHelp(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetOutput(this AzurePipelinesVariableGroupListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetOutput(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetQuery(this AzurePipelinesVariableGroupListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetQuery(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings SetVerbose(this AzurePipelinesVariableGroupListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupListSettings ResetVerbose(this AzurePipelinesVariableGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupShowSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.GroupId"/></em></p>
        ///   <p>ID of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetGroupId(this AzurePipelinesVariableGroupShowSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.GroupId"/></em></p>
        ///   <p>ID of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetGroupId(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetDetect(this AzurePipelinesVariableGroupShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetDetect(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings EnableDetect(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings DisableDetect(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ToggleDetect(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetOrg(this AzurePipelinesVariableGroupShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetOrg(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetProject(this AzurePipelinesVariableGroupShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetProject(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetSubscription(this AzurePipelinesVariableGroupShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetSubscription(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetDebug(this AzurePipelinesVariableGroupShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetDebug(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetHelp(this AzurePipelinesVariableGroupShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetHelp(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetOutput(this AzurePipelinesVariableGroupShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetOutput(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetQuery(this AzurePipelinesVariableGroupShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetQuery(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings SetVerbose(this AzurePipelinesVariableGroupShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupShowSettings ResetVerbose(this AzurePipelinesVariableGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupUpdateSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetGroupId(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetGroupId(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region Authorize
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetAuthorize(this AzurePipelinesVariableGroupUpdateSettings toolSettings, bool? authorize)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = authorize;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetAuthorize(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupUpdateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings EnableAuthorize(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupUpdateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings DisableAuthorize(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupUpdateSettings.Authorize"/></em></p>
        ///   <p>Whether the variable group should be accessible by all pipelines.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ToggleAuthorize(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Authorize = !toolSettings.Authorize;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Description"/></em></p>
        ///   <p>New description of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetDescription(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Description"/></em></p>
        ///   <p>New description of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetDescription(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetDetect(this AzurePipelinesVariableGroupUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetDetect(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings EnableDetect(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings DisableDetect(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ToggleDetect(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Name"/></em></p>
        ///   <p>New name of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetName(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Name"/></em></p>
        ///   <p>New name of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetName(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetOrg(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetOrg(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetProject(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetProject(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetSubscription(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetSubscription(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetDebug(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetDebug(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetHelp(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetHelp(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetOutput(this AzurePipelinesVariableGroupUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetOutput(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetQuery(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetQuery(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings SetVerbose(this AzurePipelinesVariableGroupUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupUpdateSettings ResetVerbose(this AzurePipelinesVariableGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesAgentListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesAgentListSettingsExtensions
    {
        #region PoolId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.PoolId"/></em></p>
        ///   <p>The agent pool containing the agents.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetPoolId(this AzurePipelinesAgentListSettings toolSettings, string poolId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolId = poolId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.PoolId"/></em></p>
        ///   <p>The agent pool containing the agents.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetPoolId(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolId = null;
            return toolSettings;
        }
        #endregion
        #region AgentName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.AgentName"/></em></p>
        ///   <p>Filter on agent name.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetAgentName(this AzurePipelinesAgentListSettings toolSettings, string agentName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AgentName = agentName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.AgentName"/></em></p>
        ///   <p>Filter on agent name.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetAgentName(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AgentName = null;
            return toolSettings;
        }
        #endregion
        #region Demands
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Demands"/></em></p>
        ///   <p>Filter by demands the agents can satisfy. Comma separated list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetDemands(this AzurePipelinesAgentListSettings toolSettings, string demands)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Demands = demands;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Demands"/></em></p>
        ///   <p>Filter by demands the agents can satisfy. Comma separated list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetDemands(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Demands = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetDetect(this AzurePipelinesAgentListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetDetect(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings EnableDetect(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings DisableDetect(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ToggleDetect(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region IncludeAssignedRequest
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetIncludeAssignedRequest(this AzurePipelinesAgentListSettings toolSettings, bool? includeAssignedRequest)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = includeAssignedRequest;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetIncludeAssignedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentListSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings EnableIncludeAssignedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentListSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings DisableIncludeAssignedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentListSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ToggleIncludeAssignedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = !toolSettings.IncludeAssignedRequest;
            return toolSettings;
        }
        #endregion
        #region IncludeCapabilities
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetIncludeCapabilities(this AzurePipelinesAgentListSettings toolSettings, bool? includeCapabilities)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = includeCapabilities;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetIncludeCapabilities(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentListSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings EnableIncludeCapabilities(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentListSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings DisableIncludeCapabilities(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentListSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ToggleIncludeCapabilities(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = !toolSettings.IncludeCapabilities;
            return toolSettings;
        }
        #endregion
        #region IncludeLastCompletedRequest
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetIncludeLastCompletedRequest(this AzurePipelinesAgentListSettings toolSettings, bool? includeLastCompletedRequest)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = includeLastCompletedRequest;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetIncludeLastCompletedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentListSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings EnableIncludeLastCompletedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentListSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings DisableIncludeLastCompletedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentListSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ToggleIncludeLastCompletedRequest(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = !toolSettings.IncludeLastCompletedRequest;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetOrg(this AzurePipelinesAgentListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetOrg(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetSubscription(this AzurePipelinesAgentListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetSubscription(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetDebug(this AzurePipelinesAgentListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetDebug(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetHelp(this AzurePipelinesAgentListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetHelp(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetOutput(this AzurePipelinesAgentListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetOutput(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetQuery(this AzurePipelinesAgentListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetQuery(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings SetVerbose(this AzurePipelinesAgentListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentListSettings ResetVerbose(this AzurePipelinesAgentListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesAgentShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesAgentShowSettingsExtensions
    {
        #region AgentId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.AgentId"/></em></p>
        ///   <p>The agent ID to get information about.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetAgentId(this AzurePipelinesAgentShowSettings toolSettings, string agentId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AgentId = agentId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.AgentId"/></em></p>
        ///   <p>The agent ID to get information about.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetAgentId(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AgentId = null;
            return toolSettings;
        }
        #endregion
        #region PoolId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.PoolId"/></em></p>
        ///   <p>The agent pool containing the agent.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetPoolId(this AzurePipelinesAgentShowSettings toolSettings, string poolId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolId = poolId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.PoolId"/></em></p>
        ///   <p>The agent pool containing the agent.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetPoolId(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PoolId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetDetect(this AzurePipelinesAgentShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetDetect(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings EnableDetect(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings DisableDetect(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ToggleDetect(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region IncludeAssignedRequest
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetIncludeAssignedRequest(this AzurePipelinesAgentShowSettings toolSettings, bool? includeAssignedRequest)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = includeAssignedRequest;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetIncludeAssignedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentShowSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings EnableIncludeAssignedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentShowSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings DisableIncludeAssignedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentShowSettings.IncludeAssignedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' current work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ToggleIncludeAssignedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeAssignedRequest = !toolSettings.IncludeAssignedRequest;
            return toolSettings;
        }
        #endregion
        #region IncludeCapabilities
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetIncludeCapabilities(this AzurePipelinesAgentShowSettings toolSettings, bool? includeCapabilities)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = includeCapabilities;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetIncludeCapabilities(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentShowSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings EnableIncludeCapabilities(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentShowSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings DisableIncludeCapabilities(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentShowSettings.IncludeCapabilities"/></em></p>
        ///   <p>Whether to include the agents' capabilities in the response.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ToggleIncludeCapabilities(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeCapabilities = !toolSettings.IncludeCapabilities;
            return toolSettings;
        }
        #endregion
        #region IncludeLastCompletedRequest
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetIncludeLastCompletedRequest(this AzurePipelinesAgentShowSettings toolSettings, bool? includeLastCompletedRequest)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = includeLastCompletedRequest;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetIncludeLastCompletedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesAgentShowSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings EnableIncludeLastCompletedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesAgentShowSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings DisableIncludeLastCompletedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesAgentShowSettings.IncludeLastCompletedRequest"/></em></p>
        ///   <p>Whether to include details about the agents' most recent completed work.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ToggleIncludeLastCompletedRequest(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeLastCompletedRequest = !toolSettings.IncludeLastCompletedRequest;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetOrg(this AzurePipelinesAgentShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetOrg(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetSubscription(this AzurePipelinesAgentShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetSubscription(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetDebug(this AzurePipelinesAgentShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetDebug(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetHelp(this AzurePipelinesAgentShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetHelp(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetOutput(this AzurePipelinesAgentShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetOutput(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetQuery(this AzurePipelinesAgentShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetQuery(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesAgentShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings SetVerbose(this AzurePipelinesAgentShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesAgentShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesAgentShowSettings ResetVerbose(this AzurePipelinesAgentShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildListSettingsExtensions
    {
        #region Branch
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Branch"/></em></p>
        ///   <p>Filter by builds for this branch.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetBranch(this AzurePipelinesBuildListSettings toolSettings, string branch)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = branch;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Branch"/></em></p>
        ///   <p>Filter by builds for this branch.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetBranch(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = null;
            return toolSettings;
        }
        #endregion
        #region DefinitionIds
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.DefinitionIds"/></em></p>
        ///   <p>IDs (space separated) of definitions to list builds for.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetDefinitionIds(this AzurePipelinesBuildListSettings toolSettings, string definitionIds)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionIds = definitionIds;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.DefinitionIds"/></em></p>
        ///   <p>IDs (space separated) of definitions to list builds for.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetDefinitionIds(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionIds = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetDetect(this AzurePipelinesBuildListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetDetect(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings EnableDetect(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings DisableDetect(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ToggleDetect(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetOrg(this AzurePipelinesBuildListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetOrg(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetProject(this AzurePipelinesBuildListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetProject(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Reason
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Reason"/></em></p>
        ///   <p>Limit to builds with this reason.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetReason(this AzurePipelinesBuildListSettings toolSettings, PipelinesRunsReason reason)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Reason = reason;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Reason"/></em></p>
        ///   <p>Limit to builds with this reason.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetReason(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Reason = null;
            return toolSettings;
        }
        #endregion
        #region RequestedFor
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.RequestedFor"/></em></p>
        ///   <p>Limit to builds requested for this user or group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetRequestedFor(this AzurePipelinesBuildListSettings toolSettings, string requestedFor)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RequestedFor = requestedFor;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.RequestedFor"/></em></p>
        ///   <p>Limit to builds requested for this user or group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetRequestedFor(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RequestedFor = null;
            return toolSettings;
        }
        #endregion
        #region Result
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Result"/></em></p>
        ///   <p>Limit to builds with this result.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetResult(this AzurePipelinesBuildListSettings toolSettings, PipelinesRunsResult result)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Result = result;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Result"/></em></p>
        ///   <p>Limit to builds with this result.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetResult(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Result = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Status"/></em></p>
        ///   <p>Limit to builds with this status.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetStatus(this AzurePipelinesBuildListSettings toolSettings, PipelinesRunsStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Status"/></em></p>
        ///   <p>Limit to builds with this status.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetStatus(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Tags
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Tags"/></em></p>
        ///   <p>Limit to builds with each of the specified tags. Space separated.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetTags(this AzurePipelinesBuildListSettings toolSettings, string tags)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = tags;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Tags"/></em></p>
        ///   <p>Limit to builds with each of the specified tags. Space separated.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetTags(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Top"/></em></p>
        ///   <p>Maximum number of builds to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetTop(this AzurePipelinesBuildListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Top"/></em></p>
        ///   <p>Maximum number of builds to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetTop(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetSubscription(this AzurePipelinesBuildListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetSubscription(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetDebug(this AzurePipelinesBuildListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetDebug(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetHelp(this AzurePipelinesBuildListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetHelp(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetOutput(this AzurePipelinesBuildListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetOutput(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetQuery(this AzurePipelinesBuildListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetQuery(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings SetVerbose(this AzurePipelinesBuildListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildListSettings ResetVerbose(this AzurePipelinesBuildListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildQueueSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildQueueSettingsExtensions
    {
        #region Branch
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Branch"/></em></p>
        ///   <p>Branch to build. Required if there is not a default branch set up on the definition. Example: refs/heads/master or master or refs/pull/1/merge.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetBranch(this AzurePipelinesBuildQueueSettings toolSettings, string branch)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = branch;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Branch"/></em></p>
        ///   <p>Branch to build. Required if there is not a default branch set up on the definition. Example: refs/heads/master or master or refs/pull/1/merge.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetBranch(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Branch = null;
            return toolSettings;
        }
        #endregion
        #region CommitId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.CommitId"/></em></p>
        ///   <p>Commit ID of the branch to build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetCommitId(this AzurePipelinesBuildQueueSettings toolSettings, string commitId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CommitId = commitId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.CommitId"/></em></p>
        ///   <p>Commit ID of the branch to build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetCommitId(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CommitId = null;
            return toolSettings;
        }
        #endregion
        #region DefinitionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.DefinitionId"/></em></p>
        ///   <p>ID of the definition to queue. Required if --name is not supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetDefinitionId(this AzurePipelinesBuildQueueSettings toolSettings, string definitionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionId = definitionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.DefinitionId"/></em></p>
        ///   <p>ID of the definition to queue. Required if --name is not supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetDefinitionId(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionId = null;
            return toolSettings;
        }
        #endregion
        #region DefinitionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.DefinitionName"/></em></p>
        ///   <p>Name of the definition to queue. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetDefinitionName(this AzurePipelinesBuildQueueSettings toolSettings, string definitionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionName = definitionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.DefinitionName"/></em></p>
        ///   <p>Name of the definition to queue. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetDefinitionName(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefinitionName = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetDetect(this AzurePipelinesBuildQueueSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetDetect(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildQueueSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings EnableDetect(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildQueueSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings DisableDetect(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildQueueSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ToggleDetect(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Open"/></em></p>
        ///   <p>Open the build results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetOpen(this AzurePipelinesBuildQueueSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Open"/></em></p>
        ///   <p>Open the build results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetOpen(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetOrg(this AzurePipelinesBuildQueueSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetOrg(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetProject(this AzurePipelinesBuildQueueSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetProject(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region QueueId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.QueueId"/></em></p>
        ///   <p>Queue Id of the pool that will be used to queue the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetQueueId(this AzurePipelinesBuildQueueSettings toolSettings, string queueId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueId = queueId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.QueueId"/></em></p>
        ///   <p>Queue Id of the pool that will be used to queue the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetQueueId(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueId = null;
            return toolSettings;
        }
        #endregion
        #region Variables
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Variables"/> to a new list</em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetVariables(this AzurePipelinesBuildQueueSettings toolSettings, params string[] variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal = variables.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Variables"/> to a new list</em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetVariables(this AzurePipelinesBuildQueueSettings toolSettings, IEnumerable<string> variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal = variables.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzurePipelinesBuildQueueSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings AddVariables(this AzurePipelinesBuildQueueSettings toolSettings, params string[] variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal.AddRange(variables);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzurePipelinesBuildQueueSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings AddVariables(this AzurePipelinesBuildQueueSettings toolSettings, IEnumerable<string> variables)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal.AddRange(variables);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzurePipelinesBuildQueueSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ClearVariables(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VariablesInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzurePipelinesBuildQueueSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings RemoveVariables(this AzurePipelinesBuildQueueSettings toolSettings, params string[] variables)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(variables);
            toolSettings.VariablesInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzurePipelinesBuildQueueSettings.Variables"/></em></p>
        ///   <p>Space separated "name=value" pairs for the variables you would like to set.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings RemoveVariables(this AzurePipelinesBuildQueueSettings toolSettings, IEnumerable<string> variables)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(variables);
            toolSettings.VariablesInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetSubscription(this AzurePipelinesBuildQueueSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetSubscription(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetDebug(this AzurePipelinesBuildQueueSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetDebug(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetHelp(this AzurePipelinesBuildQueueSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetHelp(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetOutput(this AzurePipelinesBuildQueueSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetOutput(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetQuery(this AzurePipelinesBuildQueueSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetQuery(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildQueueSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings SetVerbose(this AzurePipelinesBuildQueueSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildQueueSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildQueueSettings ResetVerbose(this AzurePipelinesBuildQueueSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Id"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetId(this AzurePipelinesBuildShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Id"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetId(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetDetect(this AzurePipelinesBuildShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetDetect(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings EnableDetect(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings DisableDetect(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ToggleDetect(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Open"/></em></p>
        ///   <p>Open the build results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetOpen(this AzurePipelinesBuildShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Open"/></em></p>
        ///   <p>Open the build results page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetOpen(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetOrg(this AzurePipelinesBuildShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetOrg(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetProject(this AzurePipelinesBuildShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetProject(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetSubscription(this AzurePipelinesBuildShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetSubscription(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetDebug(this AzurePipelinesBuildShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetDebug(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetHelp(this AzurePipelinesBuildShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetHelp(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetOutput(this AzurePipelinesBuildShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetOutput(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetQuery(this AzurePipelinesBuildShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetQuery(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings SetVerbose(this AzurePipelinesBuildShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildShowSettings ResetVerbose(this AzurePipelinesBuildShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesReleaseDefinitionListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesReleaseDefinitionListSettingsExtensions
    {
        #region ArtifactSourceId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactSourceId"/></em></p>
        ///   <p>Limit results to definitions associated with this artifact_source_id. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json at <a href="https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions">https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetArtifactSourceId(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string artifactSourceId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactSourceId = artifactSourceId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactSourceId"/></em></p>
        ///   <p>Limit results to definitions associated with this artifact_source_id. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json at <a href="https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions">https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetArtifactSourceId(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactSourceId = null;
            return toolSettings;
        }
        #endregion
        #region ArtifactType
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactType"/></em></p>
        ///   <p>Release definitions with given artifactType will be returned.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetArtifactType(this AzurePipelinesReleaseDefinitionListSettings toolSettings, PipelinesReleaseDefinitionListArtifactType artifactType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactType = artifactType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.ArtifactType"/></em></p>
        ///   <p>Release definitions with given artifactType will be returned.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetArtifactType(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactType = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetDetect(this AzurePipelinesReleaseDefinitionListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetDetect(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesReleaseDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings EnableDetect(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesReleaseDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings DisableDetect(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesReleaseDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ToggleDetect(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Name"/></em></p>
        ///   <p>Limit results to definitions with this name or contains this name. Example: "FabCI".</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetName(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Name"/></em></p>
        ///   <p>Limit results to definitions with this name or contains this name. Example: "FabCI".</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetName(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetOrg(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetOrg(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetProject(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetProject(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Top"/></em></p>
        ///   <p>Maximum number of definitions to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetTop(this AzurePipelinesReleaseDefinitionListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Top"/></em></p>
        ///   <p>Maximum number of definitions to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetTop(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetSubscription(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetSubscription(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetDebug(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetDebug(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetHelp(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetHelp(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetOutput(this AzurePipelinesReleaseDefinitionListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetOutput(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetQuery(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetQuery(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings SetVerbose(this AzurePipelinesReleaseDefinitionListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionListSettings ResetVerbose(this AzurePipelinesReleaseDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesReleaseDefinitionShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesReleaseDefinitionShowSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetDetect(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetDetect(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesReleaseDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings EnableDetect(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesReleaseDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings DisableDetect(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesReleaseDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ToggleDetect(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Id"/></em></p>
        ///   <p>ID of the definition.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetId(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Id"/></em></p>
        ///   <p>ID of the definition.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetId(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Name"/></em></p>
        ///   <p>Name of the definition. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetName(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Name"/></em></p>
        ///   <p>Name of the definition. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetName(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Open"/></em></p>
        ///   <p>Open the definition summary page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetOpen(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Open"/></em></p>
        ///   <p>Open the definition summary page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetOpen(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetOrg(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetOrg(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetProject(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetProject(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetSubscription(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetSubscription(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetDebug(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetDebug(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetHelp(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetHelp(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetOutput(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetOutput(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetQuery(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetQuery(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings SetVerbose(this AzurePipelinesReleaseDefinitionShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesReleaseDefinitionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesReleaseDefinitionShowSettings ResetVerbose(this AzurePipelinesReleaseDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildTagAddSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildTagAddSettingsExtensions
    {
        #region BuildId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.BuildId"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetBuildId(this AzurePipelinesBuildTagAddSettings toolSettings, string buildId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.BuildId = buildId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.BuildId"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetBuildId(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.BuildId = null;
            return toolSettings;
        }
        #endregion
        #region Tags
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Tags"/></em></p>
        ///   <p>Tag(s) to be added to the build. [Comma seperated values].</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetTags(this AzurePipelinesBuildTagAddSettings toolSettings, string tags)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = tags;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Tags"/></em></p>
        ///   <p>Tag(s) to be added to the build. [Comma seperated values].</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetTags(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetDetect(this AzurePipelinesBuildTagAddSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetDetect(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings EnableDetect(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings DisableDetect(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ToggleDetect(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetOrg(this AzurePipelinesBuildTagAddSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetOrg(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetProject(this AzurePipelinesBuildTagAddSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetProject(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetSubscription(this AzurePipelinesBuildTagAddSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetSubscription(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetDebug(this AzurePipelinesBuildTagAddSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetDebug(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetHelp(this AzurePipelinesBuildTagAddSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetHelp(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetOutput(this AzurePipelinesBuildTagAddSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetOutput(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetQuery(this AzurePipelinesBuildTagAddSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetQuery(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings SetVerbose(this AzurePipelinesBuildTagAddSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagAddSettings ResetVerbose(this AzurePipelinesBuildTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildTagDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildTagDeleteSettingsExtensions
    {
        #region BuildId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.BuildId"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetBuildId(this AzurePipelinesBuildTagDeleteSettings toolSettings, string buildId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.BuildId = buildId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.BuildId"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetBuildId(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.BuildId = null;
            return toolSettings;
        }
        #endregion
        #region Tag
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Tag"/></em></p>
        ///   <p>Tag to be deleted from the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetTag(this AzurePipelinesBuildTagDeleteSettings toolSettings, string tag)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tag = tag;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Tag"/></em></p>
        ///   <p>Tag to be deleted from the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetTag(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tag = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetDetect(this AzurePipelinesBuildTagDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetDetect(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings EnableDetect(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings DisableDetect(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ToggleDetect(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetOrg(this AzurePipelinesBuildTagDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetOrg(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetProject(this AzurePipelinesBuildTagDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetProject(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetSubscription(this AzurePipelinesBuildTagDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetSubscription(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetDebug(this AzurePipelinesBuildTagDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetDebug(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetHelp(this AzurePipelinesBuildTagDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetHelp(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetOutput(this AzurePipelinesBuildTagDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetOutput(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetQuery(this AzurePipelinesBuildTagDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetQuery(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings SetVerbose(this AzurePipelinesBuildTagDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagDeleteSettings ResetVerbose(this AzurePipelinesBuildTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildTagListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildTagListSettingsExtensions
    {
        #region BuildId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.BuildId"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetBuildId(this AzurePipelinesBuildTagListSettings toolSettings, string buildId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.BuildId = buildId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.BuildId"/></em></p>
        ///   <p>ID of the build.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetBuildId(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.BuildId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetDetect(this AzurePipelinesBuildTagListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetDetect(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings EnableDetect(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings DisableDetect(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ToggleDetect(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetOrg(this AzurePipelinesBuildTagListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetOrg(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetProject(this AzurePipelinesBuildTagListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetProject(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetSubscription(this AzurePipelinesBuildTagListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetSubscription(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetDebug(this AzurePipelinesBuildTagListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetDebug(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetHelp(this AzurePipelinesBuildTagListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetHelp(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetOutput(this AzurePipelinesBuildTagListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetOutput(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetQuery(this AzurePipelinesBuildTagListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetQuery(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildTagListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings SetVerbose(this AzurePipelinesBuildTagListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildTagListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildTagListSettings ResetVerbose(this AzurePipelinesBuildTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildDefinitionListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildDefinitionListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetDetect(this AzurePipelinesBuildDefinitionListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetDetect(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings EnableDetect(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings DisableDetect(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildDefinitionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ToggleDetect(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Name"/></em></p>
        ///   <p>Limit results to definitions with this name or starting with this name. Examples: "FabCI" or "Fab\*".</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetName(this AzurePipelinesBuildDefinitionListSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Name"/></em></p>
        ///   <p>Limit results to definitions with this name or starting with this name. Examples: "FabCI" or "Fab\*".</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetName(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetOrg(this AzurePipelinesBuildDefinitionListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetOrg(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetProject(this AzurePipelinesBuildDefinitionListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetProject(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Repository
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Repository"/></em></p>
        ///   <p>Limit results to definitions associated with this repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetRepository(this AzurePipelinesBuildDefinitionListSettings toolSettings, string repository)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = repository;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Repository"/></em></p>
        ///   <p>Limit results to definitions associated with this repository.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetRepository(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = null;
            return toolSettings;
        }
        #endregion
        #region RepositoryType
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.RepositoryType"/></em></p>
        ///   <p>Limit results to definitions associated with this repository type. It is mandatory to pass 'repository' argument along with this argument.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetRepositoryType(this AzurePipelinesBuildDefinitionListSettings toolSettings, PipelinesRepositoryType repositoryType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RepositoryType = repositoryType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.RepositoryType"/></em></p>
        ///   <p>Limit results to definitions associated with this repository type. It is mandatory to pass 'repository' argument along with this argument.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetRepositoryType(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RepositoryType = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Top"/></em></p>
        ///   <p>Maximum number of definitions to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetTop(this AzurePipelinesBuildDefinitionListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Top"/></em></p>
        ///   <p>Maximum number of definitions to list.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetTop(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetSubscription(this AzurePipelinesBuildDefinitionListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetSubscription(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetDebug(this AzurePipelinesBuildDefinitionListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetDebug(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetHelp(this AzurePipelinesBuildDefinitionListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetHelp(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetOutput(this AzurePipelinesBuildDefinitionListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetOutput(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetQuery(this AzurePipelinesBuildDefinitionListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetQuery(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings SetVerbose(this AzurePipelinesBuildDefinitionListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionListSettings ResetVerbose(this AzurePipelinesBuildDefinitionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesBuildDefinitionShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesBuildDefinitionShowSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetDetect(this AzurePipelinesBuildDefinitionShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetDetect(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesBuildDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings EnableDetect(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesBuildDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings DisableDetect(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesBuildDefinitionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ToggleDetect(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Id"/></em></p>
        ///   <p>ID of the definition.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetId(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Id"/></em></p>
        ///   <p>ID of the definition.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetId(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Name"/></em></p>
        ///   <p>Name of the definition. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetName(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Name"/></em></p>
        ///   <p>Name of the definition. Ignored if --id is supplied.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetName(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Open"/></em></p>
        ///   <p>Open the definition summary page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetOpen(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Open"/></em></p>
        ///   <p>Open the definition summary page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetOpen(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetOrg(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetOrg(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetProject(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetProject(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetSubscription(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetSubscription(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetDebug(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetDebug(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetHelp(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetHelp(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetOutput(this AzurePipelinesBuildDefinitionShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetOutput(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetQuery(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetQuery(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesBuildDefinitionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings SetVerbose(this AzurePipelinesBuildDefinitionShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesBuildDefinitionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesBuildDefinitionShowSettings ResetVerbose(this AzurePipelinesBuildDefinitionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupVariableCreateSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetGroupId(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetGroupId(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetName(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetName(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetDetect(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetDetect(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings EnableDetect(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings DisableDetect(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ToggleDetect(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetOrg(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetOrg(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetProject(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetProject(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Secret
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetSecret(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, bool? secret)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = secret;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetSecret(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings EnableSecret(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings DisableSecret(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ToggleSecret(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = !toolSettings.Secret;
            return toolSettings;
        }
        #endregion
        #region Value
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Value"/></em></p>
        ///   <p>Value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with AZURE_DEVOPS_EXT_PIPELINE_VAR_ or user will be prompted to enter it via standard input. e.g. PersonalAccessToken can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_PersonalAccessToken.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetValue(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string value)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = value;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Value"/></em></p>
        ///   <p>Value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with AZURE_DEVOPS_EXT_PIPELINE_VAR_ or user will be prompted to enter it via standard input. e.g. PersonalAccessToken can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_PersonalAccessToken.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetValue(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetSubscription(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetSubscription(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetDebug(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetDebug(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetHelp(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetHelp(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetOutput(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetOutput(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetQuery(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetQuery(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings SetVerbose(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableCreateSettings ResetVerbose(this AzurePipelinesVariableGroupVariableCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupVariableDeleteSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetGroupId(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetGroupId(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetName(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetName(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetDetect(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetDetect(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings EnableDetect(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings DisableDetect(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ToggleDetect(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetOrg(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetOrg(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetProject(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetProject(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetYes(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetYes(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetSubscription(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetSubscription(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetDebug(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetDebug(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetHelp(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetHelp(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetOutput(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetOutput(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetQuery(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetQuery(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings SetVerbose(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableDeleteSettings ResetVerbose(this AzurePipelinesVariableGroupVariableDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupVariableListSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetGroupId(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetGroupId(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetDetect(this AzurePipelinesVariableGroupVariableListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetDetect(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings EnableDetect(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings DisableDetect(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupVariableListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ToggleDetect(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetOrg(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetOrg(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetProject(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetProject(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetSubscription(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetSubscription(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetDebug(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetDebug(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetHelp(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetHelp(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetOutput(this AzurePipelinesVariableGroupVariableListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetOutput(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetQuery(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetQuery(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings SetVerbose(this AzurePipelinesVariableGroupVariableListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableListSettings ResetVerbose(this AzurePipelinesVariableGroupVariableListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesVariableGroupVariableUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesVariableGroupVariableUpdateSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetGroupId(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.GroupId"/></em></p>
        ///   <p>Id of the variable group.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetGroupId(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetName(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Name"/></em></p>
        ///   <p>Name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetName(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetDetect(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetDetect(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings EnableDetect(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings DisableDetect(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ToggleDetect(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region NewName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.NewName"/></em></p>
        ///   <p>New name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetNewName(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string newName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NewName = newName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.NewName"/></em></p>
        ///   <p>New name of the variable.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetNewName(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NewName = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetOrg(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetOrg(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetProject(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetProject(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region PromptValue
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetPromptValue(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, bool? promptValue)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = promptValue;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetPromptValue(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings EnablePromptValue(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings DisablePromptValue(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.PromptValue"/></em></p>
        ///   <p>Set it to True to update the value of a secret variable using environment variable or prompt via standard input.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings TogglePromptValue(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PromptValue = !toolSettings.PromptValue;
            return toolSettings;
        }
        #endregion
        #region Secret
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetSecret(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, bool? secret)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = secret;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetSecret(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings EnableSecret(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings DisableSecret(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Secret"/></em></p>
        ///   <p>If the value of the variable is a secret.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ToggleSecret(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Secret = !toolSettings.Secret;
            return toolSettings;
        }
        #endregion
        #region Value
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Value"/></em></p>
        ///   <p>New value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with AZURE_DEVOPS_EXT_PIPELINE_VAR_ or user will be prompted to enter it via standard input. e.g. PersonalAccessToken can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_PersonalAccessToken.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetValue(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string value)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = value;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Value"/></em></p>
        ///   <p>New value of the variable. For secret variables, if --value parameter is not given, it will be picked from environment variable prefixed with AZURE_DEVOPS_EXT_PIPELINE_VAR_ or user will be prompted to enter it via standard input. e.g. PersonalAccessToken can be input using environment variable AZURE_DEVOPS_EXT_PIPELINE_VAR_PersonalAccessToken.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetValue(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Value = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetSubscription(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetSubscription(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetDebug(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetDebug(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetHelp(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetHelp(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetOutput(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetOutput(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetQuery(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetQuery(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings SetVerbose(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesVariableGroupVariableUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesVariableGroupVariableUpdateSettings ResetVerbose(this AzurePipelinesVariableGroupVariableUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsArtifactDownloadSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsArtifactDownloadSettingsExtensions
    {
        #region ArtifactName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.ArtifactName"/></em></p>
        ///   <p>Name of the artifact to download.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetArtifactName(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string artifactName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactName = artifactName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.ArtifactName"/></em></p>
        ///   <p>Name of the artifact to download.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetArtifactName(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactName = null;
            return toolSettings;
        }
        #endregion
        #region Path
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Path"/></em></p>
        ///   <p>Path to download the artifact into.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetPath(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string path)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = path;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Path"/></em></p>
        ///   <p>Path to download the artifact into.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetPath(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = null;
            return toolSettings;
        }
        #endregion
        #region RunId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.RunId"/></em></p>
        ///   <p>ID of the run that the artifact is associated to.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetRunId(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string runId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = runId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.RunId"/></em></p>
        ///   <p>ID of the run that the artifact is associated to.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetRunId(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetDetect(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetDetect(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsArtifactDownloadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings EnableDetect(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsArtifactDownloadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings DisableDetect(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsArtifactDownloadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ToggleDetect(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetOrg(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetOrg(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetProject(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetProject(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetSubscription(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetSubscription(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetDebug(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetDebug(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetHelp(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetHelp(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetOutput(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetOutput(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetQuery(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetQuery(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings SetVerbose(this AzurePipelinesRunsArtifactDownloadSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactDownloadSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactDownloadSettings ResetVerbose(this AzurePipelinesRunsArtifactDownloadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsArtifactListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsArtifactListSettingsExtensions
    {
        #region RunId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.RunId"/></em></p>
        ///   <p>ID of the run that the artifact is associated to.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetRunId(this AzurePipelinesRunsArtifactListSettings toolSettings, string runId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = runId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.RunId"/></em></p>
        ///   <p>ID of the run that the artifact is associated to.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetRunId(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetDetect(this AzurePipelinesRunsArtifactListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetDetect(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsArtifactListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings EnableDetect(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsArtifactListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings DisableDetect(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsArtifactListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ToggleDetect(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetOrg(this AzurePipelinesRunsArtifactListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetOrg(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetProject(this AzurePipelinesRunsArtifactListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetProject(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetSubscription(this AzurePipelinesRunsArtifactListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetSubscription(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetDebug(this AzurePipelinesRunsArtifactListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetDebug(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetHelp(this AzurePipelinesRunsArtifactListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetHelp(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetOutput(this AzurePipelinesRunsArtifactListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetOutput(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetQuery(this AzurePipelinesRunsArtifactListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetQuery(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings SetVerbose(this AzurePipelinesRunsArtifactListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactListSettings ResetVerbose(this AzurePipelinesRunsArtifactListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsArtifactUploadSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsArtifactUploadSettingsExtensions
    {
        #region ArtifactName
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.ArtifactName"/></em></p>
        ///   <p>Name of the artifact to upload.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetArtifactName(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string artifactName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactName = artifactName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.ArtifactName"/></em></p>
        ///   <p>Name of the artifact to upload.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetArtifactName(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ArtifactName = null;
            return toolSettings;
        }
        #endregion
        #region Path
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Path"/></em></p>
        ///   <p>Path to upload the artifact from.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetPath(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string path)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = path;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Path"/></em></p>
        ///   <p>Path to upload the artifact from.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetPath(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = null;
            return toolSettings;
        }
        #endregion
        #region RunId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.RunId"/></em></p>
        ///   <p>ID of the run that the artifact is associated to.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetRunId(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string runId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = runId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.RunId"/></em></p>
        ///   <p>ID of the run that the artifact is associated to.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetRunId(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetDetect(this AzurePipelinesRunsArtifactUploadSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetDetect(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsArtifactUploadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings EnableDetect(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsArtifactUploadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings DisableDetect(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsArtifactUploadSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ToggleDetect(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetOrg(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetOrg(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetProject(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetProject(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetSubscription(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetSubscription(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetDebug(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetDebug(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetHelp(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetHelp(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetOutput(this AzurePipelinesRunsArtifactUploadSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetOutput(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetQuery(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetQuery(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsArtifactUploadSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings SetVerbose(this AzurePipelinesRunsArtifactUploadSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsArtifactUploadSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsArtifactUploadSettings ResetVerbose(this AzurePipelinesRunsArtifactUploadSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsTagAddSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsTagAddSettingsExtensions
    {
        #region RunId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.RunId"/></em></p>
        ///   <p>ID of the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetRunId(this AzurePipelinesRunsTagAddSettings toolSettings, string runId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = runId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.RunId"/></em></p>
        ///   <p>ID of the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetRunId(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = null;
            return toolSettings;
        }
        #endregion
        #region Tags
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Tags"/></em></p>
        ///   <p>Tag(s) to be added to the pipeline run. [Comma seperated values].</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetTags(this AzurePipelinesRunsTagAddSettings toolSettings, string tags)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = tags;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Tags"/></em></p>
        ///   <p>Tag(s) to be added to the pipeline run. [Comma seperated values].</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetTags(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetDetect(this AzurePipelinesRunsTagAddSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetDetect(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings EnableDetect(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings DisableDetect(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsTagAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ToggleDetect(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetOrg(this AzurePipelinesRunsTagAddSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetOrg(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetProject(this AzurePipelinesRunsTagAddSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetProject(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetSubscription(this AzurePipelinesRunsTagAddSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetSubscription(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetDebug(this AzurePipelinesRunsTagAddSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetDebug(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetHelp(this AzurePipelinesRunsTagAddSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetHelp(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetOutput(this AzurePipelinesRunsTagAddSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetOutput(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetQuery(this AzurePipelinesRunsTagAddSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetQuery(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings SetVerbose(this AzurePipelinesRunsTagAddSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagAddSettings ResetVerbose(this AzurePipelinesRunsTagAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsTagDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsTagDeleteSettingsExtensions
    {
        #region RunId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.RunId"/></em></p>
        ///   <p>ID of the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetRunId(this AzurePipelinesRunsTagDeleteSettings toolSettings, string runId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = runId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.RunId"/></em></p>
        ///   <p>ID of the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetRunId(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = null;
            return toolSettings;
        }
        #endregion
        #region Tag
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Tag"/></em></p>
        ///   <p>Tag to be deleted from the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetTag(this AzurePipelinesRunsTagDeleteSettings toolSettings, string tag)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tag = tag;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Tag"/></em></p>
        ///   <p>Tag to be deleted from the pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetTag(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tag = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetDetect(this AzurePipelinesRunsTagDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetDetect(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings EnableDetect(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings DisableDetect(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsTagDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ToggleDetect(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetOrg(this AzurePipelinesRunsTagDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetOrg(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetProject(this AzurePipelinesRunsTagDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetProject(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetSubscription(this AzurePipelinesRunsTagDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetSubscription(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetDebug(this AzurePipelinesRunsTagDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetDebug(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetHelp(this AzurePipelinesRunsTagDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetHelp(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetOutput(this AzurePipelinesRunsTagDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetOutput(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetQuery(this AzurePipelinesRunsTagDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetQuery(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings SetVerbose(this AzurePipelinesRunsTagDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagDeleteSettings ResetVerbose(this AzurePipelinesRunsTagDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzurePipelinesRunsTagListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzurePipelinesRunsTagListSettingsExtensions
    {
        #region RunId
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.RunId"/></em></p>
        ///   <p>ID of the  pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetRunId(this AzurePipelinesRunsTagListSettings toolSettings, string runId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = runId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.RunId"/></em></p>
        ///   <p>ID of the  pipeline run.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetRunId(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RunId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetDetect(this AzurePipelinesRunsTagListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetDetect(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzurePipelinesRunsTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings EnableDetect(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzurePipelinesRunsTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings DisableDetect(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzurePipelinesRunsTagListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ToggleDetect(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetOrg(this AzurePipelinesRunsTagListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetOrg(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetProject(this AzurePipelinesRunsTagListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetProject(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetSubscription(this AzurePipelinesRunsTagListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetSubscription(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetDebug(this AzurePipelinesRunsTagListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetDebug(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetHelp(this AzurePipelinesRunsTagListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetHelp(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetOutput(this AzurePipelinesRunsTagListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetOutput(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetQuery(this AzurePipelinesRunsTagListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetQuery(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzurePipelinesRunsTagListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings SetVerbose(this AzurePipelinesRunsTagListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzurePipelinesRunsTagListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzurePipelinesRunsTagListSettings ResetVerbose(this AzurePipelinesRunsTagListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region PipelinesCreateRepositoryType
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesCreateRepositoryType>))]
    public partial class PipelinesCreateRepositoryType : Enumeration
    {
        public static PipelinesCreateRepositoryType github = new PipelinesCreateRepositoryType { Value = "github" };
        public static PipelinesCreateRepositoryType tfsgit = new PipelinesCreateRepositoryType { Value = "tfsgit" };
    }
    #endregion
    #region PipelinesRepositoryType
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesRepositoryType>))]
    public partial class PipelinesRepositoryType : Enumeration
    {
        public static PipelinesRepositoryType bitbucket = new PipelinesRepositoryType { Value = "bitbucket" };
        public static PipelinesRepositoryType git = new PipelinesRepositoryType { Value = "git" };
        public static PipelinesRepositoryType github = new PipelinesRepositoryType { Value = "github" };
        public static PipelinesRepositoryType githubenterprise = new PipelinesRepositoryType { Value = "githubenterprise" };
        public static PipelinesRepositoryType svn = new PipelinesRepositoryType { Value = "svn" };
        public static PipelinesRepositoryType tfsgit = new PipelinesRepositoryType { Value = "tfsgit" };
        public static PipelinesRepositoryType tfsversioncontrol = new PipelinesRepositoryType { Value = "tfsversioncontrol" };
    }
    #endregion
    #region PipelinesListQueryOrder
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesListQueryOrder>))]
    public partial class PipelinesListQueryOrder : Enumeration
    {
        public static PipelinesListQueryOrder modifiedasc = new PipelinesListQueryOrder { Value = "modifiedasc" };
        public static PipelinesListQueryOrder modifieddesc = new PipelinesListQueryOrder { Value = "modifieddesc" };
        public static PipelinesListQueryOrder nameasc = new PipelinesListQueryOrder { Value = "nameasc" };
        public static PipelinesListQueryOrder namedesc = new PipelinesListQueryOrder { Value = "namedesc" };
        public static PipelinesListQueryOrder none = new PipelinesListQueryOrder { Value = "none" };
    }
    #endregion
    #region PipelinesRunsListQueryOrder
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesRunsListQueryOrder>))]
    public partial class PipelinesRunsListQueryOrder : Enumeration
    {
        public static PipelinesRunsListQueryOrder finishtimeasc = new PipelinesRunsListQueryOrder { Value = "finishtimeasc" };
        public static PipelinesRunsListQueryOrder finishtimedesc = new PipelinesRunsListQueryOrder { Value = "finishtimedesc" };
        public static PipelinesRunsListQueryOrder queuetimeasc = new PipelinesRunsListQueryOrder { Value = "queuetimeasc" };
        public static PipelinesRunsListQueryOrder queuetimedesc = new PipelinesRunsListQueryOrder { Value = "queuetimedesc" };
        public static PipelinesRunsListQueryOrder starttimeasc = new PipelinesRunsListQueryOrder { Value = "starttimeasc" };
        public static PipelinesRunsListQueryOrder starttimedesc = new PipelinesRunsListQueryOrder { Value = "starttimedesc" };
    }
    #endregion
    #region PipelinesVariableGroupListQueryOrder
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesVariableGroupListQueryOrder>))]
    public partial class PipelinesVariableGroupListQueryOrder : Enumeration
    {
        public static PipelinesVariableGroupListQueryOrder asc = new PipelinesVariableGroupListQueryOrder { Value = "asc" };
        public static PipelinesVariableGroupListQueryOrder desc = new PipelinesVariableGroupListQueryOrder { Value = "desc" };
    }
    #endregion
    #region PipelinesRunsReason
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesRunsReason>))]
    public partial class PipelinesRunsReason : Enumeration
    {
        public static PipelinesRunsReason all = new PipelinesRunsReason { Value = "all" };
        public static PipelinesRunsReason batchedci = new PipelinesRunsReason { Value = "batchedci" };
        public static PipelinesRunsReason buildcompletion = new PipelinesRunsReason { Value = "buildcompletion" };
        public static PipelinesRunsReason checkinshelveset = new PipelinesRunsReason { Value = "checkinshelveset" };
        public static PipelinesRunsReason individualci = new PipelinesRunsReason { Value = "individualci" };
        public static PipelinesRunsReason manual = new PipelinesRunsReason { Value = "manual" };
        public static PipelinesRunsReason pullrequest = new PipelinesRunsReason { Value = "pullrequest" };
        public static PipelinesRunsReason schedule = new PipelinesRunsReason { Value = "schedule" };
        public static PipelinesRunsReason triggered = new PipelinesRunsReason { Value = "triggered" };
        public static PipelinesRunsReason usercreated = new PipelinesRunsReason { Value = "usercreated" };
        public static PipelinesRunsReason validateshelveset = new PipelinesRunsReason { Value = "validateshelveset" };
    }
    #endregion
    #region PipelinesRunsResult
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesRunsResult>))]
    public partial class PipelinesRunsResult : Enumeration
    {
        public static PipelinesRunsResult canceled = new PipelinesRunsResult { Value = "canceled" };
        public static PipelinesRunsResult failed = new PipelinesRunsResult { Value = "failed" };
        public static PipelinesRunsResult none = new PipelinesRunsResult { Value = "none" };
        public static PipelinesRunsResult partiallysucceeded = new PipelinesRunsResult { Value = "partiallysucceeded" };
        public static PipelinesRunsResult succeeded = new PipelinesRunsResult { Value = "succeeded" };
    }
    #endregion
    #region PipelinesRunsStatus
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesRunsStatus>))]
    public partial class PipelinesRunsStatus : Enumeration
    {
        public static PipelinesRunsStatus all = new PipelinesRunsStatus { Value = "all" };
        public static PipelinesRunsStatus cancelling = new PipelinesRunsStatus { Value = "cancelling" };
        public static PipelinesRunsStatus completed = new PipelinesRunsStatus { Value = "completed" };
        public static PipelinesRunsStatus inprogress = new PipelinesRunsStatus { Value = "inprogress" };
        public static PipelinesRunsStatus none = new PipelinesRunsStatus { Value = "none" };
        public static PipelinesRunsStatus notstarted = new PipelinesRunsStatus { Value = "notstarted" };
        public static PipelinesRunsStatus postponed = new PipelinesRunsStatus { Value = "postponed" };
    }
    #endregion
    #region PipelinesPoolAction
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesPoolAction>))]
    public partial class PipelinesPoolAction : Enumeration
    {
        public static PipelinesPoolAction manage = new PipelinesPoolAction { Value = "manage" };
        public static PipelinesPoolAction none = new PipelinesPoolAction { Value = "none" };
        public static PipelinesPoolAction use = new PipelinesPoolAction { Value = "use" };
    }
    #endregion
    #region PipelinesPoolListPoolType
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesPoolListPoolType>))]
    public partial class PipelinesPoolListPoolType : Enumeration
    {
        public static PipelinesPoolListPoolType automation = new PipelinesPoolListPoolType { Value = "automation" };
        public static PipelinesPoolListPoolType deployment = new PipelinesPoolListPoolType { Value = "deployment" };
    }
    #endregion
    #region PipelinesReleaseDefinitionListArtifactType
    /// <summary>
    ///   Used within <see cref="AzurePipelinesTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<PipelinesReleaseDefinitionListArtifactType>))]
    public partial class PipelinesReleaseDefinitionListArtifactType : Enumeration
    {
        public static PipelinesReleaseDefinitionListArtifactType build = new PipelinesReleaseDefinitionListArtifactType { Value = "build" };
        public static PipelinesReleaseDefinitionListArtifactType externaltfsbuild = new PipelinesReleaseDefinitionListArtifactType { Value = "externaltfsbuild" };
        public static PipelinesReleaseDefinitionListArtifactType git = new PipelinesReleaseDefinitionListArtifactType { Value = "git" };
        public static PipelinesReleaseDefinitionListArtifactType github = new PipelinesReleaseDefinitionListArtifactType { Value = "github" };
        public static PipelinesReleaseDefinitionListArtifactType jenkins = new PipelinesReleaseDefinitionListArtifactType { Value = "jenkins" };
        public static PipelinesReleaseDefinitionListArtifactType tfvc = new PipelinesReleaseDefinitionListArtifactType { Value = "tfvc" };
    }
    #endregion
}
