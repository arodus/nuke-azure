// Generated from https://github.com/nuke-build/azure/blob/master/src/Nuke.Azure/specifications/AzureDevops.json
// Generated with Nuke.CodeGeneration version 0.20.1 (OSX,.NETStandard,Version=v2.0)

using JetBrains.Annotations;
using Newtonsoft.Json;
using Nuke.Common;
using Nuke.Common.Execution;
using Nuke.Common.Tooling;
using Nuke.Common.Tools;
using Nuke.Common.Utilities.Collections;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Linq;
using System.Text;

namespace Nuke.Azure
{
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsTasks
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public static string AzureDevopsPath =>
            ToolPathResolver.TryGetEnvironmentExecutable("AZUREDEVOPS_EXE") ??
            ToolPathResolver.GetPathExecutable("az");
        public static Action<OutputType, string> AzureDevopsLogger { get; set; } = ProcessTasks.DefaultLogger;
        /// <summary>
        ///   Manage Azure DevOps organization level operations.
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevops(string arguments, string workingDirectory = null, IReadOnlyDictionary<string, string> environmentVariables = null, int? timeout = null, bool? logOutput = null, bool? logInvocation = null, Func<string, string> outputFilter = null)
        {
            var process = ProcessTasks.StartProcess(AzureDevopsPath, arguments, workingDirectory, environmentVariables, timeout, logOutput, logInvocation, AzureDevopsLogger, outputFilter);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsConfigure(AzureDevopsConfigureSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsConfigureSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsConfigureSettings.Debug"/></li>
        ///     <li><c>--defaults</c> via <see cref="AzureDevopsConfigureSettings.Defaults"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsConfigureSettings.Help"/></li>
        ///     <li><c>--list</c> via <see cref="AzureDevopsConfigureSettings.List"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsConfigureSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsConfigureSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsConfigureSettings.Subscription"/></li>
        ///     <li><c>--use-git-aliases</c> via <see cref="AzureDevopsConfigureSettings.UseGitAliases"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsConfigureSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsConfigure(Configure<AzureDevopsConfigureSettings> configurator)
        {
            return AzureDevopsConfigure(configurator(new AzureDevopsConfigureSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsConfigureSettings.Debug"/></li>
        ///     <li><c>--defaults</c> via <see cref="AzureDevopsConfigureSettings.Defaults"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsConfigureSettings.Help"/></li>
        ///     <li><c>--list</c> via <see cref="AzureDevopsConfigureSettings.List"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsConfigureSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsConfigureSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsConfigureSettings.Subscription"/></li>
        ///     <li><c>--use-git-aliases</c> via <see cref="AzureDevopsConfigureSettings.UseGitAliases"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsConfigureSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsConfigureSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsConfigure(CombinatorialConfigure<AzureDevopsConfigureSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsConfigure, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsFeedback(AzureDevopsFeedbackSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsFeedbackSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsFeedbackSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsFeedbackSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsFeedbackSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsFeedbackSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsFeedbackSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsFeedbackSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsFeedback(Configure<AzureDevopsFeedbackSettings> configurator)
        {
            return AzureDevopsFeedback(configurator(new AzureDevopsFeedbackSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsFeedbackSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsFeedbackSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsFeedbackSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsFeedbackSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsFeedbackSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsFeedbackSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsFeedbackSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsFeedback(CombinatorialConfigure<AzureDevopsFeedbackSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsFeedback, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsInvoke(AzureDevopsInvokeSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsInvokeSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--accept-media-type</c> via <see cref="AzureDevopsInvokeSettings.AcceptMediaType"/></li>
        ///     <li><c>--api-version</c> via <see cref="AzureDevopsInvokeSettings.ApiVersion"/></li>
        ///     <li><c>--area</c> via <see cref="AzureDevopsInvokeSettings.Area"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsInvokeSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsInvokeSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsInvokeSettings.Encoding"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsInvokeSettings.Help"/></li>
        ///     <li><c>--http-method</c> via <see cref="AzureDevopsInvokeSettings.HttpMethod"/></li>
        ///     <li><c>--in-file</c> via <see cref="AzureDevopsInvokeSettings.InFile"/></li>
        ///     <li><c>--media-type</c> via <see cref="AzureDevopsInvokeSettings.MediaType"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsInvokeSettings.Org"/></li>
        ///     <li><c>--out-file</c> via <see cref="AzureDevopsInvokeSettings.OutFile"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsInvokeSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsInvokeSettings.Query"/></li>
        ///     <li><c>--query-parameters</c> via <see cref="AzureDevopsInvokeSettings.QueryParameters"/></li>
        ///     <li><c>--resource</c> via <see cref="AzureDevopsInvokeSettings.Resource"/></li>
        ///     <li><c>--route-parameters</c> via <see cref="AzureDevopsInvokeSettings.RouteParameters"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsInvokeSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsInvokeSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsInvoke(Configure<AzureDevopsInvokeSettings> configurator)
        {
            return AzureDevopsInvoke(configurator(new AzureDevopsInvokeSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--accept-media-type</c> via <see cref="AzureDevopsInvokeSettings.AcceptMediaType"/></li>
        ///     <li><c>--api-version</c> via <see cref="AzureDevopsInvokeSettings.ApiVersion"/></li>
        ///     <li><c>--area</c> via <see cref="AzureDevopsInvokeSettings.Area"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsInvokeSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsInvokeSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsInvokeSettings.Encoding"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsInvokeSettings.Help"/></li>
        ///     <li><c>--http-method</c> via <see cref="AzureDevopsInvokeSettings.HttpMethod"/></li>
        ///     <li><c>--in-file</c> via <see cref="AzureDevopsInvokeSettings.InFile"/></li>
        ///     <li><c>--media-type</c> via <see cref="AzureDevopsInvokeSettings.MediaType"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsInvokeSettings.Org"/></li>
        ///     <li><c>--out-file</c> via <see cref="AzureDevopsInvokeSettings.OutFile"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsInvokeSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsInvokeSettings.Query"/></li>
        ///     <li><c>--query-parameters</c> via <see cref="AzureDevopsInvokeSettings.QueryParameters"/></li>
        ///     <li><c>--resource</c> via <see cref="AzureDevopsInvokeSettings.Resource"/></li>
        ///     <li><c>--route-parameters</c> via <see cref="AzureDevopsInvokeSettings.RouteParameters"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsInvokeSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsInvokeSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsInvokeSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsInvoke(CombinatorialConfigure<AzureDevopsInvokeSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsInvoke, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsLogin(AzureDevopsLoginSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsLoginSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsLoginSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsLoginSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsLoginSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsLoginSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsLoginSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsLoginSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsLoginSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsLogin(Configure<AzureDevopsLoginSettings> configurator)
        {
            return AzureDevopsLogin(configurator(new AzureDevopsLoginSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsLoginSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsLoginSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsLoginSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsLoginSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsLoginSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsLoginSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsLoginSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsLoginSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsLogin(CombinatorialConfigure<AzureDevopsLoginSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsLogin, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsLogout(AzureDevopsLogoutSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsLogoutSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsLogoutSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsLogoutSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsLogoutSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsLogoutSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsLogoutSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsLogoutSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsLogoutSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsLogout(Configure<AzureDevopsLogoutSettings> configurator)
        {
            return AzureDevopsLogout(configurator(new AzureDevopsLogoutSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsLogoutSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsLogoutSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsLogoutSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsLogoutSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsLogoutSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsLogoutSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsLogoutSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsLogoutSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsLogout(CombinatorialConfigure<AzureDevopsLogoutSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsLogout, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionDisable(AzureDevopsExtensionDisableSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsExtensionDisableSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionDisableSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionDisableSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionDisableSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionDisableSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionDisableSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionDisableSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionDisableSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionDisableSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionDisableSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionDisableSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionDisable(Configure<AzureDevopsExtensionDisableSettings> configurator)
        {
            return AzureDevopsExtensionDisable(configurator(new AzureDevopsExtensionDisableSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionDisableSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionDisableSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionDisableSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionDisableSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionDisableSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionDisableSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionDisableSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionDisableSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionDisableSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionDisableSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsExtensionDisableSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsExtensionDisable(CombinatorialConfigure<AzureDevopsExtensionDisableSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsExtensionDisable, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionEnable(AzureDevopsExtensionEnableSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsExtensionEnableSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionEnableSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionEnableSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionEnableSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionEnableSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionEnableSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionEnableSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionEnableSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionEnableSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionEnableSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionEnableSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionEnable(Configure<AzureDevopsExtensionEnableSettings> configurator)
        {
            return AzureDevopsExtensionEnable(configurator(new AzureDevopsExtensionEnableSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionEnableSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionEnableSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionEnableSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionEnableSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionEnableSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionEnableSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionEnableSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionEnableSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionEnableSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionEnableSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsExtensionEnableSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsExtensionEnable(CombinatorialConfigure<AzureDevopsExtensionEnableSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsExtensionEnable, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionInstall(AzureDevopsExtensionInstallSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsExtensionInstallSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionInstallSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionInstallSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionInstallSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionInstallSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionInstallSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionInstallSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionInstallSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionInstallSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionInstallSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionInstallSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionInstall(Configure<AzureDevopsExtensionInstallSettings> configurator)
        {
            return AzureDevopsExtensionInstall(configurator(new AzureDevopsExtensionInstallSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionInstallSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionInstallSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionInstallSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionInstallSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionInstallSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionInstallSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionInstallSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionInstallSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionInstallSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionInstallSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsExtensionInstallSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsExtensionInstall(CombinatorialConfigure<AzureDevopsExtensionInstallSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsExtensionInstall, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionList(AzureDevopsExtensionListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsExtensionListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionListSettings.Help"/></li>
        ///     <li><c>--include-built-in</c> via <see cref="AzureDevopsExtensionListSettings.IncludeBuiltIn"/></li>
        ///     <li><c>--include-disabled</c> via <see cref="AzureDevopsExtensionListSettings.IncludeDisabled"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionList(Configure<AzureDevopsExtensionListSettings> configurator)
        {
            return AzureDevopsExtensionList(configurator(new AzureDevopsExtensionListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionListSettings.Help"/></li>
        ///     <li><c>--include-built-in</c> via <see cref="AzureDevopsExtensionListSettings.IncludeBuiltIn"/></li>
        ///     <li><c>--include-disabled</c> via <see cref="AzureDevopsExtensionListSettings.IncludeDisabled"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsExtensionListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsExtensionList(CombinatorialConfigure<AzureDevopsExtensionListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsExtensionList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionSearch(AzureDevopsExtensionSearchSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsExtensionSearchSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionSearchSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionSearchSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionSearchSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionSearchSettings.Query"/></li>
        ///     <li><c>--search-query</c> via <see cref="AzureDevopsExtensionSearchSettings.SearchQuery"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionSearchSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionSearchSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionSearch(Configure<AzureDevopsExtensionSearchSettings> configurator)
        {
            return AzureDevopsExtensionSearch(configurator(new AzureDevopsExtensionSearchSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionSearchSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionSearchSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionSearchSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionSearchSettings.Query"/></li>
        ///     <li><c>--search-query</c> via <see cref="AzureDevopsExtensionSearchSettings.SearchQuery"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionSearchSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionSearchSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsExtensionSearchSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsExtensionSearch(CombinatorialConfigure<AzureDevopsExtensionSearchSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsExtensionSearch, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionShow(AzureDevopsExtensionShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsExtensionShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionShowSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionShowSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionShowSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionShowSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionShow(Configure<AzureDevopsExtensionShowSettings> configurator)
        {
            return AzureDevopsExtensionShow(configurator(new AzureDevopsExtensionShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionShowSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionShowSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionShowSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionShowSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsExtensionShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsExtensionShow(CombinatorialConfigure<AzureDevopsExtensionShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsExtensionShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionUninstall(AzureDevopsExtensionUninstallSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsExtensionUninstallSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionUninstallSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionUninstallSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionUninstallSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionUninstallSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionUninstallSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionUninstallSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionUninstallSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionUninstallSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionUninstallSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionUninstallSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsExtensionUninstallSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsExtensionUninstall(Configure<AzureDevopsExtensionUninstallSettings> configurator)
        {
            return AzureDevopsExtensionUninstall(configurator(new AzureDevopsExtensionUninstallSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsExtensionUninstallSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsExtensionUninstallSettings.Detect"/></li>
        ///     <li><c>--extension-name</c> via <see cref="AzureDevopsExtensionUninstallSettings.ExtensionName"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsExtensionUninstallSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsExtensionUninstallSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsExtensionUninstallSettings.Output"/></li>
        ///     <li><c>--publisher-name</c> via <see cref="AzureDevopsExtensionUninstallSettings.PublisherName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsExtensionUninstallSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsExtensionUninstallSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsExtensionUninstallSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsExtensionUninstallSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsExtensionUninstallSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsExtensionUninstall(CombinatorialConfigure<AzureDevopsExtensionUninstallSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsExtensionUninstall, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsAdmin(AzureDevopsAdminSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsAdminSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminSettings.Query"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsAdmin(Configure<AzureDevopsAdminSettings> configurator)
        {
            return AzureDevopsAdmin(configurator(new AzureDevopsAdminSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminSettings.Query"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsAdminSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsAdmin(CombinatorialConfigure<AzureDevopsAdminSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsAdmin, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurity(AzureDevopsSecuritySettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecuritySettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecuritySettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecuritySettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecuritySettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecuritySettings.Query"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecuritySettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurity(Configure<AzureDevopsSecuritySettings> configurator)
        {
            return AzureDevopsSecurity(configurator(new AzureDevopsSecuritySettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecuritySettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecuritySettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecuritySettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecuritySettings.Query"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecuritySettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecuritySettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurity(CombinatorialConfigure<AzureDevopsSecuritySettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurity, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsProjectCreate(AzureDevopsProjectCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsProjectCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsProjectCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsProjectCreateSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsProjectCreateSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectCreateSettings.Output"/></li>
        ///     <li><c>--process</c> via <see cref="AzureDevopsProjectCreateSettings.Process"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectCreateSettings.Query"/></li>
        ///     <li><c>--source-control</c> via <see cref="AzureDevopsProjectCreateSettings.SourceControl"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectCreateSettings.Verbose"/></li>
        ///     <li><c>--visibility</c> via <see cref="AzureDevopsProjectCreateSettings.Visibility"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsProjectCreate(Configure<AzureDevopsProjectCreateSettings> configurator)
        {
            return AzureDevopsProjectCreate(configurator(new AzureDevopsProjectCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsProjectCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsProjectCreateSettings.Name"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsProjectCreateSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectCreateSettings.Output"/></li>
        ///     <li><c>--process</c> via <see cref="AzureDevopsProjectCreateSettings.Process"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectCreateSettings.Query"/></li>
        ///     <li><c>--source-control</c> via <see cref="AzureDevopsProjectCreateSettings.SourceControl"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectCreateSettings.Verbose"/></li>
        ///     <li><c>--visibility</c> via <see cref="AzureDevopsProjectCreateSettings.Visibility"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsProjectCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsProjectCreate(CombinatorialConfigure<AzureDevopsProjectCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsProjectCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsProjectDelete(AzureDevopsProjectDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsProjectDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsProjectDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsProjectDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsProjectDelete(Configure<AzureDevopsProjectDeleteSettings> configurator)
        {
            return AzureDevopsProjectDelete(configurator(new AzureDevopsProjectDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsProjectDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsProjectDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsProjectDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsProjectDelete(CombinatorialConfigure<AzureDevopsProjectDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsProjectDelete, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsProjectList(AzureDevopsProjectListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsProjectListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectListSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsProjectListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsProjectListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsProjectList(Configure<AzureDevopsProjectListSettings> configurator)
        {
            return AzureDevopsProjectList(configurator(new AzureDevopsProjectListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectListSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsProjectListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsProjectListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsProjectListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsProjectList(CombinatorialConfigure<AzureDevopsProjectListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsProjectList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsProjectShow(AzureDevopsProjectShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsProjectShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectShowSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsProjectShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsProjectShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsProjectShow(Configure<AzureDevopsProjectShowSettings> configurator)
        {
            return AzureDevopsProjectShow(configurator(new AzureDevopsProjectShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsProjectShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsProjectShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsProjectShowSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsProjectShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsProjectShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsProjectShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsProjectShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsProjectShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsProjectShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsProjectShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsProjectShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsProjectShow(CombinatorialConfigure<AzureDevopsProjectShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsProjectShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointCreate(AzureDevopsServiceEndpointCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsServiceEndpointCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Encoding"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Query"/></li>
        ///     <li><c>--service-endpoint-configuration</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.ServiceEndpointConfiguration"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointCreate(Configure<AzureDevopsServiceEndpointCreateSettings> configurator)
        {
            return AzureDevopsServiceEndpointCreate(configurator(new AzureDevopsServiceEndpointCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Encoding"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Query"/></li>
        ///     <li><c>--service-endpoint-configuration</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.ServiceEndpointConfiguration"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsServiceEndpointCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsServiceEndpointCreate(CombinatorialConfigure<AzureDevopsServiceEndpointCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsServiceEndpointCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointDelete(AzureDevopsServiceEndpointDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsServiceEndpointDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Debug"/></li>
        ///     <li><c>--deep</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Deep"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointDelete(Configure<AzureDevopsServiceEndpointDeleteSettings> configurator)
        {
            return AzureDevopsServiceEndpointDelete(configurator(new AzureDevopsServiceEndpointDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Debug"/></li>
        ///     <li><c>--deep</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Deep"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsServiceEndpointDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsServiceEndpointDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsServiceEndpointDelete(CombinatorialConfigure<AzureDevopsServiceEndpointDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsServiceEndpointDelete, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointList(AzureDevopsServiceEndpointListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsServiceEndpointListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointList(Configure<AzureDevopsServiceEndpointListSettings> configurator)
        {
            return AzureDevopsServiceEndpointList(configurator(new AzureDevopsServiceEndpointListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsServiceEndpointListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsServiceEndpointList(CombinatorialConfigure<AzureDevopsServiceEndpointListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsServiceEndpointList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointShow(AzureDevopsServiceEndpointShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsServiceEndpointShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointShow(Configure<AzureDevopsServiceEndpointShowSettings> configurator)
        {
            return AzureDevopsServiceEndpointShow(configurator(new AzureDevopsServiceEndpointShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsServiceEndpointShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsServiceEndpointShow(CombinatorialConfigure<AzureDevopsServiceEndpointShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsServiceEndpointShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsUserAdd(AzureDevopsUserAddSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsUserAddSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserAddSettings.Detect"/></li>
        ///     <li><c>--email-id</c> via <see cref="AzureDevopsUserAddSettings.EmailId"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserAddSettings.Help"/></li>
        ///     <li><c>--license-type</c> via <see cref="AzureDevopsUserAddSettings.LicenseType"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserAddSettings.Query"/></li>
        ///     <li><c>--send-email-invite</c> via <see cref="AzureDevopsUserAddSettings.SendEmailInvite"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserAddSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsUserAdd(Configure<AzureDevopsUserAddSettings> configurator)
        {
            return AzureDevopsUserAdd(configurator(new AzureDevopsUserAddSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserAddSettings.Detect"/></li>
        ///     <li><c>--email-id</c> via <see cref="AzureDevopsUserAddSettings.EmailId"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserAddSettings.Help"/></li>
        ///     <li><c>--license-type</c> via <see cref="AzureDevopsUserAddSettings.LicenseType"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserAddSettings.Query"/></li>
        ///     <li><c>--send-email-invite</c> via <see cref="AzureDevopsUserAddSettings.SendEmailInvite"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserAddSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsUserAddSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsUserAdd(CombinatorialConfigure<AzureDevopsUserAddSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsUserAdd, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsUserList(AzureDevopsUserListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsUserListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserListSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsUserListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsUserListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsUserList(Configure<AzureDevopsUserListSettings> configurator)
        {
            return AzureDevopsUserList(configurator(new AzureDevopsUserListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserListSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsUserListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsUserListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsUserListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsUserList(CombinatorialConfigure<AzureDevopsUserListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsUserList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsUserRemove(AzureDevopsUserRemoveSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsUserRemoveSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserRemoveSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserRemoveSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserRemoveSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserRemoveSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserRemoveSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserRemoveSettings.Subscription"/></li>
        ///     <li><c>--user</c> via <see cref="AzureDevopsUserRemoveSettings.User"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserRemoveSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsUserRemoveSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsUserRemove(Configure<AzureDevopsUserRemoveSettings> configurator)
        {
            return AzureDevopsUserRemove(configurator(new AzureDevopsUserRemoveSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserRemoveSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserRemoveSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserRemoveSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserRemoveSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserRemoveSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserRemoveSettings.Subscription"/></li>
        ///     <li><c>--user</c> via <see cref="AzureDevopsUserRemoveSettings.User"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserRemoveSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsUserRemoveSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsUserRemoveSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsUserRemove(CombinatorialConfigure<AzureDevopsUserRemoveSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsUserRemove, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsUserShow(AzureDevopsUserShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsUserShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserShowSettings.Subscription"/></li>
        ///     <li><c>--user</c> via <see cref="AzureDevopsUserShowSettings.User"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsUserShow(Configure<AzureDevopsUserShowSettings> configurator)
        {
            return AzureDevopsUserShow(configurator(new AzureDevopsUserShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserShowSettings.Subscription"/></li>
        ///     <li><c>--user</c> via <see cref="AzureDevopsUserShowSettings.User"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsUserShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsUserShow(CombinatorialConfigure<AzureDevopsUserShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsUserShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsUserUpdate(AzureDevopsUserUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsUserUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserUpdateSettings.Help"/></li>
        ///     <li><c>--license-type</c> via <see cref="AzureDevopsUserUpdateSettings.LicenseType"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserUpdateSettings.Subscription"/></li>
        ///     <li><c>--user</c> via <see cref="AzureDevopsUserUpdateSettings.User"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsUserUpdate(Configure<AzureDevopsUserUpdateSettings> configurator)
        {
            return AzureDevopsUserUpdate(configurator(new AzureDevopsUserUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsUserUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsUserUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsUserUpdateSettings.Help"/></li>
        ///     <li><c>--license-type</c> via <see cref="AzureDevopsUserUpdateSettings.LicenseType"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsUserUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsUserUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsUserUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsUserUpdateSettings.Subscription"/></li>
        ///     <li><c>--user</c> via <see cref="AzureDevopsUserUpdateSettings.User"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsUserUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsUserUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsUserUpdate(CombinatorialConfigure<AzureDevopsUserUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsUserUpdate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsTeamCreate(AzureDevopsTeamCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsTeamCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsTeamCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsTeamCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsTeamCreate(Configure<AzureDevopsTeamCreateSettings> configurator)
        {
            return AzureDevopsTeamCreate(configurator(new AzureDevopsTeamCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsTeamCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsTeamCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsTeamCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsTeamCreate(CombinatorialConfigure<AzureDevopsTeamCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsTeamCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsTeamDelete(AzureDevopsTeamDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsTeamDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsTeamDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsTeamDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsTeamDelete(Configure<AzureDevopsTeamDeleteSettings> configurator)
        {
            return AzureDevopsTeamDelete(configurator(new AzureDevopsTeamDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsTeamDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsTeamDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsTeamDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsTeamDelete(CombinatorialConfigure<AzureDevopsTeamDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsTeamDelete, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsTeamList(AzureDevopsTeamListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsTeamListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamListSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsTeamListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsTeamListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsTeamList(Configure<AzureDevopsTeamListSettings> configurator)
        {
            return AzureDevopsTeamList(configurator(new AzureDevopsTeamListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamListSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsTeamListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsTeamListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsTeamListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsTeamList(CombinatorialConfigure<AzureDevopsTeamListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsTeamList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsTeamListMember(AzureDevopsTeamListMemberSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsTeamListMemberSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamListMemberSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamListMemberSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamListMemberSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamListMemberSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamListMemberSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamListMemberSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamListMemberSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsTeamListMemberSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamListMemberSettings.Subscription"/></li>
        ///     <li><c>--team</c> via <see cref="AzureDevopsTeamListMemberSettings.Team"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsTeamListMemberSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamListMemberSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsTeamListMember(Configure<AzureDevopsTeamListMemberSettings> configurator)
        {
            return AzureDevopsTeamListMember(configurator(new AzureDevopsTeamListMemberSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamListMemberSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamListMemberSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamListMemberSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamListMemberSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamListMemberSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamListMemberSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamListMemberSettings.Query"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureDevopsTeamListMemberSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamListMemberSettings.Subscription"/></li>
        ///     <li><c>--team</c> via <see cref="AzureDevopsTeamListMemberSettings.Team"/></li>
        ///     <li><c>--top</c> via <see cref="AzureDevopsTeamListMemberSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamListMemberSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsTeamListMemberSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsTeamListMember(CombinatorialConfigure<AzureDevopsTeamListMemberSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsTeamListMember, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsTeamShow(AzureDevopsTeamShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsTeamShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamShowSettings.Subscription"/></li>
        ///     <li><c>--team</c> via <see cref="AzureDevopsTeamShowSettings.Team"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsTeamShow(Configure<AzureDevopsTeamShowSettings> configurator)
        {
            return AzureDevopsTeamShow(configurator(new AzureDevopsTeamShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamShowSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamShowSettings.Subscription"/></li>
        ///     <li><c>--team</c> via <see cref="AzureDevopsTeamShowSettings.Team"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsTeamShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsTeamShow(CombinatorialConfigure<AzureDevopsTeamShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsTeamShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsTeamUpdate(AzureDevopsTeamUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsTeamUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsTeamUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsTeamUpdateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamUpdateSettings.Subscription"/></li>
        ///     <li><c>--team</c> via <see cref="AzureDevopsTeamUpdateSettings.Team"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsTeamUpdate(Configure<AzureDevopsTeamUpdateSettings> configurator)
        {
            return AzureDevopsTeamUpdate(configurator(new AzureDevopsTeamUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsTeamUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsTeamUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsTeamUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsTeamUpdateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsTeamUpdateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsTeamUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsTeamUpdateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsTeamUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsTeamUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsTeamUpdateSettings.Subscription"/></li>
        ///     <li><c>--team</c> via <see cref="AzureDevopsTeamUpdateSettings.Team"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsTeamUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsTeamUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsTeamUpdate(CombinatorialConfigure<AzureDevopsTeamUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsTeamUpdate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiCreate(AzureDevopsWikiCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiCreateSettings.Help"/></li>
        ///     <li><c>--mapped-path</c> via <see cref="AzureDevopsWikiCreateSettings.MappedPath"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsWikiCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiCreateSettings.Query"/></li>
        ///     <li><c>--repository</c> via <see cref="AzureDevopsWikiCreateSettings.Repository"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiCreateSettings.Subscription"/></li>
        ///     <li><c>--type</c> via <see cref="AzureDevopsWikiCreateSettings.Type"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiCreateSettings.Verbose"/></li>
        ///     <li><c>--version</c> via <see cref="AzureDevopsWikiCreateSettings.Version"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiCreate(Configure<AzureDevopsWikiCreateSettings> configurator)
        {
            return AzureDevopsWikiCreate(configurator(new AzureDevopsWikiCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiCreateSettings.Help"/></li>
        ///     <li><c>--mapped-path</c> via <see cref="AzureDevopsWikiCreateSettings.MappedPath"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsWikiCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiCreateSettings.Query"/></li>
        ///     <li><c>--repository</c> via <see cref="AzureDevopsWikiCreateSettings.Repository"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiCreateSettings.Subscription"/></li>
        ///     <li><c>--type</c> via <see cref="AzureDevopsWikiCreateSettings.Type"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiCreateSettings.Verbose"/></li>
        ///     <li><c>--version</c> via <see cref="AzureDevopsWikiCreateSettings.Version"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiCreate(CombinatorialConfigure<AzureDevopsWikiCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiDelete(AzureDevopsWikiDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiDeleteSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiDeleteSettings.Wiki"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsWikiDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiDelete(Configure<AzureDevopsWikiDeleteSettings> configurator)
        {
            return AzureDevopsWikiDelete(configurator(new AzureDevopsWikiDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiDeleteSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiDeleteSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiDeleteSettings.Wiki"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsWikiDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiDelete(CombinatorialConfigure<AzureDevopsWikiDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiDelete, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiList(AzureDevopsWikiListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiListSettings.Query"/></li>
        ///     <li><c>--scope</c> via <see cref="AzureDevopsWikiListSettings.Scope"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiList(Configure<AzureDevopsWikiListSettings> configurator)
        {
            return AzureDevopsWikiList(configurator(new AzureDevopsWikiListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiListSettings.Query"/></li>
        ///     <li><c>--scope</c> via <see cref="AzureDevopsWikiListSettings.Scope"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiList(CombinatorialConfigure<AzureDevopsWikiListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiShow(AzureDevopsWikiShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiShowSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsWikiShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiShowSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiShowSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiShow(Configure<AzureDevopsWikiShowSettings> configurator)
        {
            return AzureDevopsWikiShow(configurator(new AzureDevopsWikiShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiShowSettings.Help"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsWikiShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiShowSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiShowSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiShowSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiShow(CombinatorialConfigure<AzureDevopsWikiShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionList(AzureDevopsSecurityPermissionListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityPermissionListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Query"/></li>
        ///     <li><c>--recurse</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Recurse"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionList(Configure<AzureDevopsSecurityPermissionListSettings> configurator)
        {
            return AzureDevopsSecurityPermissionList(configurator(new AzureDevopsSecurityPermissionListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Query"/></li>
        ///     <li><c>--recurse</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Recurse"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityPermissionListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityPermissionList(CombinatorialConfigure<AzureDevopsSecurityPermissionListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityPermissionList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionReset(AzureDevopsSecurityPermissionResetSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityPermissionResetSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Output"/></li>
        ///     <li><c>--permission-bit</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.PermissionBit"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionReset(Configure<AzureDevopsSecurityPermissionResetSettings> configurator)
        {
            return AzureDevopsSecurityPermissionReset(configurator(new AzureDevopsSecurityPermissionResetSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Output"/></li>
        ///     <li><c>--permission-bit</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.PermissionBit"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionResetSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityPermissionResetSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityPermissionReset(CombinatorialConfigure<AzureDevopsSecurityPermissionResetSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityPermissionReset, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionResetAll(AzureDevopsSecurityPermissionResetAllSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityPermissionResetAllSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionResetAll(Configure<AzureDevopsSecurityPermissionResetAllSettings> configurator)
        {
            return AzureDevopsSecurityPermissionResetAll(configurator(new AzureDevopsSecurityPermissionResetAllSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsSecurityPermissionResetAllSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityPermissionResetAllSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityPermissionResetAll(CombinatorialConfigure<AzureDevopsSecurityPermissionResetAllSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityPermissionResetAll, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionShow(AzureDevopsSecurityPermissionShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityPermissionShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionShow(Configure<AzureDevopsSecurityPermissionShowSettings> configurator)
        {
            return AzureDevopsSecurityPermissionShow(configurator(new AzureDevopsSecurityPermissionShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityPermissionShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityPermissionShow(CombinatorialConfigure<AzureDevopsSecurityPermissionShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityPermissionShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionUpdate(AzureDevopsSecurityPermissionUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityPermissionUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--allow-bit</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.AllowBit"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Debug"/></li>
        ///     <li><c>--deny-bit</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.DenyBit"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Id"/></li>
        ///     <li><c>--merge</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Merge"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionUpdate(Configure<AzureDevopsSecurityPermissionUpdateSettings> configurator)
        {
            return AzureDevopsSecurityPermissionUpdate(configurator(new AzureDevopsSecurityPermissionUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--allow-bit</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.AllowBit"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Debug"/></li>
        ///     <li><c>--deny-bit</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.DenyBit"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Id"/></li>
        ///     <li><c>--merge</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Merge"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Query"/></li>
        ///     <li><c>--subject</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subject"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subscription"/></li>
        ///     <li><c>--token</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Token"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityPermissionUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityPermissionUpdate(CombinatorialConfigure<AzureDevopsSecurityPermissionUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityPermissionUpdate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupCreate(AzureDevopsSecurityGroupCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Detect"/></li>
        ///     <li><c>--email-id</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.EmailId"/></li>
        ///     <li><c>--groups</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Groups"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Org"/></li>
        ///     <li><c>--origin-id</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.OriginId"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Query"/></li>
        ///     <li><c>--scope</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Scope"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupCreate(Configure<AzureDevopsSecurityGroupCreateSettings> configurator)
        {
            return AzureDevopsSecurityGroupCreate(configurator(new AzureDevopsSecurityGroupCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Detect"/></li>
        ///     <li><c>--email-id</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.EmailId"/></li>
        ///     <li><c>--groups</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Groups"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Org"/></li>
        ///     <li><c>--origin-id</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.OriginId"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Query"/></li>
        ///     <li><c>--scope</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Scope"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupCreate(CombinatorialConfigure<AzureDevopsSecurityGroupCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupDelete(AzureDevopsSecurityGroupDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupDelete(Configure<AzureDevopsSecurityGroupDeleteSettings> configurator)
        {
            return AzureDevopsSecurityGroupDelete(configurator(new AzureDevopsSecurityGroupDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsSecurityGroupDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupDelete(CombinatorialConfigure<AzureDevopsSecurityGroupDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupDelete, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupList(AzureDevopsSecurityGroupListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--continuation-token</c> via <see cref="AzureDevopsSecurityGroupListSettings.ContinuationToken"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsSecurityGroupListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupListSettings.Query"/></li>
        ///     <li><c>--scope</c> via <see cref="AzureDevopsSecurityGroupListSettings.Scope"/></li>
        ///     <li><c>--subject-types</c> via <see cref="AzureDevopsSecurityGroupListSettings.SubjectTypes"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupList(Configure<AzureDevopsSecurityGroupListSettings> configurator)
        {
            return AzureDevopsSecurityGroupList(configurator(new AzureDevopsSecurityGroupListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--continuation-token</c> via <see cref="AzureDevopsSecurityGroupListSettings.ContinuationToken"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupListSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsSecurityGroupListSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupListSettings.Query"/></li>
        ///     <li><c>--scope</c> via <see cref="AzureDevopsSecurityGroupListSettings.Scope"/></li>
        ///     <li><c>--subject-types</c> via <see cref="AzureDevopsSecurityGroupListSettings.SubjectTypes"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupList(CombinatorialConfigure<AzureDevopsSecurityGroupListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupShow(AzureDevopsSecurityGroupShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupShow(Configure<AzureDevopsSecurityGroupShowSettings> configurator)
        {
            return AzureDevopsSecurityGroupShow(configurator(new AzureDevopsSecurityGroupShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupShow(CombinatorialConfigure<AzureDevopsSecurityGroupShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupUpdate(AzureDevopsSecurityGroupUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupUpdate(Configure<AzureDevopsSecurityGroupUpdateSettings> configurator)
        {
            return AzureDevopsSecurityGroupUpdate(configurator(new AzureDevopsSecurityGroupUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Debug"/></li>
        ///     <li><c>--description</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Description"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Id"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupUpdate(CombinatorialConfigure<AzureDevopsSecurityGroupUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupUpdate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerAdd(AzureDevopsAdminBannerAddSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsAdminBannerAddSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerAddSettings.Detect"/></li>
        ///     <li><c>--expiration</c> via <see cref="AzureDevopsAdminBannerAddSettings.Expiration"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerAddSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerAddSettings.Id"/></li>
        ///     <li><c>--message</c> via <see cref="AzureDevopsAdminBannerAddSettings.Message"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerAddSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerAddSettings.Subscription"/></li>
        ///     <li><c>--type</c> via <see cref="AzureDevopsAdminBannerAddSettings.Type"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerAdd(Configure<AzureDevopsAdminBannerAddSettings> configurator)
        {
            return AzureDevopsAdminBannerAdd(configurator(new AzureDevopsAdminBannerAddSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerAddSettings.Detect"/></li>
        ///     <li><c>--expiration</c> via <see cref="AzureDevopsAdminBannerAddSettings.Expiration"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerAddSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerAddSettings.Id"/></li>
        ///     <li><c>--message</c> via <see cref="AzureDevopsAdminBannerAddSettings.Message"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerAddSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerAddSettings.Subscription"/></li>
        ///     <li><c>--type</c> via <see cref="AzureDevopsAdminBannerAddSettings.Type"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsAdminBannerAddSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsAdminBannerAdd(CombinatorialConfigure<AzureDevopsAdminBannerAddSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsAdminBannerAdd, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerList(AzureDevopsAdminBannerListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsAdminBannerListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerList(Configure<AzureDevopsAdminBannerListSettings> configurator)
        {
            return AzureDevopsAdminBannerList(configurator(new AzureDevopsAdminBannerListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerListSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsAdminBannerListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsAdminBannerList(CombinatorialConfigure<AzureDevopsAdminBannerListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsAdminBannerList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerRemove(AzureDevopsAdminBannerRemoveSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsAdminBannerRemoveSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerRemove(Configure<AzureDevopsAdminBannerRemoveSettings> configurator)
        {
            return AzureDevopsAdminBannerRemove(configurator(new AzureDevopsAdminBannerRemoveSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerRemoveSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsAdminBannerRemoveSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsAdminBannerRemove(CombinatorialConfigure<AzureDevopsAdminBannerRemoveSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsAdminBannerRemove, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerShow(AzureDevopsAdminBannerShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsAdminBannerShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerShow(Configure<AzureDevopsAdminBannerShowSettings> configurator)
        {
            return AzureDevopsAdminBannerShow(configurator(new AzureDevopsAdminBannerShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsAdminBannerShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsAdminBannerShow(CombinatorialConfigure<AzureDevopsAdminBannerShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsAdminBannerShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerUpdate(AzureDevopsAdminBannerUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsAdminBannerUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Detect"/></li>
        ///     <li><c>--expiration</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Expiration"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Id"/></li>
        ///     <li><c>--message</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Message"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Subscription"/></li>
        ///     <li><c>--type</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Type"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsAdminBannerUpdate(Configure<AzureDevopsAdminBannerUpdateSettings> configurator)
        {
            return AzureDevopsAdminBannerUpdate(configurator(new AzureDevopsAdminBannerUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Detect"/></li>
        ///     <li><c>--expiration</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Expiration"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Id"/></li>
        ///     <li><c>--message</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Message"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Subscription"/></li>
        ///     <li><c>--type</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Type"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsAdminBannerUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsAdminBannerUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsAdminBannerUpdate(CombinatorialConfigure<AzureDevopsAdminBannerUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsAdminBannerUpdate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageCreate(AzureDevopsWikiPageCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiPageCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--comment</c> via <see cref="AzureDevopsWikiPageCreateSettings.Comment"/></li>
        ///     <li><c>--content</c> via <see cref="AzureDevopsWikiPageCreateSettings.Content"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageCreateSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsWikiPageCreateSettings.Encoding"/></li>
        ///     <li><c>--file-path</c> via <see cref="AzureDevopsWikiPageCreateSettings.FilePath"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageCreateSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageCreateSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageCreateSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageCreateSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageCreateSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageCreate(Configure<AzureDevopsWikiPageCreateSettings> configurator)
        {
            return AzureDevopsWikiPageCreate(configurator(new AzureDevopsWikiPageCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--comment</c> via <see cref="AzureDevopsWikiPageCreateSettings.Comment"/></li>
        ///     <li><c>--content</c> via <see cref="AzureDevopsWikiPageCreateSettings.Content"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageCreateSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsWikiPageCreateSettings.Encoding"/></li>
        ///     <li><c>--file-path</c> via <see cref="AzureDevopsWikiPageCreateSettings.FilePath"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageCreateSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageCreateSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageCreateSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageCreateSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageCreateSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiPageCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiPageCreate(CombinatorialConfigure<AzureDevopsWikiPageCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiPageCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageDelete(AzureDevopsWikiPageDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiPageDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--comment</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Comment"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Wiki"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageDelete(Configure<AzureDevopsWikiPageDeleteSettings> configurator)
        {
            return AzureDevopsWikiPageDelete(configurator(new AzureDevopsWikiPageDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--comment</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Comment"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Verbose"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Wiki"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsWikiPageDeleteSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiPageDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiPageDelete(CombinatorialConfigure<AzureDevopsWikiPageDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiPageDelete, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageShow(AzureDevopsWikiPageShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiPageShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageShowSettings.Help"/></li>
        ///     <li><c>--include-content</c> via <see cref="AzureDevopsWikiPageShowSettings.IncludeContent"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsWikiPageShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageShowSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageShowSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageShowSettings.Verbose"/></li>
        ///     <li><c>--version</c> via <see cref="AzureDevopsWikiPageShowSettings.Version"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageShowSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageShow(Configure<AzureDevopsWikiPageShowSettings> configurator)
        {
            return AzureDevopsWikiPageShow(configurator(new AzureDevopsWikiPageShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageShowSettings.Help"/></li>
        ///     <li><c>--include-content</c> via <see cref="AzureDevopsWikiPageShowSettings.IncludeContent"/></li>
        ///     <li><c>--open</c> via <see cref="AzureDevopsWikiPageShowSettings.Open"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageShowSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageShowSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageShowSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageShowSettings.Verbose"/></li>
        ///     <li><c>--version</c> via <see cref="AzureDevopsWikiPageShowSettings.Version"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageShowSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiPageShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiPageShow(CombinatorialConfigure<AzureDevopsWikiPageShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiPageShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageUpdate(AzureDevopsWikiPageUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsWikiPageUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--comment</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Comment"/></li>
        ///     <li><c>--content</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Content"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Encoding"/></li>
        ///     <li><c>--file-path</c> via <see cref="AzureDevopsWikiPageUpdateSettings.FilePath"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Verbose"/></li>
        ///     <li><c>--version</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Version"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsWikiPageUpdate(Configure<AzureDevopsWikiPageUpdateSettings> configurator)
        {
            return AzureDevopsWikiPageUpdate(configurator(new AzureDevopsWikiPageUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--comment</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Comment"/></li>
        ///     <li><c>--content</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Content"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Detect"/></li>
        ///     <li><c>--encoding</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Encoding"/></li>
        ///     <li><c>--file-path</c> via <see cref="AzureDevopsWikiPageUpdateSettings.FilePath"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Help"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Output"/></li>
        ///     <li><c>--path</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Path"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Verbose"/></li>
        ///     <li><c>--version</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Version"/></li>
        ///     <li><c>--wiki</c> via <see cref="AzureDevopsWikiPageUpdateSettings.Wiki"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsWikiPageUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsWikiPageUpdate(CombinatorialConfigure<AzureDevopsWikiPageUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsWikiPageUpdate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointAzurermCreate(AzureDevopsServiceEndpointAzurermCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsServiceEndpointAzurermCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--azure-rm-service-principal-certificate-path</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalCertificatePath"/></li>
        ///     <li><c>--azure-rm-service-principal-id</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalId"/></li>
        ///     <li><c>--azure-rm-subscription-id</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionId"/></li>
        ///     <li><c>--azure-rm-subscription-name</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionName"/></li>
        ///     <li><c>--azure-rm-tenant-id</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmTenantId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointAzurermCreate(Configure<AzureDevopsServiceEndpointAzurermCreateSettings> configurator)
        {
            return AzureDevopsServiceEndpointAzurermCreate(configurator(new AzureDevopsServiceEndpointAzurermCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--azure-rm-service-principal-certificate-path</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalCertificatePath"/></li>
        ///     <li><c>--azure-rm-service-principal-id</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalId"/></li>
        ///     <li><c>--azure-rm-subscription-id</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionId"/></li>
        ///     <li><c>--azure-rm-subscription-name</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionName"/></li>
        ///     <li><c>--azure-rm-tenant-id</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmTenantId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsServiceEndpointAzurermCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsServiceEndpointAzurermCreate(CombinatorialConfigure<AzureDevopsServiceEndpointAzurermCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsServiceEndpointAzurermCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointGithubCreate(AzureDevopsServiceEndpointGithubCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsServiceEndpointGithubCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Detect"/></li>
        ///     <li><c>--github-url</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.GithubUrl"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsServiceEndpointGithubCreate(Configure<AzureDevopsServiceEndpointGithubCreateSettings> configurator)
        {
            return AzureDevopsServiceEndpointGithubCreate(configurator(new AzureDevopsServiceEndpointGithubCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Detect"/></li>
        ///     <li><c>--github-url</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.GithubUrl"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Name"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Output"/></li>
        ///     <li><c>--project</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Project"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsServiceEndpointGithubCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsServiceEndpointGithubCreate(CombinatorialConfigure<AzureDevopsServiceEndpointGithubCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsServiceEndpointGithubCreate, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupMembershipAdd(AzureDevopsSecurityGroupMembershipAddSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupMembershipAddSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Help"/></li>
        ///     <li><c>--member-id</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.MemberId"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupMembershipAdd(Configure<AzureDevopsSecurityGroupMembershipAddSettings> configurator)
        {
            return AzureDevopsSecurityGroupMembershipAdd(configurator(new AzureDevopsSecurityGroupMembershipAddSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Help"/></li>
        ///     <li><c>--member-id</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.MemberId"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupMembershipAddSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupMembershipAdd(CombinatorialConfigure<AzureDevopsSecurityGroupMembershipAddSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupMembershipAdd, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupMembershipList(AzureDevopsSecurityGroupMembershipListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupMembershipListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Query"/></li>
        ///     <li><c>--relationship</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Relationship"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupMembershipList(Configure<AzureDevopsSecurityGroupMembershipListSettings> configurator)
        {
            return AzureDevopsSecurityGroupMembershipList(configurator(new AzureDevopsSecurityGroupMembershipListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Query"/></li>
        ///     <li><c>--relationship</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Relationship"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupMembershipListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupMembershipListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupMembershipList(CombinatorialConfigure<AzureDevopsSecurityGroupMembershipListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupMembershipList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupMembershipRemove(AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityGroupMembershipRemoveSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Help"/></li>
        ///     <li><c>--member-id</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.MemberId"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityGroupMembershipRemove(Configure<AzureDevopsSecurityGroupMembershipRemoveSettings> configurator)
        {
            return AzureDevopsSecurityGroupMembershipRemove(configurator(new AzureDevopsSecurityGroupMembershipRemoveSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Detect"/></li>
        ///     <li><c>--group-id</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.GroupId"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Help"/></li>
        ///     <li><c>--member-id</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.MemberId"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Verbose"/></li>
        ///     <li><c>--yes</c> via <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Yes"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityGroupMembershipRemoveSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityGroupMembershipRemove(CombinatorialConfigure<AzureDevopsSecurityGroupMembershipRemoveSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityGroupMembershipRemove, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionNamespaceList(AzureDevopsSecurityPermissionNamespaceListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityPermissionNamespaceListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Help"/></li>
        ///     <li><c>--local-only</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.LocalOnly"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionNamespaceList(Configure<AzureDevopsSecurityPermissionNamespaceListSettings> configurator)
        {
            return AzureDevopsSecurityPermissionNamespaceList(configurator(new AzureDevopsSecurityPermissionNamespaceListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Help"/></li>
        ///     <li><c>--local-only</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.LocalOnly"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityPermissionNamespaceListSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityPermissionNamespaceList(CombinatorialConfigure<AzureDevopsSecurityPermissionNamespaceListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityPermissionNamespaceList, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionNamespaceShow(AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureDevopsSecurityPermissionNamespaceShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureDevopsSecurityPermissionNamespaceShow(Configure<AzureDevopsSecurityPermissionNamespaceShowSettings> configurator)
        {
            return AzureDevopsSecurityPermissionNamespaceShow(configurator(new AzureDevopsSecurityPermissionNamespaceShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure DevOps organization level operations.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/devops?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Debug"/></li>
        ///     <li><c>--detect</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Detect"/></li>
        ///     <li><c>--help</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Help"/></li>
        ///     <li><c>--id</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Id"/></li>
        ///     <li><c>--org</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Org"/></li>
        ///     <li><c>--output</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureDevopsSecurityPermissionNamespaceShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureDevopsSecurityPermissionNamespaceShow(CombinatorialConfigure<AzureDevopsSecurityPermissionNamespaceShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureDevopsSecurityPermissionNamespaceShow, AzureDevopsLogger, degreeOfParallelism, completeOnFailure);
        }
    }
    #region AzureDevopsConfigureSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsConfigureSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.
        /// </summary>
        public virtual IReadOnlyList<string> Defaults => DefaultsInternal.AsReadOnly();
        internal List<string> DefaultsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Lists the contents of the config file.
        /// </summary>
        public virtual string List { get; internal set; }
        /// <summary>
        ///   Set to 'true' to configure Git aliases global git config file (to enable commands like "git pr list"). Set to 'false' to remove any aliases set by the tool.
        /// </summary>
        public virtual bool? UseGitAliases { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops configure")
              .Add("--defaults {value}", Defaults, separator: ' ')
              .Add("--list {value}", List)
              .Add("--use-git-aliases", UseGitAliases)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsFeedbackSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsFeedbackSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops feedback")
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsInvokeSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsInvokeSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Specifies the content type of the response.
        /// </summary>
        public virtual string AcceptMediaType { get; internal set; }
        /// <summary>
        ///   The version of the API to target.
        /// </summary>
        public virtual string ApiVersion { get; internal set; }
        /// <summary>
        ///   The area to find the resource.
        /// </summary>
        public virtual string Area { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Encoding of the input file. Used in conjunction with --in-file.
        /// </summary>
        public virtual DevopsEncoding Encoding { get; internal set; }
        /// <summary>
        ///   Specifies the method used for the request.
        /// </summary>
        public virtual RestMethod HttpMethod { get; internal set; }
        /// <summary>
        ///   Path and file name to the file that contains the contents of the request.
        /// </summary>
        public virtual string InFile { get; internal set; }
        /// <summary>
        ///   Specifies the content type of the request.
        /// </summary>
        public virtual string MediaType { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Path and file name to the file  for which this function saves the response body.
        /// </summary>
        public virtual string OutFile { get; internal set; }
        /// <summary>
        ///   Specifies the list of query parameters.
        /// </summary>
        public virtual string QueryParameters { get; internal set; }
        /// <summary>
        ///   The name of the resource to operate on.
        /// </summary>
        public virtual string Resource { get; internal set; }
        /// <summary>
        ///   Specifies the list of route parameters.
        /// </summary>
        public virtual string RouteParameters { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops invoke")
              .Add("--accept-media-type {value}", AcceptMediaType)
              .Add("--api-version {value}", ApiVersion)
              .Add("--area {value}", Area)
              .Add("--detect", Detect)
              .Add("--encoding {value}", Encoding)
              .Add("--http-method {value}", HttpMethod)
              .Add("--in-file {value}", InFile)
              .Add("--media-type {value}", MediaType)
              .Add("--org {value}", Org)
              .Add("--out-file {value}", OutFile)
              .Add("--query-parameters {value}", QueryParameters)
              .Add("--resource {value}", Resource)
              .Add("--route-parameters {value}", RouteParameters)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsLoginSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsLoginSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Azure DevOps organization URL. Example: <a href="https://dev.azure.com/MyOrganizationName">https://dev.azure.com/MyOrganizationName</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops login")
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsLogoutSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsLogoutSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Azure DevOps organization URL. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>. If no organization is specified, all organizations will be logged out.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops logout")
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsExtensionDisableSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsExtensionDisableSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Extension Name.
        /// </summary>
        public virtual string ExtensionName { get; internal set; }
        /// <summary>
        ///   Publisher Name.
        /// </summary>
        public virtual string PublisherName { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops extension disable")
              .Add("--extension-name {value}", ExtensionName)
              .Add("--publisher-name {value}", PublisherName)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsExtensionEnableSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsExtensionEnableSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Extension Name.
        /// </summary>
        public virtual string ExtensionName { get; internal set; }
        /// <summary>
        ///   Publisher Name.
        /// </summary>
        public virtual string PublisherName { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops extension enable")
              .Add("--extension-name {value}", ExtensionName)
              .Add("--publisher-name {value}", PublisherName)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsExtensionInstallSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsExtensionInstallSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Extension Name.
        /// </summary>
        public virtual string ExtensionName { get; internal set; }
        /// <summary>
        ///   Publisher Name.
        /// </summary>
        public virtual string PublisherName { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops extension install")
              .Add("--extension-name {value}", ExtensionName)
              .Add("--publisher-name {value}", PublisherName)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsExtensionListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsExtensionListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Include built in extensions.
        /// </summary>
        public virtual bool? IncludeBuiltIn { get; internal set; }
        /// <summary>
        ///   Include disabled extensions.
        /// </summary>
        public virtual bool? IncludeDisabled { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops extension list")
              .Add("--detect", Detect)
              .Add("--include-built-in", IncludeBuiltIn)
              .Add("--include-disabled", IncludeDisabled)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsExtensionSearchSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsExtensionSearchSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Search term.
        /// </summary>
        public virtual string SearchQuery { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops extension search")
              .Add("--search-query {value}", SearchQuery)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsExtensionShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsExtensionShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Extension Name.
        /// </summary>
        public virtual string ExtensionName { get; internal set; }
        /// <summary>
        ///   Publisher Name.
        /// </summary>
        public virtual string PublisherName { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops extension show")
              .Add("--extension-name {value}", ExtensionName)
              .Add("--publisher-name {value}", PublisherName)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsExtensionUninstallSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsExtensionUninstallSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Extension Name.
        /// </summary>
        public virtual string ExtensionName { get; internal set; }
        /// <summary>
        ///   Publisher Name.
        /// </summary>
        public virtual string PublisherName { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops extension uninstall")
              .Add("--extension-name {value}", ExtensionName)
              .Add("--publisher-name {value}", PublisherName)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsAdminSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsAdminSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops admin")
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecuritySettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecuritySettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security")
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsProjectCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsProjectCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Name of the new project.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Description for the new project.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the team project in the default web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Process to use. Default if not specified.
        /// </summary>
        public virtual string Process { get; internal set; }
        /// <summary>
        ///   Source control type of the initial code repository created.
        /// </summary>
        public virtual DevopsProjectCreateSourceControl SourceControl { get; internal set; }
        /// <summary>
        ///   Project visibility.
        /// </summary>
        public virtual DevopsProjectCreateVisibility Visibility { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops project create")
              .Add("--name {value}", Name)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--process {value}", Process)
              .Add("--source-control {value}", SourceControl)
              .Add("--visibility {value}", Visibility)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsProjectDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsProjectDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   The id of the project to delete.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops project delete")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsProjectListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsProjectListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Number of results to skip.
        /// </summary>
        public virtual int? Skip { get; internal set; }
        /// <summary>
        ///   Maximum number of results to list.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops project list")
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsProjectShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsProjectShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the team project in the default web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops project show")
              .Add("--project {value}", Project)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsServiceEndpointCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsServiceEndpointCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Configuration file with service endpoint request.
        /// </summary>
        public virtual string ServiceEndpointConfiguration { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Encoding of the input file.
        /// </summary>
        public virtual DevopsEncoding Encoding { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops service-endpoint create")
              .Add("--service-endpoint-configuration {value}", ServiceEndpointConfiguration)
              .Add("--detect", Detect)
              .Add("--encoding {value}", Encoding)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsServiceEndpointDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsServiceEndpointDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Id of the service endpoint to delete.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Specific to AzureRM endpoint created in Automatic flow. When it is specified, this will also delete corresponding AAD application in Azure.
        /// </summary>
        public virtual string Deep { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops service-endpoint delete")
              .Add("--id {value}", Id)
              .Add("--deep {value}", Deep)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsServiceEndpointListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsServiceEndpointListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops service-endpoint list")
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsServiceEndpointShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsServiceEndpointShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of the service endpoint.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops service-endpoint show")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsUserAddSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsUserAddSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Email ID of the user.
        /// </summary>
        public virtual string EmailId { get; internal set; }
        /// <summary>
        ///   License type for the user.
        /// </summary>
        public virtual DevopsUserLicenseType LicenseType { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Whether to send email invite for new user or not.
        /// </summary>
        public virtual bool? SendEmailInvite { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops user add")
              .Add("--email-id {value}", EmailId)
              .Add("--license-type {value}", LicenseType)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--send-email-invite", SendEmailInvite)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsUserListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsUserListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Offset: Number of records to skip.
        /// </summary>
        public virtual string Skip { get; internal set; }
        /// <summary>
        ///   Maximum number of users to return. Max value is 10000.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops user list")
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsUserRemoveSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsUserRemoveSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Email ID or ID of the user.
        /// </summary>
        public virtual string User { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops user remove")
              .Add("--user {value}", User)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsUserShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsUserShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Email ID or ID of the user.
        /// </summary>
        public virtual string User { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops user show")
              .Add("--user {value}", User)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsUserUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsUserUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   License type for the user.
        /// </summary>
        public virtual DevopsUserLicenseType LicenseType { get; internal set; }
        /// <summary>
        ///   Email ID or ID of the user.
        /// </summary>
        public virtual string User { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops user update")
              .Add("--license-type {value}", LicenseType)
              .Add("--user {value}", User)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsTeamCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsTeamCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Name of the new team.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Description of the new team.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops team create")
              .Add("--name {value}", Name)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsTeamDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsTeamDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   The id of the team to delete.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops team delete")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsTeamListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsTeamListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Number of teams to skip.
        /// </summary>
        public virtual int? Skip { get; internal set; }
        /// <summary>
        ///   Maximum number of teams to return.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops team list")
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsTeamListMemberSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsTeamListMemberSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   The name or id of the team to show members of.
        /// </summary>
        public virtual string Team { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Number of members to skip.
        /// </summary>
        public virtual int? Skip { get; internal set; }
        /// <summary>
        ///   Maximum number of members to return.
        /// </summary>
        public virtual int? Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops team list-member")
              .Add("--team {value}", Team)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsTeamShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsTeamShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   The name or id of the team to show.
        /// </summary>
        public virtual string Team { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops team show")
              .Add("--team {value}", Team)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsTeamUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsTeamUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   The name or id of the team to be updated.
        /// </summary>
        public virtual string Team { get; internal set; }
        /// <summary>
        ///   New description of the team.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   New name of the team.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops team update")
              .Add("--team {value}", Team)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   [Required for codewiki type] Mapped path of the new wiki e.g. '/' to publish from root of repository.
        /// </summary>
        public virtual string MappedPath { get; internal set; }
        /// <summary>
        ///   Name of the new wiki.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   [Required for codewiki type] Name or ID of the repository to publish the wiki from.
        /// </summary>
        public virtual string Repository { get; internal set; }
        /// <summary>
        ///   Type of wiki to create.
        /// </summary>
        public virtual DevopsWikiCreateType Type { get; internal set; }
        /// <summary>
        ///   [Required for codewiki type] Repository branch name to publish the code wiki from.
        /// </summary>
        public virtual string Version { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki create")
              .Add("--detect", Detect)
              .Add("--mapped-path {value}", MappedPath)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--repository {value}", Repository)
              .Add("--type {value}", Type)
              .Add("--version {value}", Version)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Name or Id of the wiki to delete.
        /// </summary>
        public virtual string Wiki { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki delete")
              .Add("--wiki {value}", Wiki)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   List the wikis at project or organization level.
        /// </summary>
        public virtual DevopsWikiScope Scope { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki list")
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--scope {value}", Scope)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Name or Id of the wiki.
        /// </summary>
        public virtual string Wiki { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Open the wiki in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki show")
              .Add("--wiki {value}", Wiki)
              .Add("--detect", Detect)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityPermissionListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityPermissionListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of security namespace.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   User Email ID or Group descriptor.
        /// </summary>
        public virtual string Subject { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   If true and this is a hierarchical namespace, return child ACLs of the specified token.
        /// </summary>
        public virtual bool? Recurse { get; internal set; }
        /// <summary>
        ///   Security token.
        /// </summary>
        public virtual string Token { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security permission list")
              .Add("--id {value}", Id)
              .Add("--subject {value}", Subject)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--recurse", Recurse)
              .Add("--token {value}", Token)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityPermissionResetSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityPermissionResetSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of security namespace.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Permission bit or addition of permission bits which needs to be reset                         for given user/group and token.
        /// </summary>
        public virtual string PermissionBit { get; internal set; }
        /// <summary>
        ///   User Email ID or Group descriptor.
        /// </summary>
        public virtual string Subject { get; internal set; }
        /// <summary>
        ///   Security token.
        /// </summary>
        public virtual string Token { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security permission reset")
              .Add("--id {value}", Id)
              .Add("--permission-bit {value}", PermissionBit)
              .Add("--subject {value}", Subject)
              .Add("--token {value}", Token)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityPermissionResetAllSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityPermissionResetAllSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of security namespace.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   User Email ID or Group descriptor.
        /// </summary>
        public virtual string Subject { get; internal set; }
        /// <summary>
        ///   Security token.
        /// </summary>
        public virtual string Token { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security permission reset-all")
              .Add("--id {value}", Id)
              .Add("--subject {value}", Subject)
              .Add("--token {value}", Token)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityPermissionShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityPermissionShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of security namespace.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   User Email ID or Group descriptor.
        /// </summary>
        public virtual string Subject { get; internal set; }
        /// <summary>
        ///   Security token.
        /// </summary>
        public virtual string Token { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security permission show")
              .Add("--id {value}", Id)
              .Add("--subject {value}", Subject)
              .Add("--token {value}", Token)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityPermissionUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityPermissionUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of security namespace.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   User Email ID or Group descriptor.
        /// </summary>
        public virtual string Subject { get; internal set; }
        /// <summary>
        ///   Security token.
        /// </summary>
        public virtual string Token { get; internal set; }
        /// <summary>
        ///   Allow bit or addition of bits. Required if --deny-bit is missing.
        /// </summary>
        public virtual string AllowBit { get; internal set; }
        /// <summary>
        ///   Deny bit or addition of bits. Required if --allow-bit is missing.
        /// </summary>
        public virtual string DenyBit { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   If set, the existing ACE has its allow and deny merged with                          the incoming ACE's allow and deny. If unset, the existing ACE is displaced.
        /// </summary>
        public virtual bool? Merge { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security permission update")
              .Add("--id {value}", Id)
              .Add("--subject {value}", Subject)
              .Add("--token {value}", Token)
              .Add("--allow-bit {value}", AllowBit)
              .Add("--deny-bit {value}", DenyBit)
              .Add("--detect", Detect)
              .Add("--merge", Merge)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Description of Azure DevOps group.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Create new group using the mail address as a reference to an existing group from an external AD or AAD backed provider. Required if name or origin-id is missing.
        /// </summary>
        public virtual string EmailId { get; internal set; }
        /// <summary>
        ///   A comma separated list of descriptors referencing groups you want the newly created group to join.
        /// </summary>
        public virtual string Groups { get; internal set; }
        /// <summary>
        ///   Name of Azure DevOps group.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Create new group using the OriginID as a reference to an existing group from an external AD or AAD backed provider. Required if name or email-id is missing.
        /// </summary>
        public virtual string OriginId { get; internal set; }
        /// <summary>
        ///   Name or ID of the project in which Azure DevOps group should be created.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Create group at project or organization level.
        /// </summary>
        public virtual DevopsWikiScope Scope { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group create")
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--email-id {value}", EmailId)
              .Add("--groups {value}", Groups)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--origin-id {value}", OriginId)
              .Add("--project {value}", Project)
              .Add("--scope {value}", Scope)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Descriptor of the group.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group delete")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   If there are more results that can't be returned in a single page, the result set will contain a continuation token for retrieval of the next set of results.
        /// </summary>
        public virtual string ContinuationToken { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   List groups for a particular project.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   List groups at project or organization level.
        /// </summary>
        public virtual DevopsWikiScope Scope { get; internal set; }
        /// <summary>
        ///   A comma separated list of user subject subtypes to reduce the retrieved results. You can give initial part of descriptor [before the dot] as a filter e.g. vssgp,aadgp.
        /// </summary>
        public virtual string SubjectTypes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group list")
              .Add("--continuation-token {value}", ContinuationToken)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--scope {value}", Scope)
              .Add("--subject-types {value}", SubjectTypes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Descriptor of the group.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group show")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Descriptor of the group.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   New description for Azure DevOps group.
        /// </summary>
        public virtual string Description { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   New name for Azure DevOps group.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group update")
              .Add("--id {value}", Id)
              .Add("--description {value}", Description)
              .Add("--detect", Detect)
              .Add("--name {value}", Name)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsAdminBannerAddSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsAdminBannerAddSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Message (string) to show in the banner.
        /// </summary>
        public virtual string Message { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Date/time when the banner should no longer be presented to users. If not set, the banner does not automatically expire and must be removed with the remove command. Example : "2019-06-10 17:21:00 UTC", "2019-06-10".
        /// </summary>
        public virtual string Expiration { get; internal set; }
        /// <summary>
        ///   Identifier for the new banner. This identifier is needed to change or remove the message later. A unique identifier is automatically created if one is not specified.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Type of banner to present. Defaults is "info".
        /// </summary>
        public virtual DevopsAdminBannerType Type { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops admin banner add")
              .Add("--message {value}", Message)
              .Add("--detect", Detect)
              .Add("--expiration {value}", Expiration)
              .Add("--id {value}", Id)
              .Add("--org {value}", Org)
              .Add("--type {value}", Type)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsAdminBannerListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsAdminBannerListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops admin banner list")
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsAdminBannerRemoveSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsAdminBannerRemoveSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of the banner to remove.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops admin banner remove")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsAdminBannerShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsAdminBannerShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Identifier for the banner.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops admin banner show")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsAdminBannerUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsAdminBannerUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Date/time when the banner should no longer be presented to users. To unset the expiration for the banner, supply an empty value to this argument. Example : "2019-06-10 17:21:00 UTC", "2019-06-10".
        /// </summary>
        public virtual string Expiration { get; internal set; }
        /// <summary>
        ///   ID of the banner to update.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Message (string) to show in the banner.
        /// </summary>
        public virtual string Message { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Type of banner to present. Defaults is "info".
        /// </summary>
        public virtual DevopsAdminBannerType Type { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops admin banner update")
              .Add("--detect", Detect)
              .Add("--expiration {value}", Expiration)
              .Add("--id {value}", Id)
              .Add("--message {value}", Message)
              .Add("--org {value}", Org)
              .Add("--type {value}", Type)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiPageCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiPageCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Path of the wiki page.
        /// </summary>
        public virtual string Path { get; internal set; }
        /// <summary>
        ///   Name or Id of the wiki.
        /// </summary>
        public virtual string Wiki { get; internal set; }
        /// <summary>
        ///   Comment in the commit message of file add operation.
        /// </summary>
        public virtual string Comment { get; internal set; }
        /// <summary>
        ///   Content of the wiki page. Ignored if --file-path is specified.
        /// </summary>
        public virtual string Content { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Encoding of the file. Used in conjunction with --file-path parameter.
        /// </summary>
        public virtual DevopsEncoding Encoding { get; internal set; }
        /// <summary>
        ///   Path of the file input if content is specified in the file.
        /// </summary>
        public virtual string FilePath { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki page create")
              .Add("--path {value}", Path)
              .Add("--wiki {value}", Wiki)
              .Add("--comment {value}", Comment)
              .Add("--content {value}", Content)
              .Add("--detect", Detect)
              .Add("--encoding {value}", Encoding)
              .Add("--file-path {value}", FilePath)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiPageDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiPageDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Path of the wiki page.
        /// </summary>
        public virtual string Path { get; internal set; }
        /// <summary>
        ///   Name or Id of the wiki.
        /// </summary>
        public virtual string Wiki { get; internal set; }
        /// <summary>
        ///   Comment in the commit message of delete operation.
        /// </summary>
        public virtual string Comment { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki page delete")
              .Add("--path {value}", Path)
              .Add("--wiki {value}", Wiki)
              .Add("--comment {value}", Comment)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiPageShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiPageShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Path of the wiki page.
        /// </summary>
        public virtual string Path { get; internal set; }
        /// <summary>
        ///   Name or Id of the wiki.
        /// </summary>
        public virtual string Wiki { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Include content of the page.
        /// </summary>
        public virtual string IncludeContent { get; internal set; }
        /// <summary>
        ///   Open the wiki page in your web browser.
        /// </summary>
        public virtual string Open { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Version (ETag) of the wiki page.
        /// </summary>
        public virtual string Version { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki page show")
              .Add("--path {value}", Path)
              .Add("--wiki {value}", Wiki)
              .Add("--detect", Detect)
              .Add("--include-content {value}", IncludeContent)
              .Add("--open {value}", Open)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--version {value}", Version)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsWikiPageUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsWikiPageUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Path of the wiki page.
        /// </summary>
        public virtual string Path { get; internal set; }
        /// <summary>
        ///   Version (ETag) of file to edit.
        /// </summary>
        public virtual string Version { get; internal set; }
        /// <summary>
        ///   Name or Id of the wiki.
        /// </summary>
        public virtual string Wiki { get; internal set; }
        /// <summary>
        ///   Comment in the commit message of file edit operation.
        /// </summary>
        public virtual string Comment { get; internal set; }
        /// <summary>
        ///   Content of the wiki page. Ignored if --file-path is specified.
        /// </summary>
        public virtual string Content { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Encoding of the file. Used in conjunction with --file-path parameter.
        /// </summary>
        public virtual DevopsEncoding Encoding { get; internal set; }
        /// <summary>
        ///   Path of the file input if content is specified in the file.
        /// </summary>
        public virtual string FilePath { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops wiki page update")
              .Add("--path {value}", Path)
              .Add("--version {value}", Version)
              .Add("--wiki {value}", Wiki)
              .Add("--comment {value}", Comment)
              .Add("--content {value}", Content)
              .Add("--detect", Detect)
              .Add("--encoding {value}", Encoding)
              .Add("--file-path {value}", FilePath)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsServiceEndpointAzurermCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsServiceEndpointAzurermCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Service principal id for creating azure rm service endpoint.
        /// </summary>
        public virtual string AzureRmServicePrincipalId { get; internal set; }
        /// <summary>
        ///   Subscription id for azure rm service endpoint.
        /// </summary>
        public virtual string AzureRmSubscriptionId { get; internal set; }
        /// <summary>
        ///   Name of azure subscription for azure rm service endpoint.
        /// </summary>
        public virtual string AzureRmSubscriptionName { get; internal set; }
        /// <summary>
        ///   Tenant id for creating azure rm service endpoint.
        /// </summary>
        public virtual string AzureRmTenantId { get; internal set; }
        /// <summary>
        ///   Name of service endpoint to create.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Path to (.pem) which is certificate. Create using command "openssl pkcs12 -in file.pfx -out file.pem -nodes -password pass:&lt;password_here&gt;". More details : <a href="https://aka.ms/azure-devops-cli-service-endpoint">https://aka.ms/azure-devops-cli-service-endpoint</a>.
        /// </summary>
        public virtual string AzureRmServicePrincipalCertificatePath { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops service-endpoint urerm create")
              .Add("--azure-rm-service-principal-id {value}", AzureRmServicePrincipalId)
              .Add("--azure-rm-subscription-id {value}", AzureRmSubscriptionId)
              .Add("--azure-rm-subscription-name {value}", AzureRmSubscriptionName)
              .Add("--azure-rm-tenant-id {value}", AzureRmTenantId)
              .Add("--name {value}", Name)
              .Add("--azure-rm-service-principal-certificate-path {value}", AzureRmServicePrincipalCertificatePath)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsServiceEndpointGithubCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsServiceEndpointGithubCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Url for github for creating service endpoint.
        /// </summary>
        public virtual string GithubUrl { get; internal set; }
        /// <summary>
        ///   Name of service endpoint to create.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
        /// </summary>
        public virtual string Project { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops service-endpoint github create")
              .Add("--github-url {value}", GithubUrl)
              .Add("--name {value}", Name)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--project {value}", Project)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupMembershipAddSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupMembershipAddSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Descriptor of the group to which member needs to be added.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Descriptor of the group or Email Id of the user to be added.
        /// </summary>
        public virtual string MemberId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group membership add")
              .Add("--group-id {value}", GroupId)
              .Add("--member-id {value}", MemberId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupMembershipListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupMembershipListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Group descriptor or User Email whose membership details are required.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Get member of/members for this group.
        /// </summary>
        public virtual DevopsSecurityGroupMembershipListRelationship Relationship { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group membership list")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--relationship {value}", Relationship)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityGroupMembershipRemoveSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityGroupMembershipRemoveSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Descriptor of the group from which member needs to be removed.
        /// </summary>
        public virtual string GroupId { get; internal set; }
        /// <summary>
        ///   Descriptor of the group or Email Id of the user to be removed.
        /// </summary>
        public virtual string MemberId { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Do not prompt for confirmation.
        /// </summary>
        public virtual string Yes { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security group membership remove")
              .Add("--group-id {value}", GroupId)
              .Add("--member-id {value}", MemberId)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--yes {value}", Yes)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityPermissionNamespaceListSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityPermissionNamespaceListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   If true, retrieve only local security namespaces.
        /// </summary>
        public virtual bool? LocalOnly { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security permission namespace list")
              .Add("--detect", Detect)
              .Add("--local-only", LocalOnly)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsSecurityPermissionNamespaceShowSettings
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureDevopsSecurityPermissionNamespaceShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureDevops executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureDevopsTasks.AzureDevopsPath;
        public override Action<OutputType, string> CustomLogger => AzureDevopsTasks.AzureDevopsLogger;
        /// <summary>
        ///   ID of security namespace.
        /// </summary>
        public virtual string Id { get; internal set; }
        /// <summary>
        ///   Automatically detect organization.
        /// </summary>
        public virtual bool? Detect { get; internal set; }
        /// <summary>
        ///   Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.
        /// </summary>
        public virtual string Org { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("devops security permission namespace show")
              .Add("--id {value}", Id)
              .Add("--detect", Detect)
              .Add("--org {value}", Org)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureDevopsConfigureSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsConfigureSettingsExtensions
    {
        #region Defaults
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Defaults"/> to a new list</em></p>
        ///   <p>Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetDefaults(this AzureDevopsConfigureSettings toolSettings, params string[] defaults)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultsInternal = defaults.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Defaults"/> to a new list</em></p>
        ///   <p>Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetDefaults(this AzureDevopsConfigureSettings toolSettings, IEnumerable<string> defaults)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultsInternal = defaults.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureDevopsConfigureSettings.Defaults"/></em></p>
        ///   <p>Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings AddDefaults(this AzureDevopsConfigureSettings toolSettings, params string[] defaults)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultsInternal.AddRange(defaults);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureDevopsConfigureSettings.Defaults"/></em></p>
        ///   <p>Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings AddDefaults(this AzureDevopsConfigureSettings toolSettings, IEnumerable<string> defaults)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultsInternal.AddRange(defaults);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureDevopsConfigureSettings.Defaults"/></em></p>
        ///   <p>Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ClearDefaults(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureDevopsConfigureSettings.Defaults"/></em></p>
        ///   <p>Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings RemoveDefaults(this AzureDevopsConfigureSettings toolSettings, params string[] defaults)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(defaults);
            toolSettings.DefaultsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureDevopsConfigureSettings.Defaults"/></em></p>
        ///   <p>Space separated 'name=value' pairs for common arguments defaults, e.g. '--defaults project=my-project-name organization=https://dev.azure.com/organizationName arg=value'. Use '' to clear the defaults, e.g. --defaults project=''.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings RemoveDefaults(this AzureDevopsConfigureSettings toolSettings, IEnumerable<string> defaults)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(defaults);
            toolSettings.DefaultsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region List
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.List"/></em></p>
        ///   <p>Lists the contents of the config file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetList(this AzureDevopsConfigureSettings toolSettings, string list)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.List = list;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.List"/></em></p>
        ///   <p>Lists the contents of the config file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetList(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.List = null;
            return toolSettings;
        }
        #endregion
        #region UseGitAliases
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.UseGitAliases"/></em></p>
        ///   <p>Set to 'true' to configure Git aliases global git config file (to enable commands like "git pr list"). Set to 'false' to remove any aliases set by the tool.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetUseGitAliases(this AzureDevopsConfigureSettings toolSettings, bool? useGitAliases)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.UseGitAliases = useGitAliases;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.UseGitAliases"/></em></p>
        ///   <p>Set to 'true' to configure Git aliases global git config file (to enable commands like "git pr list"). Set to 'false' to remove any aliases set by the tool.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetUseGitAliases(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.UseGitAliases = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsConfigureSettings.UseGitAliases"/></em></p>
        ///   <p>Set to 'true' to configure Git aliases global git config file (to enable commands like "git pr list"). Set to 'false' to remove any aliases set by the tool.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings EnableUseGitAliases(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.UseGitAliases = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsConfigureSettings.UseGitAliases"/></em></p>
        ///   <p>Set to 'true' to configure Git aliases global git config file (to enable commands like "git pr list"). Set to 'false' to remove any aliases set by the tool.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings DisableUseGitAliases(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.UseGitAliases = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsConfigureSettings.UseGitAliases"/></em></p>
        ///   <p>Set to 'true' to configure Git aliases global git config file (to enable commands like "git pr list"). Set to 'false' to remove any aliases set by the tool.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ToggleUseGitAliases(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.UseGitAliases = !toolSettings.UseGitAliases;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetSubscription(this AzureDevopsConfigureSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetSubscription(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetDebug(this AzureDevopsConfigureSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetDebug(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetHelp(this AzureDevopsConfigureSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetHelp(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetOutput(this AzureDevopsConfigureSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetOutput(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetQuery(this AzureDevopsConfigureSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetQuery(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsConfigureSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings SetVerbose(this AzureDevopsConfigureSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsConfigureSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsConfigureSettings ResetVerbose(this AzureDevopsConfigureSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsFeedbackSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsFeedbackSettingsExtensions
    {
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsFeedbackSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings SetSubscription(this AzureDevopsFeedbackSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsFeedbackSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings ResetSubscription(this AzureDevopsFeedbackSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsFeedbackSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings SetDebug(this AzureDevopsFeedbackSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsFeedbackSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings ResetDebug(this AzureDevopsFeedbackSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsFeedbackSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings SetHelp(this AzureDevopsFeedbackSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsFeedbackSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings ResetHelp(this AzureDevopsFeedbackSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsFeedbackSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings SetOutput(this AzureDevopsFeedbackSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsFeedbackSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings ResetOutput(this AzureDevopsFeedbackSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsFeedbackSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings SetQuery(this AzureDevopsFeedbackSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsFeedbackSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings ResetQuery(this AzureDevopsFeedbackSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsFeedbackSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings SetVerbose(this AzureDevopsFeedbackSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsFeedbackSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsFeedbackSettings ResetVerbose(this AzureDevopsFeedbackSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsInvokeSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsInvokeSettingsExtensions
    {
        #region AcceptMediaType
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.AcceptMediaType"/></em></p>
        ///   <p>Specifies the content type of the response.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetAcceptMediaType(this AzureDevopsInvokeSettings toolSettings, string acceptMediaType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AcceptMediaType = acceptMediaType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.AcceptMediaType"/></em></p>
        ///   <p>Specifies the content type of the response.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetAcceptMediaType(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AcceptMediaType = null;
            return toolSettings;
        }
        #endregion
        #region ApiVersion
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.ApiVersion"/></em></p>
        ///   <p>The version of the API to target.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetApiVersion(this AzureDevopsInvokeSettings toolSettings, string apiVersion)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ApiVersion = apiVersion;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.ApiVersion"/></em></p>
        ///   <p>The version of the API to target.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetApiVersion(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ApiVersion = null;
            return toolSettings;
        }
        #endregion
        #region Area
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Area"/></em></p>
        ///   <p>The area to find the resource.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetArea(this AzureDevopsInvokeSettings toolSettings, string area)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Area = area;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Area"/></em></p>
        ///   <p>The area to find the resource.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetArea(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Area = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetDetect(this AzureDevopsInvokeSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetDetect(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsInvokeSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings EnableDetect(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsInvokeSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings DisableDetect(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsInvokeSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ToggleDetect(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Encoding
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Encoding"/></em></p>
        ///   <p>Encoding of the input file. Used in conjunction with --in-file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetEncoding(this AzureDevopsInvokeSettings toolSettings, DevopsEncoding encoding)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = encoding;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Encoding"/></em></p>
        ///   <p>Encoding of the input file. Used in conjunction with --in-file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetEncoding(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = null;
            return toolSettings;
        }
        #endregion
        #region HttpMethod
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.HttpMethod"/></em></p>
        ///   <p>Specifies the method used for the request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetHttpMethod(this AzureDevopsInvokeSettings toolSettings, RestMethod httpMethod)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.HttpMethod = httpMethod;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.HttpMethod"/></em></p>
        ///   <p>Specifies the method used for the request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetHttpMethod(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.HttpMethod = null;
            return toolSettings;
        }
        #endregion
        #region InFile
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.InFile"/></em></p>
        ///   <p>Path and file name to the file that contains the contents of the request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetInFile(this AzureDevopsInvokeSettings toolSettings, string inFile)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.InFile = inFile;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.InFile"/></em></p>
        ///   <p>Path and file name to the file that contains the contents of the request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetInFile(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.InFile = null;
            return toolSettings;
        }
        #endregion
        #region MediaType
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.MediaType"/></em></p>
        ///   <p>Specifies the content type of the request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetMediaType(this AzureDevopsInvokeSettings toolSettings, string mediaType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MediaType = mediaType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.MediaType"/></em></p>
        ///   <p>Specifies the content type of the request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetMediaType(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MediaType = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetOrg(this AzureDevopsInvokeSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetOrg(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region OutFile
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.OutFile"/></em></p>
        ///   <p>Path and file name to the file  for which this function saves the response body.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetOutFile(this AzureDevopsInvokeSettings toolSettings, string outFile)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.OutFile = outFile;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.OutFile"/></em></p>
        ///   <p>Path and file name to the file  for which this function saves the response body.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetOutFile(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.OutFile = null;
            return toolSettings;
        }
        #endregion
        #region QueryParameters
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.QueryParameters"/></em></p>
        ///   <p>Specifies the list of query parameters.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetQueryParameters(this AzureDevopsInvokeSettings toolSettings, string queryParameters)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryParameters = queryParameters;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.QueryParameters"/></em></p>
        ///   <p>Specifies the list of query parameters.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetQueryParameters(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueryParameters = null;
            return toolSettings;
        }
        #endregion
        #region Resource
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Resource"/></em></p>
        ///   <p>The name of the resource to operate on.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetResource(this AzureDevopsInvokeSettings toolSettings, string resource)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Resource = resource;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Resource"/></em></p>
        ///   <p>The name of the resource to operate on.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetResource(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Resource = null;
            return toolSettings;
        }
        #endregion
        #region RouteParameters
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.RouteParameters"/></em></p>
        ///   <p>Specifies the list of route parameters.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetRouteParameters(this AzureDevopsInvokeSettings toolSettings, string routeParameters)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RouteParameters = routeParameters;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.RouteParameters"/></em></p>
        ///   <p>Specifies the list of route parameters.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetRouteParameters(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RouteParameters = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetSubscription(this AzureDevopsInvokeSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetSubscription(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetDebug(this AzureDevopsInvokeSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetDebug(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetHelp(this AzureDevopsInvokeSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetHelp(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetOutput(this AzureDevopsInvokeSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetOutput(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetQuery(this AzureDevopsInvokeSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetQuery(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsInvokeSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings SetVerbose(this AzureDevopsInvokeSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsInvokeSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsInvokeSettings ResetVerbose(this AzureDevopsInvokeSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsLoginSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsLoginSettingsExtensions
    {
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLoginSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. Example: <a href="https://dev.azure.com/MyOrganizationName">https://dev.azure.com/MyOrganizationName</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings SetOrg(this AzureDevopsLoginSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLoginSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. Example: <a href="https://dev.azure.com/MyOrganizationName">https://dev.azure.com/MyOrganizationName</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings ResetOrg(this AzureDevopsLoginSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLoginSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings SetSubscription(this AzureDevopsLoginSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLoginSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings ResetSubscription(this AzureDevopsLoginSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLoginSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings SetDebug(this AzureDevopsLoginSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLoginSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings ResetDebug(this AzureDevopsLoginSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLoginSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings SetHelp(this AzureDevopsLoginSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLoginSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings ResetHelp(this AzureDevopsLoginSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLoginSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings SetOutput(this AzureDevopsLoginSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLoginSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings ResetOutput(this AzureDevopsLoginSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLoginSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings SetQuery(this AzureDevopsLoginSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLoginSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings ResetQuery(this AzureDevopsLoginSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLoginSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings SetVerbose(this AzureDevopsLoginSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLoginSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLoginSettings ResetVerbose(this AzureDevopsLoginSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsLogoutSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsLogoutSettingsExtensions
    {
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLogoutSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>. If no organization is specified, all organizations will be logged out.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings SetOrg(this AzureDevopsLogoutSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLogoutSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>. If no organization is specified, all organizations will be logged out.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings ResetOrg(this AzureDevopsLogoutSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLogoutSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings SetSubscription(this AzureDevopsLogoutSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLogoutSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings ResetSubscription(this AzureDevopsLogoutSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLogoutSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings SetDebug(this AzureDevopsLogoutSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLogoutSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings ResetDebug(this AzureDevopsLogoutSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLogoutSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings SetHelp(this AzureDevopsLogoutSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLogoutSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings ResetHelp(this AzureDevopsLogoutSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLogoutSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings SetOutput(this AzureDevopsLogoutSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLogoutSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings ResetOutput(this AzureDevopsLogoutSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLogoutSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings SetQuery(this AzureDevopsLogoutSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLogoutSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings ResetQuery(this AzureDevopsLogoutSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsLogoutSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings SetVerbose(this AzureDevopsLogoutSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsLogoutSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsLogoutSettings ResetVerbose(this AzureDevopsLogoutSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsExtensionDisableSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsExtensionDisableSettingsExtensions
    {
        #region ExtensionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetExtensionName(this AzureDevopsExtensionDisableSettings toolSettings, string extensionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = extensionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetExtensionName(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = null;
            return toolSettings;
        }
        #endregion
        #region PublisherName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetPublisherName(this AzureDevopsExtensionDisableSettings toolSettings, string publisherName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = publisherName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetPublisherName(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetDetect(this AzureDevopsExtensionDisableSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetDetect(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionDisableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings EnableDetect(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionDisableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings DisableDetect(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionDisableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ToggleDetect(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetOrg(this AzureDevopsExtensionDisableSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetOrg(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetSubscription(this AzureDevopsExtensionDisableSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetSubscription(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetDebug(this AzureDevopsExtensionDisableSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetDebug(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetHelp(this AzureDevopsExtensionDisableSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetHelp(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetOutput(this AzureDevopsExtensionDisableSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetOutput(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetQuery(this AzureDevopsExtensionDisableSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetQuery(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionDisableSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings SetVerbose(this AzureDevopsExtensionDisableSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionDisableSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionDisableSettings ResetVerbose(this AzureDevopsExtensionDisableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsExtensionEnableSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsExtensionEnableSettingsExtensions
    {
        #region ExtensionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetExtensionName(this AzureDevopsExtensionEnableSettings toolSettings, string extensionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = extensionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetExtensionName(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = null;
            return toolSettings;
        }
        #endregion
        #region PublisherName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetPublisherName(this AzureDevopsExtensionEnableSettings toolSettings, string publisherName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = publisherName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetPublisherName(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetDetect(this AzureDevopsExtensionEnableSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetDetect(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionEnableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings EnableDetect(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionEnableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings DisableDetect(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionEnableSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ToggleDetect(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetOrg(this AzureDevopsExtensionEnableSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetOrg(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetSubscription(this AzureDevopsExtensionEnableSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetSubscription(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetDebug(this AzureDevopsExtensionEnableSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetDebug(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetHelp(this AzureDevopsExtensionEnableSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetHelp(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetOutput(this AzureDevopsExtensionEnableSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetOutput(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetQuery(this AzureDevopsExtensionEnableSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetQuery(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionEnableSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings SetVerbose(this AzureDevopsExtensionEnableSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionEnableSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionEnableSettings ResetVerbose(this AzureDevopsExtensionEnableSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsExtensionInstallSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsExtensionInstallSettingsExtensions
    {
        #region ExtensionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetExtensionName(this AzureDevopsExtensionInstallSettings toolSettings, string extensionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = extensionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetExtensionName(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = null;
            return toolSettings;
        }
        #endregion
        #region PublisherName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetPublisherName(this AzureDevopsExtensionInstallSettings toolSettings, string publisherName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = publisherName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetPublisherName(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetDetect(this AzureDevopsExtensionInstallSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetDetect(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionInstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings EnableDetect(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionInstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings DisableDetect(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionInstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ToggleDetect(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetOrg(this AzureDevopsExtensionInstallSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetOrg(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetSubscription(this AzureDevopsExtensionInstallSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetSubscription(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetDebug(this AzureDevopsExtensionInstallSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetDebug(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetHelp(this AzureDevopsExtensionInstallSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetHelp(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetOutput(this AzureDevopsExtensionInstallSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetOutput(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetQuery(this AzureDevopsExtensionInstallSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetQuery(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionInstallSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings SetVerbose(this AzureDevopsExtensionInstallSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionInstallSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionInstallSettings ResetVerbose(this AzureDevopsExtensionInstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsExtensionListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsExtensionListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetDetect(this AzureDevopsExtensionListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetDetect(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings EnableDetect(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings DisableDetect(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ToggleDetect(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region IncludeBuiltIn
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.IncludeBuiltIn"/></em></p>
        ///   <p>Include built in extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetIncludeBuiltIn(this AzureDevopsExtensionListSettings toolSettings, bool? includeBuiltIn)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeBuiltIn = includeBuiltIn;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.IncludeBuiltIn"/></em></p>
        ///   <p>Include built in extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetIncludeBuiltIn(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeBuiltIn = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionListSettings.IncludeBuiltIn"/></em></p>
        ///   <p>Include built in extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings EnableIncludeBuiltIn(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeBuiltIn = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionListSettings.IncludeBuiltIn"/></em></p>
        ///   <p>Include built in extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings DisableIncludeBuiltIn(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeBuiltIn = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionListSettings.IncludeBuiltIn"/></em></p>
        ///   <p>Include built in extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ToggleIncludeBuiltIn(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeBuiltIn = !toolSettings.IncludeBuiltIn;
            return toolSettings;
        }
        #endregion
        #region IncludeDisabled
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.IncludeDisabled"/></em></p>
        ///   <p>Include disabled extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetIncludeDisabled(this AzureDevopsExtensionListSettings toolSettings, bool? includeDisabled)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeDisabled = includeDisabled;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.IncludeDisabled"/></em></p>
        ///   <p>Include disabled extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetIncludeDisabled(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeDisabled = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionListSettings.IncludeDisabled"/></em></p>
        ///   <p>Include disabled extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings EnableIncludeDisabled(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeDisabled = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionListSettings.IncludeDisabled"/></em></p>
        ///   <p>Include disabled extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings DisableIncludeDisabled(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeDisabled = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionListSettings.IncludeDisabled"/></em></p>
        ///   <p>Include disabled extensions.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ToggleIncludeDisabled(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeDisabled = !toolSettings.IncludeDisabled;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetOrg(this AzureDevopsExtensionListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetOrg(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetSubscription(this AzureDevopsExtensionListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetSubscription(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetDebug(this AzureDevopsExtensionListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetDebug(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetHelp(this AzureDevopsExtensionListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetHelp(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetOutput(this AzureDevopsExtensionListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetOutput(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetQuery(this AzureDevopsExtensionListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetQuery(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings SetVerbose(this AzureDevopsExtensionListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionListSettings ResetVerbose(this AzureDevopsExtensionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsExtensionSearchSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsExtensionSearchSettingsExtensions
    {
        #region SearchQuery
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionSearchSettings.SearchQuery"/></em></p>
        ///   <p>Search term.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings SetSearchQuery(this AzureDevopsExtensionSearchSettings toolSettings, string searchQuery)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SearchQuery = searchQuery;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionSearchSettings.SearchQuery"/></em></p>
        ///   <p>Search term.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings ResetSearchQuery(this AzureDevopsExtensionSearchSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SearchQuery = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionSearchSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings SetSubscription(this AzureDevopsExtensionSearchSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionSearchSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings ResetSubscription(this AzureDevopsExtensionSearchSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionSearchSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings SetDebug(this AzureDevopsExtensionSearchSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionSearchSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings ResetDebug(this AzureDevopsExtensionSearchSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionSearchSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings SetHelp(this AzureDevopsExtensionSearchSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionSearchSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings ResetHelp(this AzureDevopsExtensionSearchSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionSearchSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings SetOutput(this AzureDevopsExtensionSearchSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionSearchSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings ResetOutput(this AzureDevopsExtensionSearchSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionSearchSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings SetQuery(this AzureDevopsExtensionSearchSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionSearchSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings ResetQuery(this AzureDevopsExtensionSearchSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionSearchSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings SetVerbose(this AzureDevopsExtensionSearchSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionSearchSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionSearchSettings ResetVerbose(this AzureDevopsExtensionSearchSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsExtensionShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsExtensionShowSettingsExtensions
    {
        #region ExtensionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetExtensionName(this AzureDevopsExtensionShowSettings toolSettings, string extensionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = extensionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetExtensionName(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = null;
            return toolSettings;
        }
        #endregion
        #region PublisherName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetPublisherName(this AzureDevopsExtensionShowSettings toolSettings, string publisherName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = publisherName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetPublisherName(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetDetect(this AzureDevopsExtensionShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetDetect(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings EnableDetect(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings DisableDetect(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ToggleDetect(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetOrg(this AzureDevopsExtensionShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetOrg(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetSubscription(this AzureDevopsExtensionShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetSubscription(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetDebug(this AzureDevopsExtensionShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetDebug(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetHelp(this AzureDevopsExtensionShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetHelp(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetOutput(this AzureDevopsExtensionShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetOutput(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetQuery(this AzureDevopsExtensionShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetQuery(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings SetVerbose(this AzureDevopsExtensionShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionShowSettings ResetVerbose(this AzureDevopsExtensionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsExtensionUninstallSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsExtensionUninstallSettingsExtensions
    {
        #region ExtensionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetExtensionName(this AzureDevopsExtensionUninstallSettings toolSettings, string extensionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = extensionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.ExtensionName"/></em></p>
        ///   <p>Extension Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetExtensionName(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ExtensionName = null;
            return toolSettings;
        }
        #endregion
        #region PublisherName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetPublisherName(this AzureDevopsExtensionUninstallSettings toolSettings, string publisherName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = publisherName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.PublisherName"/></em></p>
        ///   <p>Publisher Name.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetPublisherName(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PublisherName = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetDetect(this AzureDevopsExtensionUninstallSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetDetect(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsExtensionUninstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings EnableDetect(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsExtensionUninstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings DisableDetect(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsExtensionUninstallSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ToggleDetect(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetOrg(this AzureDevopsExtensionUninstallSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetOrg(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetYes(this AzureDevopsExtensionUninstallSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetYes(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetSubscription(this AzureDevopsExtensionUninstallSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetSubscription(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetDebug(this AzureDevopsExtensionUninstallSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetDebug(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetHelp(this AzureDevopsExtensionUninstallSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetHelp(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetOutput(this AzureDevopsExtensionUninstallSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetOutput(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetQuery(this AzureDevopsExtensionUninstallSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetQuery(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsExtensionUninstallSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings SetVerbose(this AzureDevopsExtensionUninstallSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsExtensionUninstallSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsExtensionUninstallSettings ResetVerbose(this AzureDevopsExtensionUninstallSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsAdminSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsAdminSettingsExtensions
    {
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings SetDebug(this AzureDevopsAdminSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings ResetDebug(this AzureDevopsAdminSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings SetHelp(this AzureDevopsAdminSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings ResetHelp(this AzureDevopsAdminSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings SetOutput(this AzureDevopsAdminSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings ResetOutput(this AzureDevopsAdminSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings SetQuery(this AzureDevopsAdminSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings ResetQuery(this AzureDevopsAdminSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings SetVerbose(this AzureDevopsAdminSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminSettings ResetVerbose(this AzureDevopsAdminSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecuritySettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecuritySettingsExtensions
    {
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecuritySettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings SetDebug(this AzureDevopsSecuritySettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecuritySettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings ResetDebug(this AzureDevopsSecuritySettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecuritySettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings SetHelp(this AzureDevopsSecuritySettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecuritySettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings ResetHelp(this AzureDevopsSecuritySettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecuritySettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings SetOutput(this AzureDevopsSecuritySettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecuritySettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings ResetOutput(this AzureDevopsSecuritySettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecuritySettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings SetQuery(this AzureDevopsSecuritySettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecuritySettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings ResetQuery(this AzureDevopsSecuritySettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecuritySettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings SetVerbose(this AzureDevopsSecuritySettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecuritySettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecuritySettings ResetVerbose(this AzureDevopsSecuritySettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsProjectCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsProjectCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Name"/></em></p>
        ///   <p>Name of the new project.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetName(this AzureDevopsProjectCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Name"/></em></p>
        ///   <p>Name of the new project.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetName(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Description"/></em></p>
        ///   <p>Description for the new project.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetDescription(this AzureDevopsProjectCreateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Description"/></em></p>
        ///   <p>Description for the new project.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetDescription(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetDetect(this AzureDevopsProjectCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetDetect(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsProjectCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings EnableDetect(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsProjectCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings DisableDetect(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsProjectCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ToggleDetect(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Open"/></em></p>
        ///   <p>Open the team project in the default web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetOpen(this AzureDevopsProjectCreateSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Open"/></em></p>
        ///   <p>Open the team project in the default web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetOpen(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetOrg(this AzureDevopsProjectCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetOrg(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Process
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Process"/></em></p>
        ///   <p>Process to use. Default if not specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetProcess(this AzureDevopsProjectCreateSettings toolSettings, string process)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Process = process;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Process"/></em></p>
        ///   <p>Process to use. Default if not specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetProcess(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Process = null;
            return toolSettings;
        }
        #endregion
        #region SourceControl
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.SourceControl"/></em></p>
        ///   <p>Source control type of the initial code repository created.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetSourceControl(this AzureDevopsProjectCreateSettings toolSettings, DevopsProjectCreateSourceControl sourceControl)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SourceControl = sourceControl;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.SourceControl"/></em></p>
        ///   <p>Source control type of the initial code repository created.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetSourceControl(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SourceControl = null;
            return toolSettings;
        }
        #endregion
        #region Visibility
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Visibility"/></em></p>
        ///   <p>Project visibility.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetVisibility(this AzureDevopsProjectCreateSettings toolSettings, DevopsProjectCreateVisibility visibility)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Visibility = visibility;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Visibility"/></em></p>
        ///   <p>Project visibility.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetVisibility(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Visibility = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetSubscription(this AzureDevopsProjectCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetSubscription(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetDebug(this AzureDevopsProjectCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetDebug(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetHelp(this AzureDevopsProjectCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetHelp(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetOutput(this AzureDevopsProjectCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetOutput(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetQuery(this AzureDevopsProjectCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetQuery(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings SetVerbose(this AzureDevopsProjectCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectCreateSettings ResetVerbose(this AzureDevopsProjectCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsProjectDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsProjectDeleteSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Id"/></em></p>
        ///   <p>The id of the project to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetId(this AzureDevopsProjectDeleteSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Id"/></em></p>
        ///   <p>The id of the project to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetId(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetDetect(this AzureDevopsProjectDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetDetect(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsProjectDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings EnableDetect(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsProjectDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings DisableDetect(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsProjectDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ToggleDetect(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetOrg(this AzureDevopsProjectDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetOrg(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetYes(this AzureDevopsProjectDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetYes(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetSubscription(this AzureDevopsProjectDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetSubscription(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetDebug(this AzureDevopsProjectDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetDebug(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetHelp(this AzureDevopsProjectDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetHelp(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetOutput(this AzureDevopsProjectDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetOutput(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetQuery(this AzureDevopsProjectDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetQuery(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings SetVerbose(this AzureDevopsProjectDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectDeleteSettings ResetVerbose(this AzureDevopsProjectDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsProjectListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsProjectListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetDetect(this AzureDevopsProjectListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetDetect(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsProjectListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings EnableDetect(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsProjectListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings DisableDetect(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsProjectListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ToggleDetect(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetOrg(this AzureDevopsProjectListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetOrg(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Skip"/></em></p>
        ///   <p>Number of results to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetSkip(this AzureDevopsProjectListSettings toolSettings, int? skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Skip"/></em></p>
        ///   <p>Number of results to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetSkip(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Top"/></em></p>
        ///   <p>Maximum number of results to list.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetTop(this AzureDevopsProjectListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Top"/></em></p>
        ///   <p>Maximum number of results to list.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetTop(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetSubscription(this AzureDevopsProjectListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetSubscription(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetDebug(this AzureDevopsProjectListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetDebug(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetHelp(this AzureDevopsProjectListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetHelp(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetOutput(this AzureDevopsProjectListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetOutput(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetQuery(this AzureDevopsProjectListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetQuery(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings SetVerbose(this AzureDevopsProjectListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectListSettings ResetVerbose(this AzureDevopsProjectListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsProjectShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsProjectShowSettingsExtensions
    {
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetProject(this AzureDevopsProjectShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetProject(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetDetect(this AzureDevopsProjectShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetDetect(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsProjectShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings EnableDetect(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsProjectShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings DisableDetect(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsProjectShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ToggleDetect(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Open"/></em></p>
        ///   <p>Open the team project in the default web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetOpen(this AzureDevopsProjectShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Open"/></em></p>
        ///   <p>Open the team project in the default web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetOpen(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetOrg(this AzureDevopsProjectShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetOrg(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetSubscription(this AzureDevopsProjectShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetSubscription(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetDebug(this AzureDevopsProjectShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetDebug(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetHelp(this AzureDevopsProjectShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetHelp(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetOutput(this AzureDevopsProjectShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetOutput(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetQuery(this AzureDevopsProjectShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetQuery(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsProjectShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings SetVerbose(this AzureDevopsProjectShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsProjectShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsProjectShowSettings ResetVerbose(this AzureDevopsProjectShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsServiceEndpointCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsServiceEndpointCreateSettingsExtensions
    {
        #region ServiceEndpointConfiguration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.ServiceEndpointConfiguration"/></em></p>
        ///   <p>Configuration file with service endpoint request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetServiceEndpointConfiguration(this AzureDevopsServiceEndpointCreateSettings toolSettings, string serviceEndpointConfiguration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ServiceEndpointConfiguration = serviceEndpointConfiguration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.ServiceEndpointConfiguration"/></em></p>
        ///   <p>Configuration file with service endpoint request.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetServiceEndpointConfiguration(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ServiceEndpointConfiguration = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetDetect(this AzureDevopsServiceEndpointCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetDetect(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsServiceEndpointCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings EnableDetect(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsServiceEndpointCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings DisableDetect(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsServiceEndpointCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ToggleDetect(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Encoding
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Encoding"/></em></p>
        ///   <p>Encoding of the input file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetEncoding(this AzureDevopsServiceEndpointCreateSettings toolSettings, DevopsEncoding encoding)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = encoding;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Encoding"/></em></p>
        ///   <p>Encoding of the input file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetEncoding(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetOrg(this AzureDevopsServiceEndpointCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetOrg(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetProject(this AzureDevopsServiceEndpointCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetProject(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetSubscription(this AzureDevopsServiceEndpointCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetSubscription(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetDebug(this AzureDevopsServiceEndpointCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetDebug(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetHelp(this AzureDevopsServiceEndpointCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetHelp(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetOutput(this AzureDevopsServiceEndpointCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetOutput(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetQuery(this AzureDevopsServiceEndpointCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetQuery(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings SetVerbose(this AzureDevopsServiceEndpointCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointCreateSettings ResetVerbose(this AzureDevopsServiceEndpointCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsServiceEndpointDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsServiceEndpointDeleteSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Id"/></em></p>
        ///   <p>Id of the service endpoint to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetId(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Id"/></em></p>
        ///   <p>Id of the service endpoint to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetId(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Deep
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Deep"/></em></p>
        ///   <p>Specific to AzureRM endpoint created in Automatic flow. When it is specified, this will also delete corresponding AAD application in Azure.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetDeep(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string deep)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Deep = deep;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Deep"/></em></p>
        ///   <p>Specific to AzureRM endpoint created in Automatic flow. When it is specified, this will also delete corresponding AAD application in Azure.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetDeep(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Deep = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetDetect(this AzureDevopsServiceEndpointDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetDetect(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsServiceEndpointDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings EnableDetect(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsServiceEndpointDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings DisableDetect(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsServiceEndpointDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ToggleDetect(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetOrg(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetOrg(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetProject(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetProject(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetYes(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetYes(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetSubscription(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetSubscription(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetDebug(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetDebug(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetHelp(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetHelp(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetOutput(this AzureDevopsServiceEndpointDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetOutput(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetQuery(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetQuery(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings SetVerbose(this AzureDevopsServiceEndpointDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointDeleteSettings ResetVerbose(this AzureDevopsServiceEndpointDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsServiceEndpointListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsServiceEndpointListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetDetect(this AzureDevopsServiceEndpointListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetDetect(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsServiceEndpointListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings EnableDetect(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsServiceEndpointListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings DisableDetect(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsServiceEndpointListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ToggleDetect(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetOrg(this AzureDevopsServiceEndpointListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetOrg(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetProject(this AzureDevopsServiceEndpointListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetProject(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetSubscription(this AzureDevopsServiceEndpointListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetSubscription(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetDebug(this AzureDevopsServiceEndpointListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetDebug(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetHelp(this AzureDevopsServiceEndpointListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetHelp(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetOutput(this AzureDevopsServiceEndpointListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetOutput(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetQuery(this AzureDevopsServiceEndpointListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetQuery(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings SetVerbose(this AzureDevopsServiceEndpointListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointListSettings ResetVerbose(this AzureDevopsServiceEndpointListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsServiceEndpointShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsServiceEndpointShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Id"/></em></p>
        ///   <p>ID of the service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetId(this AzureDevopsServiceEndpointShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Id"/></em></p>
        ///   <p>ID of the service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetId(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetDetect(this AzureDevopsServiceEndpointShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetDetect(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsServiceEndpointShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings EnableDetect(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsServiceEndpointShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings DisableDetect(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsServiceEndpointShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ToggleDetect(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetOrg(this AzureDevopsServiceEndpointShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetOrg(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetProject(this AzureDevopsServiceEndpointShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetProject(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetSubscription(this AzureDevopsServiceEndpointShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetSubscription(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetDebug(this AzureDevopsServiceEndpointShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetDebug(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetHelp(this AzureDevopsServiceEndpointShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetHelp(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetOutput(this AzureDevopsServiceEndpointShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetOutput(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetQuery(this AzureDevopsServiceEndpointShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetQuery(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings SetVerbose(this AzureDevopsServiceEndpointShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointShowSettings ResetVerbose(this AzureDevopsServiceEndpointShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsUserAddSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsUserAddSettingsExtensions
    {
        #region EmailId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.EmailId"/></em></p>
        ///   <p>Email ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetEmailId(this AzureDevopsUserAddSettings toolSettings, string emailId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EmailId = emailId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.EmailId"/></em></p>
        ///   <p>Email ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetEmailId(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EmailId = null;
            return toolSettings;
        }
        #endregion
        #region LicenseType
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.LicenseType"/></em></p>
        ///   <p>License type for the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetLicenseType(this AzureDevopsUserAddSettings toolSettings, DevopsUserLicenseType licenseType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LicenseType = licenseType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.LicenseType"/></em></p>
        ///   <p>License type for the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetLicenseType(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LicenseType = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetDetect(this AzureDevopsUserAddSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetDetect(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsUserAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings EnableDetect(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsUserAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings DisableDetect(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsUserAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ToggleDetect(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetOrg(this AzureDevopsUserAddSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetOrg(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region SendEmailInvite
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.SendEmailInvite"/></em></p>
        ///   <p>Whether to send email invite for new user or not.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetSendEmailInvite(this AzureDevopsUserAddSettings toolSettings, bool? sendEmailInvite)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SendEmailInvite = sendEmailInvite;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.SendEmailInvite"/></em></p>
        ///   <p>Whether to send email invite for new user or not.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetSendEmailInvite(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SendEmailInvite = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsUserAddSettings.SendEmailInvite"/></em></p>
        ///   <p>Whether to send email invite for new user or not.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings EnableSendEmailInvite(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SendEmailInvite = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsUserAddSettings.SendEmailInvite"/></em></p>
        ///   <p>Whether to send email invite for new user or not.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings DisableSendEmailInvite(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SendEmailInvite = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsUserAddSettings.SendEmailInvite"/></em></p>
        ///   <p>Whether to send email invite for new user or not.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ToggleSendEmailInvite(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SendEmailInvite = !toolSettings.SendEmailInvite;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetSubscription(this AzureDevopsUserAddSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetSubscription(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetDebug(this AzureDevopsUserAddSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetDebug(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetHelp(this AzureDevopsUserAddSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetHelp(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetOutput(this AzureDevopsUserAddSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetOutput(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetQuery(this AzureDevopsUserAddSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetQuery(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings SetVerbose(this AzureDevopsUserAddSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserAddSettings ResetVerbose(this AzureDevopsUserAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsUserListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsUserListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetDetect(this AzureDevopsUserListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetDetect(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsUserListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings EnableDetect(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsUserListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings DisableDetect(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsUserListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ToggleDetect(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetOrg(this AzureDevopsUserListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetOrg(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Skip"/></em></p>
        ///   <p>Offset: Number of records to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetSkip(this AzureDevopsUserListSettings toolSettings, string skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Skip"/></em></p>
        ///   <p>Offset: Number of records to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetSkip(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Top"/></em></p>
        ///   <p>Maximum number of users to return. Max value is 10000.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetTop(this AzureDevopsUserListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Top"/></em></p>
        ///   <p>Maximum number of users to return. Max value is 10000.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetTop(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetSubscription(this AzureDevopsUserListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetSubscription(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetDebug(this AzureDevopsUserListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetDebug(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetHelp(this AzureDevopsUserListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetHelp(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetOutput(this AzureDevopsUserListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetOutput(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetQuery(this AzureDevopsUserListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetQuery(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings SetVerbose(this AzureDevopsUserListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserListSettings ResetVerbose(this AzureDevopsUserListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsUserRemoveSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsUserRemoveSettingsExtensions
    {
        #region User
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.User"/></em></p>
        ///   <p>Email ID or ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetUser(this AzureDevopsUserRemoveSettings toolSettings, string user)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.User = user;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.User"/></em></p>
        ///   <p>Email ID or ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetUser(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.User = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetDetect(this AzureDevopsUserRemoveSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetDetect(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsUserRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings EnableDetect(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsUserRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings DisableDetect(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsUserRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ToggleDetect(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetOrg(this AzureDevopsUserRemoveSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetOrg(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetYes(this AzureDevopsUserRemoveSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetYes(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetSubscription(this AzureDevopsUserRemoveSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetSubscription(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetDebug(this AzureDevopsUserRemoveSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetDebug(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetHelp(this AzureDevopsUserRemoveSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetHelp(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetOutput(this AzureDevopsUserRemoveSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetOutput(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetQuery(this AzureDevopsUserRemoveSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetQuery(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings SetVerbose(this AzureDevopsUserRemoveSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserRemoveSettings ResetVerbose(this AzureDevopsUserRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsUserShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsUserShowSettingsExtensions
    {
        #region User
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.User"/></em></p>
        ///   <p>Email ID or ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetUser(this AzureDevopsUserShowSettings toolSettings, string user)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.User = user;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.User"/></em></p>
        ///   <p>Email ID or ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetUser(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.User = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetDetect(this AzureDevopsUserShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetDetect(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsUserShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings EnableDetect(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsUserShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings DisableDetect(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsUserShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ToggleDetect(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetOrg(this AzureDevopsUserShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetOrg(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetSubscription(this AzureDevopsUserShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetSubscription(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetDebug(this AzureDevopsUserShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetDebug(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetHelp(this AzureDevopsUserShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetHelp(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetOutput(this AzureDevopsUserShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetOutput(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetQuery(this AzureDevopsUserShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetQuery(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings SetVerbose(this AzureDevopsUserShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserShowSettings ResetVerbose(this AzureDevopsUserShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsUserUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsUserUpdateSettingsExtensions
    {
        #region LicenseType
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.LicenseType"/></em></p>
        ///   <p>License type for the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetLicenseType(this AzureDevopsUserUpdateSettings toolSettings, DevopsUserLicenseType licenseType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LicenseType = licenseType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.LicenseType"/></em></p>
        ///   <p>License type for the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetLicenseType(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LicenseType = null;
            return toolSettings;
        }
        #endregion
        #region User
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.User"/></em></p>
        ///   <p>Email ID or ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetUser(this AzureDevopsUserUpdateSettings toolSettings, string user)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.User = user;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.User"/></em></p>
        ///   <p>Email ID or ID of the user.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetUser(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.User = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetDetect(this AzureDevopsUserUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetDetect(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsUserUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings EnableDetect(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsUserUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings DisableDetect(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsUserUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ToggleDetect(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetOrg(this AzureDevopsUserUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetOrg(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetSubscription(this AzureDevopsUserUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetSubscription(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetDebug(this AzureDevopsUserUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetDebug(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetHelp(this AzureDevopsUserUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetHelp(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetOutput(this AzureDevopsUserUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetOutput(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetQuery(this AzureDevopsUserUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetQuery(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsUserUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings SetVerbose(this AzureDevopsUserUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsUserUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsUserUpdateSettings ResetVerbose(this AzureDevopsUserUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsTeamCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsTeamCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Name"/></em></p>
        ///   <p>Name of the new team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetName(this AzureDevopsTeamCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Name"/></em></p>
        ///   <p>Name of the new team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetName(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Description"/></em></p>
        ///   <p>Description of the new team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetDescription(this AzureDevopsTeamCreateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Description"/></em></p>
        ///   <p>Description of the new team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetDescription(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetDetect(this AzureDevopsTeamCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetDetect(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsTeamCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings EnableDetect(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsTeamCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings DisableDetect(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsTeamCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ToggleDetect(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetOrg(this AzureDevopsTeamCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetOrg(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetProject(this AzureDevopsTeamCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetProject(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetSubscription(this AzureDevopsTeamCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetSubscription(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetDebug(this AzureDevopsTeamCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetDebug(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetHelp(this AzureDevopsTeamCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetHelp(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetOutput(this AzureDevopsTeamCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetOutput(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetQuery(this AzureDevopsTeamCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetQuery(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings SetVerbose(this AzureDevopsTeamCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamCreateSettings ResetVerbose(this AzureDevopsTeamCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsTeamDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsTeamDeleteSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Id"/></em></p>
        ///   <p>The id of the team to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetId(this AzureDevopsTeamDeleteSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Id"/></em></p>
        ///   <p>The id of the team to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetId(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetDetect(this AzureDevopsTeamDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetDetect(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsTeamDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings EnableDetect(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsTeamDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings DisableDetect(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsTeamDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ToggleDetect(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetOrg(this AzureDevopsTeamDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetOrg(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetProject(this AzureDevopsTeamDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetProject(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetYes(this AzureDevopsTeamDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetYes(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetSubscription(this AzureDevopsTeamDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetSubscription(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetDebug(this AzureDevopsTeamDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetDebug(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetHelp(this AzureDevopsTeamDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetHelp(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetOutput(this AzureDevopsTeamDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetOutput(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetQuery(this AzureDevopsTeamDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetQuery(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings SetVerbose(this AzureDevopsTeamDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamDeleteSettings ResetVerbose(this AzureDevopsTeamDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsTeamListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsTeamListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetDetect(this AzureDevopsTeamListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetDetect(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsTeamListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings EnableDetect(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsTeamListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings DisableDetect(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsTeamListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ToggleDetect(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetOrg(this AzureDevopsTeamListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetOrg(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetProject(this AzureDevopsTeamListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetProject(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Skip"/></em></p>
        ///   <p>Number of teams to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetSkip(this AzureDevopsTeamListSettings toolSettings, int? skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Skip"/></em></p>
        ///   <p>Number of teams to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetSkip(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Top"/></em></p>
        ///   <p>Maximum number of teams to return.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetTop(this AzureDevopsTeamListSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Top"/></em></p>
        ///   <p>Maximum number of teams to return.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetTop(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetSubscription(this AzureDevopsTeamListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetSubscription(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetDebug(this AzureDevopsTeamListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetDebug(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetHelp(this AzureDevopsTeamListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetHelp(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetOutput(this AzureDevopsTeamListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetOutput(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetQuery(this AzureDevopsTeamListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetQuery(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings SetVerbose(this AzureDevopsTeamListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListSettings ResetVerbose(this AzureDevopsTeamListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsTeamListMemberSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsTeamListMemberSettingsExtensions
    {
        #region Team
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Team"/></em></p>
        ///   <p>The name or id of the team to show members of.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetTeam(this AzureDevopsTeamListMemberSettings toolSettings, string team)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Team = team;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Team"/></em></p>
        ///   <p>The name or id of the team to show members of.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetTeam(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Team = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetDetect(this AzureDevopsTeamListMemberSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetDetect(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsTeamListMemberSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings EnableDetect(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsTeamListMemberSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings DisableDetect(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsTeamListMemberSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ToggleDetect(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetOrg(this AzureDevopsTeamListMemberSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetOrg(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetProject(this AzureDevopsTeamListMemberSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetProject(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Skip"/></em></p>
        ///   <p>Number of members to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetSkip(this AzureDevopsTeamListMemberSettings toolSettings, int? skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Skip"/></em></p>
        ///   <p>Number of members to skip.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetSkip(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Top"/></em></p>
        ///   <p>Maximum number of members to return.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetTop(this AzureDevopsTeamListMemberSettings toolSettings, int? top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Top"/></em></p>
        ///   <p>Maximum number of members to return.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetTop(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetSubscription(this AzureDevopsTeamListMemberSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetSubscription(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetDebug(this AzureDevopsTeamListMemberSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetDebug(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetHelp(this AzureDevopsTeamListMemberSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetHelp(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetOutput(this AzureDevopsTeamListMemberSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetOutput(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetQuery(this AzureDevopsTeamListMemberSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetQuery(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamListMemberSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings SetVerbose(this AzureDevopsTeamListMemberSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamListMemberSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamListMemberSettings ResetVerbose(this AzureDevopsTeamListMemberSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsTeamShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsTeamShowSettingsExtensions
    {
        #region Team
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Team"/></em></p>
        ///   <p>The name or id of the team to show.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetTeam(this AzureDevopsTeamShowSettings toolSettings, string team)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Team = team;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Team"/></em></p>
        ///   <p>The name or id of the team to show.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetTeam(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Team = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetDetect(this AzureDevopsTeamShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetDetect(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsTeamShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings EnableDetect(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsTeamShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings DisableDetect(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsTeamShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ToggleDetect(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetOrg(this AzureDevopsTeamShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetOrg(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetProject(this AzureDevopsTeamShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetProject(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetSubscription(this AzureDevopsTeamShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetSubscription(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetDebug(this AzureDevopsTeamShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetDebug(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetHelp(this AzureDevopsTeamShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetHelp(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetOutput(this AzureDevopsTeamShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetOutput(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetQuery(this AzureDevopsTeamShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetQuery(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings SetVerbose(this AzureDevopsTeamShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamShowSettings ResetVerbose(this AzureDevopsTeamShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsTeamUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsTeamUpdateSettingsExtensions
    {
        #region Team
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Team"/></em></p>
        ///   <p>The name or id of the team to be updated.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetTeam(this AzureDevopsTeamUpdateSettings toolSettings, string team)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Team = team;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Team"/></em></p>
        ///   <p>The name or id of the team to be updated.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetTeam(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Team = null;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Description"/></em></p>
        ///   <p>New description of the team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetDescription(this AzureDevopsTeamUpdateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Description"/></em></p>
        ///   <p>New description of the team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetDescription(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetDetect(this AzureDevopsTeamUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetDetect(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsTeamUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings EnableDetect(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsTeamUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings DisableDetect(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsTeamUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ToggleDetect(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Name"/></em></p>
        ///   <p>New name of the team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetName(this AzureDevopsTeamUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Name"/></em></p>
        ///   <p>New name of the team.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetName(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetOrg(this AzureDevopsTeamUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetOrg(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetProject(this AzureDevopsTeamUpdateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetProject(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetSubscription(this AzureDevopsTeamUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetSubscription(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetDebug(this AzureDevopsTeamUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetDebug(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetHelp(this AzureDevopsTeamUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetHelp(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetOutput(this AzureDevopsTeamUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetOutput(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetQuery(this AzureDevopsTeamUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetQuery(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsTeamUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings SetVerbose(this AzureDevopsTeamUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsTeamUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsTeamUpdateSettings ResetVerbose(this AzureDevopsTeamUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiCreateSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetDetect(this AzureDevopsWikiCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetDetect(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings EnableDetect(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings DisableDetect(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ToggleDetect(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region MappedPath
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.MappedPath"/></em></p>
        ///   <p>[Required for codewiki type] Mapped path of the new wiki e.g. '/' to publish from root of repository.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetMappedPath(this AzureDevopsWikiCreateSettings toolSettings, string mappedPath)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MappedPath = mappedPath;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.MappedPath"/></em></p>
        ///   <p>[Required for codewiki type] Mapped path of the new wiki e.g. '/' to publish from root of repository.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetMappedPath(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MappedPath = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Name"/></em></p>
        ///   <p>Name of the new wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetName(this AzureDevopsWikiCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Name"/></em></p>
        ///   <p>Name of the new wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetName(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetOrg(this AzureDevopsWikiCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetOrg(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetProject(this AzureDevopsWikiCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetProject(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Repository
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Repository"/></em></p>
        ///   <p>[Required for codewiki type] Name or ID of the repository to publish the wiki from.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetRepository(this AzureDevopsWikiCreateSettings toolSettings, string repository)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = repository;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Repository"/></em></p>
        ///   <p>[Required for codewiki type] Name or ID of the repository to publish the wiki from.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetRepository(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Repository = null;
            return toolSettings;
        }
        #endregion
        #region Type
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Type"/></em></p>
        ///   <p>Type of wiki to create.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetType(this AzureDevopsWikiCreateSettings toolSettings, DevopsWikiCreateType type)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Type = type;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Type"/></em></p>
        ///   <p>Type of wiki to create.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetType(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Type = null;
            return toolSettings;
        }
        #endregion
        #region Version
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Version"/></em></p>
        ///   <p>[Required for codewiki type] Repository branch name to publish the code wiki from.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetVersion(this AzureDevopsWikiCreateSettings toolSettings, string version)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Version = version;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Version"/></em></p>
        ///   <p>[Required for codewiki type] Repository branch name to publish the code wiki from.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetVersion(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Version = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetSubscription(this AzureDevopsWikiCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetSubscription(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetDebug(this AzureDevopsWikiCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetDebug(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetHelp(this AzureDevopsWikiCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetHelp(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetOutput(this AzureDevopsWikiCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetOutput(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetQuery(this AzureDevopsWikiCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetQuery(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings SetVerbose(this AzureDevopsWikiCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiCreateSettings ResetVerbose(this AzureDevopsWikiCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiDeleteSettingsExtensions
    {
        #region Wiki
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetWiki(this AzureDevopsWikiDeleteSettings toolSettings, string wiki)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = wiki;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki to delete.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetWiki(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetDetect(this AzureDevopsWikiDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetDetect(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings EnableDetect(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings DisableDetect(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ToggleDetect(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetOrg(this AzureDevopsWikiDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetOrg(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetProject(this AzureDevopsWikiDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetProject(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetYes(this AzureDevopsWikiDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetYes(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetSubscription(this AzureDevopsWikiDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetSubscription(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetDebug(this AzureDevopsWikiDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetDebug(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetHelp(this AzureDevopsWikiDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetHelp(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetOutput(this AzureDevopsWikiDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetOutput(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetQuery(this AzureDevopsWikiDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetQuery(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings SetVerbose(this AzureDevopsWikiDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiDeleteSettings ResetVerbose(this AzureDevopsWikiDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetDetect(this AzureDevopsWikiListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetDetect(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings EnableDetect(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings DisableDetect(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ToggleDetect(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetOrg(this AzureDevopsWikiListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetOrg(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetProject(this AzureDevopsWikiListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetProject(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Scope
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Scope"/></em></p>
        ///   <p>List the wikis at project or organization level.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetScope(this AzureDevopsWikiListSettings toolSettings, DevopsWikiScope scope)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Scope = scope;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Scope"/></em></p>
        ///   <p>List the wikis at project or organization level.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetScope(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Scope = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetSubscription(this AzureDevopsWikiListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetSubscription(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetDebug(this AzureDevopsWikiListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetDebug(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetHelp(this AzureDevopsWikiListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetHelp(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetOutput(this AzureDevopsWikiListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetOutput(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetQuery(this AzureDevopsWikiListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetQuery(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings SetVerbose(this AzureDevopsWikiListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiListSettings ResetVerbose(this AzureDevopsWikiListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiShowSettingsExtensions
    {
        #region Wiki
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetWiki(this AzureDevopsWikiShowSettings toolSettings, string wiki)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = wiki;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetWiki(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetDetect(this AzureDevopsWikiShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetDetect(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings EnableDetect(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings DisableDetect(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ToggleDetect(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Open"/></em></p>
        ///   <p>Open the wiki in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetOpen(this AzureDevopsWikiShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Open"/></em></p>
        ///   <p>Open the wiki in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetOpen(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetOrg(this AzureDevopsWikiShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetOrg(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetProject(this AzureDevopsWikiShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetProject(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetSubscription(this AzureDevopsWikiShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetSubscription(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetDebug(this AzureDevopsWikiShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetDebug(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetHelp(this AzureDevopsWikiShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetHelp(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetOutput(this AzureDevopsWikiShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetOutput(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetQuery(this AzureDevopsWikiShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetQuery(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings SetVerbose(this AzureDevopsWikiShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiShowSettings ResetVerbose(this AzureDevopsWikiShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityPermissionListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityPermissionListSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetId(this AzureDevopsSecurityPermissionListSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetId(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Subject
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetSubject(this AzureDevopsSecurityPermissionListSettings toolSettings, string subject)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = subject;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetSubject(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetDetect(this AzureDevopsSecurityPermissionListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetDetect(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings EnableDetect(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings DisableDetect(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ToggleDetect(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetOrg(this AzureDevopsSecurityPermissionListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetOrg(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Recurse
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Recurse"/></em></p>
        ///   <p>If true and this is a hierarchical namespace, return child ACLs of the specified token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetRecurse(this AzureDevopsSecurityPermissionListSettings toolSettings, bool? recurse)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Recurse = recurse;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Recurse"/></em></p>
        ///   <p>If true and this is a hierarchical namespace, return child ACLs of the specified token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetRecurse(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Recurse = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionListSettings.Recurse"/></em></p>
        ///   <p>If true and this is a hierarchical namespace, return child ACLs of the specified token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings EnableRecurse(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Recurse = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionListSettings.Recurse"/></em></p>
        ///   <p>If true and this is a hierarchical namespace, return child ACLs of the specified token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings DisableRecurse(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Recurse = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionListSettings.Recurse"/></em></p>
        ///   <p>If true and this is a hierarchical namespace, return child ACLs of the specified token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ToggleRecurse(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Recurse = !toolSettings.Recurse;
            return toolSettings;
        }
        #endregion
        #region Token
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetToken(this AzureDevopsSecurityPermissionListSettings toolSettings, string token)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = token;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetToken(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetSubscription(this AzureDevopsSecurityPermissionListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetSubscription(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetDebug(this AzureDevopsSecurityPermissionListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetDebug(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetHelp(this AzureDevopsSecurityPermissionListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetHelp(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetOutput(this AzureDevopsSecurityPermissionListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetOutput(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetQuery(this AzureDevopsSecurityPermissionListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetQuery(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings SetVerbose(this AzureDevopsSecurityPermissionListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionListSettings ResetVerbose(this AzureDevopsSecurityPermissionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityPermissionResetSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityPermissionResetSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetId(this AzureDevopsSecurityPermissionResetSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetId(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region PermissionBit
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.PermissionBit"/></em></p>
        ///   <p>Permission bit or addition of permission bits which needs to be reset                         for given user/group and token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetPermissionBit(this AzureDevopsSecurityPermissionResetSettings toolSettings, string permissionBit)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PermissionBit = permissionBit;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.PermissionBit"/></em></p>
        ///   <p>Permission bit or addition of permission bits which needs to be reset                         for given user/group and token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetPermissionBit(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PermissionBit = null;
            return toolSettings;
        }
        #endregion
        #region Subject
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetSubject(this AzureDevopsSecurityPermissionResetSettings toolSettings, string subject)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = subject;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetSubject(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = null;
            return toolSettings;
        }
        #endregion
        #region Token
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetToken(this AzureDevopsSecurityPermissionResetSettings toolSettings, string token)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = token;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetToken(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetDetect(this AzureDevopsSecurityPermissionResetSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetDetect(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionResetSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings EnableDetect(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionResetSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings DisableDetect(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionResetSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ToggleDetect(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetOrg(this AzureDevopsSecurityPermissionResetSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetOrg(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetSubscription(this AzureDevopsSecurityPermissionResetSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetSubscription(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetDebug(this AzureDevopsSecurityPermissionResetSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetDebug(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetHelp(this AzureDevopsSecurityPermissionResetSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetHelp(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetOutput(this AzureDevopsSecurityPermissionResetSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetOutput(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetQuery(this AzureDevopsSecurityPermissionResetSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetQuery(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings SetVerbose(this AzureDevopsSecurityPermissionResetSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetSettings ResetVerbose(this AzureDevopsSecurityPermissionResetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityPermissionResetAllSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityPermissionResetAllSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetId(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetId(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Subject
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetSubject(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string subject)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = subject;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetSubject(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = null;
            return toolSettings;
        }
        #endregion
        #region Token
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetToken(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string token)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = token;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetToken(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetDetect(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetDetect(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionResetAllSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings EnableDetect(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionResetAllSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings DisableDetect(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionResetAllSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ToggleDetect(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetOrg(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetOrg(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetYes(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetYes(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetSubscription(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetSubscription(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetDebug(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetDebug(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetHelp(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetHelp(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetOutput(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetOutput(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetQuery(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetQuery(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings SetVerbose(this AzureDevopsSecurityPermissionResetAllSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionResetAllSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionResetAllSettings ResetVerbose(this AzureDevopsSecurityPermissionResetAllSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityPermissionShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityPermissionShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetId(this AzureDevopsSecurityPermissionShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetId(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Subject
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetSubject(this AzureDevopsSecurityPermissionShowSettings toolSettings, string subject)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = subject;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetSubject(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = null;
            return toolSettings;
        }
        #endregion
        #region Token
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetToken(this AzureDevopsSecurityPermissionShowSettings toolSettings, string token)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = token;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetToken(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetDetect(this AzureDevopsSecurityPermissionShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetDetect(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings EnableDetect(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings DisableDetect(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ToggleDetect(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetOrg(this AzureDevopsSecurityPermissionShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetOrg(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetSubscription(this AzureDevopsSecurityPermissionShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetSubscription(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetDebug(this AzureDevopsSecurityPermissionShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetDebug(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetHelp(this AzureDevopsSecurityPermissionShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetHelp(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetOutput(this AzureDevopsSecurityPermissionShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetOutput(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetQuery(this AzureDevopsSecurityPermissionShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetQuery(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings SetVerbose(this AzureDevopsSecurityPermissionShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionShowSettings ResetVerbose(this AzureDevopsSecurityPermissionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityPermissionUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityPermissionUpdateSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetId(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetId(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Subject
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetSubject(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string subject)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = subject;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subject"/></em></p>
        ///   <p>User Email ID or Group descriptor.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetSubject(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subject = null;
            return toolSettings;
        }
        #endregion
        #region Token
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetToken(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string token)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = token;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Token"/></em></p>
        ///   <p>Security token.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetToken(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Token = null;
            return toolSettings;
        }
        #endregion
        #region AllowBit
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.AllowBit"/></em></p>
        ///   <p>Allow bit or addition of bits. Required if --deny-bit is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetAllowBit(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string allowBit)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowBit = allowBit;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.AllowBit"/></em></p>
        ///   <p>Allow bit or addition of bits. Required if --deny-bit is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetAllowBit(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AllowBit = null;
            return toolSettings;
        }
        #endregion
        #region DenyBit
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.DenyBit"/></em></p>
        ///   <p>Deny bit or addition of bits. Required if --allow-bit is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetDenyBit(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string denyBit)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DenyBit = denyBit;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.DenyBit"/></em></p>
        ///   <p>Deny bit or addition of bits. Required if --allow-bit is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetDenyBit(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DenyBit = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetDetect(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetDetect(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings EnableDetect(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings DisableDetect(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ToggleDetect(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Merge
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Merge"/></em></p>
        ///   <p>If set, the existing ACE has its allow and deny merged with                          the incoming ACE's allow and deny. If unset, the existing ACE is displaced.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetMerge(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, bool? merge)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Merge = merge;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Merge"/></em></p>
        ///   <p>If set, the existing ACE has its allow and deny merged with                          the incoming ACE's allow and deny. If unset, the existing ACE is displaced.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetMerge(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Merge = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionUpdateSettings.Merge"/></em></p>
        ///   <p>If set, the existing ACE has its allow and deny merged with                          the incoming ACE's allow and deny. If unset, the existing ACE is displaced.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings EnableMerge(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Merge = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionUpdateSettings.Merge"/></em></p>
        ///   <p>If set, the existing ACE has its allow and deny merged with                          the incoming ACE's allow and deny. If unset, the existing ACE is displaced.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings DisableMerge(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Merge = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionUpdateSettings.Merge"/></em></p>
        ///   <p>If set, the existing ACE has its allow and deny merged with                          the incoming ACE's allow and deny. If unset, the existing ACE is displaced.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ToggleMerge(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Merge = !toolSettings.Merge;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetOrg(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetOrg(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetSubscription(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetSubscription(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetDebug(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetDebug(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetHelp(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetHelp(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetOutput(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetOutput(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetQuery(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetQuery(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings SetVerbose(this AzureDevopsSecurityPermissionUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionUpdateSettings ResetVerbose(this AzureDevopsSecurityPermissionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupCreateSettingsExtensions
    {
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Description"/></em></p>
        ///   <p>Description of Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetDescription(this AzureDevopsSecurityGroupCreateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Description"/></em></p>
        ///   <p>Description of Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetDescription(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetDetect(this AzureDevopsSecurityGroupCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetDetect(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings EnableDetect(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings DisableDetect(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ToggleDetect(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region EmailId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.EmailId"/></em></p>
        ///   <p>Create new group using the mail address as a reference to an existing group from an external AD or AAD backed provider. Required if name or origin-id is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetEmailId(this AzureDevopsSecurityGroupCreateSettings toolSettings, string emailId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EmailId = emailId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.EmailId"/></em></p>
        ///   <p>Create new group using the mail address as a reference to an existing group from an external AD or AAD backed provider. Required if name or origin-id is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetEmailId(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EmailId = null;
            return toolSettings;
        }
        #endregion
        #region Groups
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Groups"/></em></p>
        ///   <p>A comma separated list of descriptors referencing groups you want the newly created group to join.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetGroups(this AzureDevopsSecurityGroupCreateSettings toolSettings, string groups)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Groups = groups;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Groups"/></em></p>
        ///   <p>A comma separated list of descriptors referencing groups you want the newly created group to join.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetGroups(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Groups = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Name"/></em></p>
        ///   <p>Name of Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetName(this AzureDevopsSecurityGroupCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Name"/></em></p>
        ///   <p>Name of Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetName(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetOrg(this AzureDevopsSecurityGroupCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetOrg(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region OriginId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.OriginId"/></em></p>
        ///   <p>Create new group using the OriginID as a reference to an existing group from an external AD or AAD backed provider. Required if name or email-id is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetOriginId(this AzureDevopsSecurityGroupCreateSettings toolSettings, string originId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.OriginId = originId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.OriginId"/></em></p>
        ///   <p>Create new group using the OriginID as a reference to an existing group from an external AD or AAD backed provider. Required if name or email-id is missing.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetOriginId(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.OriginId = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project in which Azure DevOps group should be created.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetProject(this AzureDevopsSecurityGroupCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project in which Azure DevOps group should be created.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetProject(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Scope
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Scope"/></em></p>
        ///   <p>Create group at project or organization level.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetScope(this AzureDevopsSecurityGroupCreateSettings toolSettings, DevopsWikiScope scope)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Scope = scope;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Scope"/></em></p>
        ///   <p>Create group at project or organization level.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetScope(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Scope = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetSubscription(this AzureDevopsSecurityGroupCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetSubscription(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetDebug(this AzureDevopsSecurityGroupCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetDebug(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetHelp(this AzureDevopsSecurityGroupCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetHelp(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetOutput(this AzureDevopsSecurityGroupCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetOutput(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetQuery(this AzureDevopsSecurityGroupCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetQuery(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings SetVerbose(this AzureDevopsSecurityGroupCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupCreateSettings ResetVerbose(this AzureDevopsSecurityGroupCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupDeleteSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Id"/></em></p>
        ///   <p>Descriptor of the group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetId(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Id"/></em></p>
        ///   <p>Descriptor of the group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetId(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetDetect(this AzureDevopsSecurityGroupDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetDetect(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings EnableDetect(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings DisableDetect(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ToggleDetect(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetOrg(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetOrg(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetYes(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetYes(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetSubscription(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetSubscription(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetDebug(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetDebug(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetHelp(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetHelp(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetOutput(this AzureDevopsSecurityGroupDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetOutput(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetQuery(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetQuery(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings SetVerbose(this AzureDevopsSecurityGroupDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupDeleteSettings ResetVerbose(this AzureDevopsSecurityGroupDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupListSettingsExtensions
    {
        #region ContinuationToken
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.ContinuationToken"/></em></p>
        ///   <p>If there are more results that can't be returned in a single page, the result set will contain a continuation token for retrieval of the next set of results.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetContinuationToken(this AzureDevopsSecurityGroupListSettings toolSettings, string continuationToken)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContinuationToken = continuationToken;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.ContinuationToken"/></em></p>
        ///   <p>If there are more results that can't be returned in a single page, the result set will contain a continuation token for retrieval of the next set of results.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetContinuationToken(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContinuationToken = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetDetect(this AzureDevopsSecurityGroupListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetDetect(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings EnableDetect(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings DisableDetect(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ToggleDetect(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetOrg(this AzureDevopsSecurityGroupListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetOrg(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Project"/></em></p>
        ///   <p>List groups for a particular project.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetProject(this AzureDevopsSecurityGroupListSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Project"/></em></p>
        ///   <p>List groups for a particular project.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetProject(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Scope
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Scope"/></em></p>
        ///   <p>List groups at project or organization level.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetScope(this AzureDevopsSecurityGroupListSettings toolSettings, DevopsWikiScope scope)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Scope = scope;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Scope"/></em></p>
        ///   <p>List groups at project or organization level.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetScope(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Scope = null;
            return toolSettings;
        }
        #endregion
        #region SubjectTypes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.SubjectTypes"/></em></p>
        ///   <p>A comma separated list of user subject subtypes to reduce the retrieved results. You can give initial part of descriptor [before the dot] as a filter e.g. vssgp,aadgp.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetSubjectTypes(this AzureDevopsSecurityGroupListSettings toolSettings, string subjectTypes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubjectTypes = subjectTypes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.SubjectTypes"/></em></p>
        ///   <p>A comma separated list of user subject subtypes to reduce the retrieved results. You can give initial part of descriptor [before the dot] as a filter e.g. vssgp,aadgp.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetSubjectTypes(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubjectTypes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetSubscription(this AzureDevopsSecurityGroupListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetSubscription(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetDebug(this AzureDevopsSecurityGroupListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetDebug(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetHelp(this AzureDevopsSecurityGroupListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetHelp(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetOutput(this AzureDevopsSecurityGroupListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetOutput(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetQuery(this AzureDevopsSecurityGroupListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetQuery(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings SetVerbose(this AzureDevopsSecurityGroupListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupListSettings ResetVerbose(this AzureDevopsSecurityGroupListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Id"/></em></p>
        ///   <p>Descriptor of the group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetId(this AzureDevopsSecurityGroupShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Id"/></em></p>
        ///   <p>Descriptor of the group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetId(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetDetect(this AzureDevopsSecurityGroupShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetDetect(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings EnableDetect(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings DisableDetect(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ToggleDetect(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetOrg(this AzureDevopsSecurityGroupShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetOrg(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetSubscription(this AzureDevopsSecurityGroupShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetSubscription(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetDebug(this AzureDevopsSecurityGroupShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetDebug(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetHelp(this AzureDevopsSecurityGroupShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetHelp(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetOutput(this AzureDevopsSecurityGroupShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetOutput(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetQuery(this AzureDevopsSecurityGroupShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetQuery(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings SetVerbose(this AzureDevopsSecurityGroupShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupShowSettings ResetVerbose(this AzureDevopsSecurityGroupShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupUpdateSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Id"/></em></p>
        ///   <p>Descriptor of the group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetId(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Id"/></em></p>
        ///   <p>Descriptor of the group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetId(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Description
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Description"/></em></p>
        ///   <p>New description for Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetDescription(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string description)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = description;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Description"/></em></p>
        ///   <p>New description for Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetDescription(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Description = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetDetect(this AzureDevopsSecurityGroupUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetDetect(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings EnableDetect(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings DisableDetect(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ToggleDetect(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Name"/></em></p>
        ///   <p>New name for Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetName(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Name"/></em></p>
        ///   <p>New name for Azure DevOps group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetName(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetOrg(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetOrg(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetSubscription(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetSubscription(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetDebug(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetDebug(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetHelp(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetHelp(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetOutput(this AzureDevopsSecurityGroupUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetOutput(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetQuery(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetQuery(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings SetVerbose(this AzureDevopsSecurityGroupUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupUpdateSettings ResetVerbose(this AzureDevopsSecurityGroupUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsAdminBannerAddSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsAdminBannerAddSettingsExtensions
    {
        #region Message
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Message"/></em></p>
        ///   <p>Message (string) to show in the banner.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetMessage(this AzureDevopsAdminBannerAddSettings toolSettings, string message)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Message = message;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Message"/></em></p>
        ///   <p>Message (string) to show in the banner.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetMessage(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Message = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetDetect(this AzureDevopsAdminBannerAddSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetDetect(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsAdminBannerAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings EnableDetect(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsAdminBannerAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings DisableDetect(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsAdminBannerAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ToggleDetect(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Expiration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Expiration"/></em></p>
        ///   <p>Date/time when the banner should no longer be presented to users. If not set, the banner does not automatically expire and must be removed with the remove command. Example : "2019-06-10 17:21:00 UTC", "2019-06-10".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetExpiration(this AzureDevopsAdminBannerAddSettings toolSettings, string expiration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Expiration = expiration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Expiration"/></em></p>
        ///   <p>Date/time when the banner should no longer be presented to users. If not set, the banner does not automatically expire and must be removed with the remove command. Example : "2019-06-10 17:21:00 UTC", "2019-06-10".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetExpiration(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Expiration = null;
            return toolSettings;
        }
        #endregion
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Id"/></em></p>
        ///   <p>Identifier for the new banner. This identifier is needed to change or remove the message later. A unique identifier is automatically created if one is not specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetId(this AzureDevopsAdminBannerAddSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Id"/></em></p>
        ///   <p>Identifier for the new banner. This identifier is needed to change or remove the message later. A unique identifier is automatically created if one is not specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetId(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetOrg(this AzureDevopsAdminBannerAddSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetOrg(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Type
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Type"/></em></p>
        ///   <p>Type of banner to present. Defaults is "info".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetType(this AzureDevopsAdminBannerAddSettings toolSettings, DevopsAdminBannerType type)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Type = type;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Type"/></em></p>
        ///   <p>Type of banner to present. Defaults is "info".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetType(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Type = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetSubscription(this AzureDevopsAdminBannerAddSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetSubscription(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetDebug(this AzureDevopsAdminBannerAddSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetDebug(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetHelp(this AzureDevopsAdminBannerAddSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetHelp(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetOutput(this AzureDevopsAdminBannerAddSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetOutput(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetQuery(this AzureDevopsAdminBannerAddSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetQuery(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings SetVerbose(this AzureDevopsAdminBannerAddSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerAddSettings ResetVerbose(this AzureDevopsAdminBannerAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsAdminBannerListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsAdminBannerListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetDetect(this AzureDevopsAdminBannerListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetDetect(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsAdminBannerListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings EnableDetect(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsAdminBannerListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings DisableDetect(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsAdminBannerListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ToggleDetect(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetOrg(this AzureDevopsAdminBannerListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetOrg(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetSubscription(this AzureDevopsAdminBannerListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetSubscription(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetDebug(this AzureDevopsAdminBannerListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetDebug(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetHelp(this AzureDevopsAdminBannerListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetHelp(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetOutput(this AzureDevopsAdminBannerListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetOutput(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetQuery(this AzureDevopsAdminBannerListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetQuery(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings SetVerbose(this AzureDevopsAdminBannerListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerListSettings ResetVerbose(this AzureDevopsAdminBannerListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsAdminBannerRemoveSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsAdminBannerRemoveSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Id"/></em></p>
        ///   <p>ID of the banner to remove.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetId(this AzureDevopsAdminBannerRemoveSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Id"/></em></p>
        ///   <p>ID of the banner to remove.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetId(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetDetect(this AzureDevopsAdminBannerRemoveSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetDetect(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsAdminBannerRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings EnableDetect(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsAdminBannerRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings DisableDetect(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsAdminBannerRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ToggleDetect(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetOrg(this AzureDevopsAdminBannerRemoveSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetOrg(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetSubscription(this AzureDevopsAdminBannerRemoveSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetSubscription(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetDebug(this AzureDevopsAdminBannerRemoveSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetDebug(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetHelp(this AzureDevopsAdminBannerRemoveSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetHelp(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetOutput(this AzureDevopsAdminBannerRemoveSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetOutput(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetQuery(this AzureDevopsAdminBannerRemoveSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetQuery(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings SetVerbose(this AzureDevopsAdminBannerRemoveSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerRemoveSettings ResetVerbose(this AzureDevopsAdminBannerRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsAdminBannerShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsAdminBannerShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Id"/></em></p>
        ///   <p>Identifier for the banner.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetId(this AzureDevopsAdminBannerShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Id"/></em></p>
        ///   <p>Identifier for the banner.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetId(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetDetect(this AzureDevopsAdminBannerShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetDetect(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsAdminBannerShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings EnableDetect(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsAdminBannerShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings DisableDetect(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsAdminBannerShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ToggleDetect(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetOrg(this AzureDevopsAdminBannerShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetOrg(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetSubscription(this AzureDevopsAdminBannerShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetSubscription(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetDebug(this AzureDevopsAdminBannerShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetDebug(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetHelp(this AzureDevopsAdminBannerShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetHelp(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetOutput(this AzureDevopsAdminBannerShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetOutput(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetQuery(this AzureDevopsAdminBannerShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetQuery(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings SetVerbose(this AzureDevopsAdminBannerShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerShowSettings ResetVerbose(this AzureDevopsAdminBannerShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsAdminBannerUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsAdminBannerUpdateSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetDetect(this AzureDevopsAdminBannerUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetDetect(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsAdminBannerUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings EnableDetect(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsAdminBannerUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings DisableDetect(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsAdminBannerUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ToggleDetect(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Expiration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Expiration"/></em></p>
        ///   <p>Date/time when the banner should no longer be presented to users. To unset the expiration for the banner, supply an empty value to this argument. Example : "2019-06-10 17:21:00 UTC", "2019-06-10".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetExpiration(this AzureDevopsAdminBannerUpdateSettings toolSettings, string expiration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Expiration = expiration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Expiration"/></em></p>
        ///   <p>Date/time when the banner should no longer be presented to users. To unset the expiration for the banner, supply an empty value to this argument. Example : "2019-06-10 17:21:00 UTC", "2019-06-10".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetExpiration(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Expiration = null;
            return toolSettings;
        }
        #endregion
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Id"/></em></p>
        ///   <p>ID of the banner to update.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetId(this AzureDevopsAdminBannerUpdateSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Id"/></em></p>
        ///   <p>ID of the banner to update.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetId(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Message
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Message"/></em></p>
        ///   <p>Message (string) to show in the banner.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetMessage(this AzureDevopsAdminBannerUpdateSettings toolSettings, string message)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Message = message;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Message"/></em></p>
        ///   <p>Message (string) to show in the banner.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetMessage(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Message = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetOrg(this AzureDevopsAdminBannerUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetOrg(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Type
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Type"/></em></p>
        ///   <p>Type of banner to present. Defaults is "info".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetType(this AzureDevopsAdminBannerUpdateSettings toolSettings, DevopsAdminBannerType type)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Type = type;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Type"/></em></p>
        ///   <p>Type of banner to present. Defaults is "info".</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetType(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Type = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetSubscription(this AzureDevopsAdminBannerUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetSubscription(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetDebug(this AzureDevopsAdminBannerUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetDebug(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetHelp(this AzureDevopsAdminBannerUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetHelp(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetOutput(this AzureDevopsAdminBannerUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetOutput(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetQuery(this AzureDevopsAdminBannerUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetQuery(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsAdminBannerUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings SetVerbose(this AzureDevopsAdminBannerUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsAdminBannerUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsAdminBannerUpdateSettings ResetVerbose(this AzureDevopsAdminBannerUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiPageCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiPageCreateSettingsExtensions
    {
        #region Path
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetPath(this AzureDevopsWikiPageCreateSettings toolSettings, string path)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = path;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetPath(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = null;
            return toolSettings;
        }
        #endregion
        #region Wiki
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetWiki(this AzureDevopsWikiPageCreateSettings toolSettings, string wiki)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = wiki;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetWiki(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = null;
            return toolSettings;
        }
        #endregion
        #region Comment
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Comment"/></em></p>
        ///   <p>Comment in the commit message of file add operation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetComment(this AzureDevopsWikiPageCreateSettings toolSettings, string comment)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Comment = comment;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Comment"/></em></p>
        ///   <p>Comment in the commit message of file add operation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetComment(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Comment = null;
            return toolSettings;
        }
        #endregion
        #region Content
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Content"/></em></p>
        ///   <p>Content of the wiki page. Ignored if --file-path is specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetContent(this AzureDevopsWikiPageCreateSettings toolSettings, string content)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Content = content;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Content"/></em></p>
        ///   <p>Content of the wiki page. Ignored if --file-path is specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetContent(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Content = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetDetect(this AzureDevopsWikiPageCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetDetect(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiPageCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings EnableDetect(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiPageCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings DisableDetect(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiPageCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ToggleDetect(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Encoding
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Encoding"/></em></p>
        ///   <p>Encoding of the file. Used in conjunction with --file-path parameter.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetEncoding(this AzureDevopsWikiPageCreateSettings toolSettings, DevopsEncoding encoding)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = encoding;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Encoding"/></em></p>
        ///   <p>Encoding of the file. Used in conjunction with --file-path parameter.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetEncoding(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = null;
            return toolSettings;
        }
        #endregion
        #region FilePath
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.FilePath"/></em></p>
        ///   <p>Path of the file input if content is specified in the file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetFilePath(this AzureDevopsWikiPageCreateSettings toolSettings, string filePath)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilePath = filePath;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.FilePath"/></em></p>
        ///   <p>Path of the file input if content is specified in the file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetFilePath(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilePath = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetOrg(this AzureDevopsWikiPageCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetOrg(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetProject(this AzureDevopsWikiPageCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetProject(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetSubscription(this AzureDevopsWikiPageCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetSubscription(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetDebug(this AzureDevopsWikiPageCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetDebug(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetHelp(this AzureDevopsWikiPageCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetHelp(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetOutput(this AzureDevopsWikiPageCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetOutput(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetQuery(this AzureDevopsWikiPageCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetQuery(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings SetVerbose(this AzureDevopsWikiPageCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageCreateSettings ResetVerbose(this AzureDevopsWikiPageCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiPageDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiPageDeleteSettingsExtensions
    {
        #region Path
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetPath(this AzureDevopsWikiPageDeleteSettings toolSettings, string path)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = path;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetPath(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = null;
            return toolSettings;
        }
        #endregion
        #region Wiki
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetWiki(this AzureDevopsWikiPageDeleteSettings toolSettings, string wiki)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = wiki;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetWiki(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = null;
            return toolSettings;
        }
        #endregion
        #region Comment
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Comment"/></em></p>
        ///   <p>Comment in the commit message of delete operation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetComment(this AzureDevopsWikiPageDeleteSettings toolSettings, string comment)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Comment = comment;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Comment"/></em></p>
        ///   <p>Comment in the commit message of delete operation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetComment(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Comment = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetDetect(this AzureDevopsWikiPageDeleteSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetDetect(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiPageDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings EnableDetect(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiPageDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings DisableDetect(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiPageDeleteSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ToggleDetect(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetOrg(this AzureDevopsWikiPageDeleteSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetOrg(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetProject(this AzureDevopsWikiPageDeleteSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetProject(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetYes(this AzureDevopsWikiPageDeleteSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetYes(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetSubscription(this AzureDevopsWikiPageDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetSubscription(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetDebug(this AzureDevopsWikiPageDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetDebug(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetHelp(this AzureDevopsWikiPageDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetHelp(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetOutput(this AzureDevopsWikiPageDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetOutput(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetQuery(this AzureDevopsWikiPageDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetQuery(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings SetVerbose(this AzureDevopsWikiPageDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageDeleteSettings ResetVerbose(this AzureDevopsWikiPageDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiPageShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiPageShowSettingsExtensions
    {
        #region Path
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetPath(this AzureDevopsWikiPageShowSettings toolSettings, string path)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = path;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetPath(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = null;
            return toolSettings;
        }
        #endregion
        #region Wiki
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetWiki(this AzureDevopsWikiPageShowSettings toolSettings, string wiki)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = wiki;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetWiki(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetDetect(this AzureDevopsWikiPageShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetDetect(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiPageShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings EnableDetect(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiPageShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings DisableDetect(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiPageShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ToggleDetect(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region IncludeContent
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.IncludeContent"/></em></p>
        ///   <p>Include content of the page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetIncludeContent(this AzureDevopsWikiPageShowSettings toolSettings, string includeContent)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeContent = includeContent;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.IncludeContent"/></em></p>
        ///   <p>Include content of the page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetIncludeContent(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IncludeContent = null;
            return toolSettings;
        }
        #endregion
        #region Open
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Open"/></em></p>
        ///   <p>Open the wiki page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetOpen(this AzureDevopsWikiPageShowSettings toolSettings, string open)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = open;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Open"/></em></p>
        ///   <p>Open the wiki page in your web browser.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetOpen(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Open = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetOrg(this AzureDevopsWikiPageShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetOrg(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetProject(this AzureDevopsWikiPageShowSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetProject(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Version
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Version"/></em></p>
        ///   <p>Version (ETag) of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetVersion(this AzureDevopsWikiPageShowSettings toolSettings, string version)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Version = version;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Version"/></em></p>
        ///   <p>Version (ETag) of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetVersion(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Version = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetSubscription(this AzureDevopsWikiPageShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetSubscription(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetDebug(this AzureDevopsWikiPageShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetDebug(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetHelp(this AzureDevopsWikiPageShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetHelp(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetOutput(this AzureDevopsWikiPageShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetOutput(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetQuery(this AzureDevopsWikiPageShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetQuery(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings SetVerbose(this AzureDevopsWikiPageShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageShowSettings ResetVerbose(this AzureDevopsWikiPageShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsWikiPageUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsWikiPageUpdateSettingsExtensions
    {
        #region Path
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetPath(this AzureDevopsWikiPageUpdateSettings toolSettings, string path)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = path;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Path"/></em></p>
        ///   <p>Path of the wiki page.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetPath(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Path = null;
            return toolSettings;
        }
        #endregion
        #region Version
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Version"/></em></p>
        ///   <p>Version (ETag) of file to edit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetVersion(this AzureDevopsWikiPageUpdateSettings toolSettings, string version)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Version = version;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Version"/></em></p>
        ///   <p>Version (ETag) of file to edit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetVersion(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Version = null;
            return toolSettings;
        }
        #endregion
        #region Wiki
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetWiki(this AzureDevopsWikiPageUpdateSettings toolSettings, string wiki)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = wiki;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Wiki"/></em></p>
        ///   <p>Name or Id of the wiki.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetWiki(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Wiki = null;
            return toolSettings;
        }
        #endregion
        #region Comment
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Comment"/></em></p>
        ///   <p>Comment in the commit message of file edit operation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetComment(this AzureDevopsWikiPageUpdateSettings toolSettings, string comment)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Comment = comment;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Comment"/></em></p>
        ///   <p>Comment in the commit message of file edit operation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetComment(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Comment = null;
            return toolSettings;
        }
        #endregion
        #region Content
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Content"/></em></p>
        ///   <p>Content of the wiki page. Ignored if --file-path is specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetContent(this AzureDevopsWikiPageUpdateSettings toolSettings, string content)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Content = content;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Content"/></em></p>
        ///   <p>Content of the wiki page. Ignored if --file-path is specified.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetContent(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Content = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetDetect(this AzureDevopsWikiPageUpdateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetDetect(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsWikiPageUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings EnableDetect(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsWikiPageUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings DisableDetect(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsWikiPageUpdateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ToggleDetect(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Encoding
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Encoding"/></em></p>
        ///   <p>Encoding of the file. Used in conjunction with --file-path parameter.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetEncoding(this AzureDevopsWikiPageUpdateSettings toolSettings, DevopsEncoding encoding)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = encoding;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Encoding"/></em></p>
        ///   <p>Encoding of the file. Used in conjunction with --file-path parameter.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetEncoding(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Encoding = null;
            return toolSettings;
        }
        #endregion
        #region FilePath
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.FilePath"/></em></p>
        ///   <p>Path of the file input if content is specified in the file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetFilePath(this AzureDevopsWikiPageUpdateSettings toolSettings, string filePath)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilePath = filePath;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.FilePath"/></em></p>
        ///   <p>Path of the file input if content is specified in the file.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetFilePath(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilePath = null;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetOrg(this AzureDevopsWikiPageUpdateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetOrg(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetProject(this AzureDevopsWikiPageUpdateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetProject(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetSubscription(this AzureDevopsWikiPageUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetSubscription(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetDebug(this AzureDevopsWikiPageUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetDebug(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetHelp(this AzureDevopsWikiPageUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetHelp(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetOutput(this AzureDevopsWikiPageUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetOutput(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetQuery(this AzureDevopsWikiPageUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetQuery(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsWikiPageUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings SetVerbose(this AzureDevopsWikiPageUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsWikiPageUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsWikiPageUpdateSettings ResetVerbose(this AzureDevopsWikiPageUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsServiceEndpointAzurermCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsServiceEndpointAzurermCreateSettingsExtensions
    {
        #region AzureRmServicePrincipalId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalId"/></em></p>
        ///   <p>Service principal id for creating azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetAzureRmServicePrincipalId(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string azureRmServicePrincipalId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmServicePrincipalId = azureRmServicePrincipalId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalId"/></em></p>
        ///   <p>Service principal id for creating azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetAzureRmServicePrincipalId(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmServicePrincipalId = null;
            return toolSettings;
        }
        #endregion
        #region AzureRmSubscriptionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionId"/></em></p>
        ///   <p>Subscription id for azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetAzureRmSubscriptionId(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string azureRmSubscriptionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmSubscriptionId = azureRmSubscriptionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionId"/></em></p>
        ///   <p>Subscription id for azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetAzureRmSubscriptionId(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmSubscriptionId = null;
            return toolSettings;
        }
        #endregion
        #region AzureRmSubscriptionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionName"/></em></p>
        ///   <p>Name of azure subscription for azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetAzureRmSubscriptionName(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string azureRmSubscriptionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmSubscriptionName = azureRmSubscriptionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmSubscriptionName"/></em></p>
        ///   <p>Name of azure subscription for azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetAzureRmSubscriptionName(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmSubscriptionName = null;
            return toolSettings;
        }
        #endregion
        #region AzureRmTenantId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmTenantId"/></em></p>
        ///   <p>Tenant id for creating azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetAzureRmTenantId(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string azureRmTenantId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmTenantId = azureRmTenantId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmTenantId"/></em></p>
        ///   <p>Tenant id for creating azure rm service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetAzureRmTenantId(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmTenantId = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Name"/></em></p>
        ///   <p>Name of service endpoint to create.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetName(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Name"/></em></p>
        ///   <p>Name of service endpoint to create.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetName(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region AzureRmServicePrincipalCertificatePath
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalCertificatePath"/></em></p>
        ///   <p>Path to (.pem) which is certificate. Create using command "openssl pkcs12 -in file.pfx -out file.pem -nodes -password pass:&lt;password_here&gt;". More details : <a href="https://aka.ms/azure-devops-cli-service-endpoint">https://aka.ms/azure-devops-cli-service-endpoint</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetAzureRmServicePrincipalCertificatePath(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string azureRmServicePrincipalCertificatePath)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmServicePrincipalCertificatePath = azureRmServicePrincipalCertificatePath;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.AzureRmServicePrincipalCertificatePath"/></em></p>
        ///   <p>Path to (.pem) which is certificate. Create using command "openssl pkcs12 -in file.pfx -out file.pem -nodes -password pass:&lt;password_here&gt;". More details : <a href="https://aka.ms/azure-devops-cli-service-endpoint">https://aka.ms/azure-devops-cli-service-endpoint</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetAzureRmServicePrincipalCertificatePath(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AzureRmServicePrincipalCertificatePath = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetDetect(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetDetect(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings EnableDetect(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings DisableDetect(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ToggleDetect(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetOrg(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetOrg(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetProject(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetProject(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetSubscription(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetSubscription(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetDebug(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetDebug(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetHelp(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetHelp(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetOutput(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetOutput(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetQuery(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetQuery(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings SetVerbose(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointAzurermCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointAzurermCreateSettings ResetVerbose(this AzureDevopsServiceEndpointAzurermCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsServiceEndpointGithubCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsServiceEndpointGithubCreateSettingsExtensions
    {
        #region GithubUrl
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.GithubUrl"/></em></p>
        ///   <p>Url for github for creating service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetGithubUrl(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string githubUrl)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GithubUrl = githubUrl;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.GithubUrl"/></em></p>
        ///   <p>Url for github for creating service endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetGithubUrl(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GithubUrl = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Name"/></em></p>
        ///   <p>Name of service endpoint to create.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetName(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Name"/></em></p>
        ///   <p>Name of service endpoint to create.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetName(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetDetect(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetDetect(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings EnableDetect(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings DisableDetect(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ToggleDetect(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetOrg(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetOrg(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Project
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetProject(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string project)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = project;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Project"/></em></p>
        ///   <p>Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetProject(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Project = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetSubscription(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetSubscription(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetDebug(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetDebug(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetHelp(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetHelp(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetOutput(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetOutput(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetQuery(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetQuery(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings SetVerbose(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsServiceEndpointGithubCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsServiceEndpointGithubCreateSettings ResetVerbose(this AzureDevopsServiceEndpointGithubCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupMembershipAddSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupMembershipAddSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.GroupId"/></em></p>
        ///   <p>Descriptor of the group to which member needs to be added.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetGroupId(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.GroupId"/></em></p>
        ///   <p>Descriptor of the group to which member needs to be added.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetGroupId(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region MemberId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.MemberId"/></em></p>
        ///   <p>Descriptor of the group or Email Id of the user to be added.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetMemberId(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string memberId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MemberId = memberId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.MemberId"/></em></p>
        ///   <p>Descriptor of the group or Email Id of the user to be added.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetMemberId(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MemberId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetDetect(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetDetect(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings EnableDetect(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings DisableDetect(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ToggleDetect(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetOrg(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetOrg(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetSubscription(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetSubscription(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetDebug(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetDebug(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetHelp(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetHelp(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetOutput(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetOutput(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetQuery(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetQuery(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings SetVerbose(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipAddSettings ResetVerbose(this AzureDevopsSecurityGroupMembershipAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupMembershipListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupMembershipListSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Id"/></em></p>
        ///   <p>Group descriptor or User Email whose membership details are required.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetId(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Id"/></em></p>
        ///   <p>Group descriptor or User Email whose membership details are required.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetId(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetDetect(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetDetect(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupMembershipListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings EnableDetect(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupMembershipListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings DisableDetect(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupMembershipListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ToggleDetect(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetOrg(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetOrg(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Relationship
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Relationship"/></em></p>
        ///   <p>Get member of/members for this group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetRelationship(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, DevopsSecurityGroupMembershipListRelationship relationship)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Relationship = relationship;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Relationship"/></em></p>
        ///   <p>Get member of/members for this group.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetRelationship(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Relationship = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetSubscription(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetSubscription(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetDebug(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetDebug(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetHelp(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetHelp(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetOutput(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetOutput(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetQuery(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetQuery(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings SetVerbose(this AzureDevopsSecurityGroupMembershipListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipListSettings ResetVerbose(this AzureDevopsSecurityGroupMembershipListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityGroupMembershipRemoveSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityGroupMembershipRemoveSettingsExtensions
    {
        #region GroupId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.GroupId"/></em></p>
        ///   <p>Descriptor of the group from which member needs to be removed.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetGroupId(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string groupId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = groupId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.GroupId"/></em></p>
        ///   <p>Descriptor of the group from which member needs to be removed.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetGroupId(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.GroupId = null;
            return toolSettings;
        }
        #endregion
        #region MemberId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.MemberId"/></em></p>
        ///   <p>Descriptor of the group or Email Id of the user to be removed.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetMemberId(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string memberId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MemberId = memberId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.MemberId"/></em></p>
        ///   <p>Descriptor of the group or Email Id of the user to be removed.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetMemberId(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MemberId = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetDetect(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetDetect(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings EnableDetect(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings DisableDetect(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ToggleDetect(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetOrg(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetOrg(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Yes
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetYes(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string yes)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = yes;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Yes"/></em></p>
        ///   <p>Do not prompt for confirmation.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetYes(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Yes = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetSubscription(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetSubscription(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetDebug(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetDebug(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetHelp(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetHelp(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetOutput(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetOutput(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetQuery(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetQuery(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings SetVerbose(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityGroupMembershipRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityGroupMembershipRemoveSettings ResetVerbose(this AzureDevopsSecurityGroupMembershipRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityPermissionNamespaceListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityPermissionNamespaceListSettingsExtensions
    {
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetDetect(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetDetect(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings EnableDetect(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings DisableDetect(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ToggleDetect(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region LocalOnly
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.LocalOnly"/></em></p>
        ///   <p>If true, retrieve only local security namespaces.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetLocalOnly(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, bool? localOnly)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LocalOnly = localOnly;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.LocalOnly"/></em></p>
        ///   <p>If true, retrieve only local security namespaces.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetLocalOnly(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LocalOnly = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.LocalOnly"/></em></p>
        ///   <p>If true, retrieve only local security namespaces.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings EnableLocalOnly(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LocalOnly = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.LocalOnly"/></em></p>
        ///   <p>If true, retrieve only local security namespaces.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings DisableLocalOnly(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LocalOnly = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.LocalOnly"/></em></p>
        ///   <p>If true, retrieve only local security namespaces.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ToggleLocalOnly(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LocalOnly = !toolSettings.LocalOnly;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetOrg(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetOrg(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetSubscription(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetSubscription(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetDebug(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetDebug(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetHelp(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetHelp(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetOutput(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetOutput(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetQuery(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetQuery(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings SetVerbose(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceListSettings ResetVerbose(this AzureDevopsSecurityPermissionNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureDevopsSecurityPermissionNamespaceShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureDevopsSecurityPermissionNamespaceShowSettingsExtensions
    {
        #region Id
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetId(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, string id)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = id;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Id"/></em></p>
        ///   <p>ID of security namespace.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetId(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Id = null;
            return toolSettings;
        }
        #endregion
        #region Detect
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetDetect(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, bool? detect)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = detect;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetDetect(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings EnableDetect(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings DisableDetect(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Detect"/></em></p>
        ///   <p>Automatically detect organization.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ToggleDetect(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Detect = !toolSettings.Detect;
            return toolSettings;
        }
        #endregion
        #region Org
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetOrg(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, string org)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = org;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Org"/></em></p>
        ///   <p>Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: <a href="https://dev.azure.com/MyOrganizationName/">https://dev.azure.com/MyOrganizationName/</a>.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetOrg(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Org = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetSubscription(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetSubscription(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetDebug(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetDebug(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetHelp(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetHelp(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetOutput(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetOutput(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetQuery(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetQuery(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings SetVerbose(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureDevopsSecurityPermissionNamespaceShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureDevopsSecurityPermissionNamespaceShowSettings ResetVerbose(this AzureDevopsSecurityPermissionNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region DevopsEncoding
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsEncoding>))]
    public partial class DevopsEncoding : Enumeration
    {
        public static DevopsEncoding ascii = new DevopsEncoding { Value = "ascii" };
        public static DevopsEncoding utf_16be = new DevopsEncoding { Value = "utf-16be" };
        public static DevopsEncoding utf_16le = new DevopsEncoding { Value = "utf-16le" };
        public static DevopsEncoding utf_8 = new DevopsEncoding { Value = "utf-8" };
    }
    #endregion
    #region DevopsProjectCreateSourceControl
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsProjectCreateSourceControl>))]
    public partial class DevopsProjectCreateSourceControl : Enumeration
    {
        public static DevopsProjectCreateSourceControl git = new DevopsProjectCreateSourceControl { Value = "git" };
        public static DevopsProjectCreateSourceControl tfvc = new DevopsProjectCreateSourceControl { Value = "tfvc" };
    }
    #endregion
    #region DevopsProjectCreateVisibility
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsProjectCreateVisibility>))]
    public partial class DevopsProjectCreateVisibility : Enumeration
    {
        public static DevopsProjectCreateVisibility private_ = new DevopsProjectCreateVisibility { Value = "private" };
        public static DevopsProjectCreateVisibility public_ = new DevopsProjectCreateVisibility { Value = "public" };
    }
    #endregion
    #region DevopsUserLicenseType
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsUserLicenseType>))]
    public partial class DevopsUserLicenseType : Enumeration
    {
        public static DevopsUserLicenseType advanced = new DevopsUserLicenseType { Value = "advanced" };
        public static DevopsUserLicenseType earlyadopter = new DevopsUserLicenseType { Value = "earlyadopter" };
        public static DevopsUserLicenseType express = new DevopsUserLicenseType { Value = "express" };
        public static DevopsUserLicenseType professional = new DevopsUserLicenseType { Value = "professional" };
        public static DevopsUserLicenseType stakeholder = new DevopsUserLicenseType { Value = "stakeholder" };
    }
    #endregion
    #region DevopsWikiCreateType
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsWikiCreateType>))]
    public partial class DevopsWikiCreateType : Enumeration
    {
        public static DevopsWikiCreateType codewiki = new DevopsWikiCreateType { Value = "codewiki" };
        public static DevopsWikiCreateType projectwiki = new DevopsWikiCreateType { Value = "projectwiki" };
    }
    #endregion
    #region DevopsAdminBannerType
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsAdminBannerType>))]
    public partial class DevopsAdminBannerType : Enumeration
    {
        public static DevopsAdminBannerType error = new DevopsAdminBannerType { Value = "error" };
        public static DevopsAdminBannerType info = new DevopsAdminBannerType { Value = "info" };
        public static DevopsAdminBannerType warning = new DevopsAdminBannerType { Value = "warning" };
    }
    #endregion
    #region DevopsWikiScope
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsWikiScope>))]
    public partial class DevopsWikiScope : Enumeration
    {
        public static DevopsWikiScope organization = new DevopsWikiScope { Value = "organization" };
        public static DevopsWikiScope project = new DevopsWikiScope { Value = "project" };
    }
    #endregion
    #region DevopsSecurityGroupMembershipListRelationship
    /// <summary>
    ///   Used within <see cref="AzureDevopsTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<DevopsSecurityGroupMembershipListRelationship>))]
    public partial class DevopsSecurityGroupMembershipListRelationship : Enumeration
    {
        public static DevopsSecurityGroupMembershipListRelationship memberof = new DevopsSecurityGroupMembershipListRelationship { Value = "memberof" };
        public static DevopsSecurityGroupMembershipListRelationship members = new DevopsSecurityGroupMembershipListRelationship { Value = "members" };
    }
    #endregion
}
