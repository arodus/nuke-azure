// Generated from https://github.com/nuke-build/azure/blob/master/src/Nuke.Azure/specifications/AzureServicebus.json
// Generated with Nuke.CodeGeneration version 0.20.1 (OSX,.NETStandard,Version=v2.0)

using JetBrains.Annotations;
using Newtonsoft.Json;
using Nuke.Common;
using Nuke.Common.Execution;
using Nuke.Common.Tooling;
using Nuke.Common.Tools;
using Nuke.Common.Utilities.Collections;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Linq;
using System.Text;

namespace Nuke.Azure
{
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTasks
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public static string AzureServicebusPath =>
            ToolPathResolver.TryGetEnvironmentExecutable("AZURESERVICEBUS_EXE") ??
            ToolPathResolver.GetPathExecutable("az");
        public static Action<OutputType, string> AzureServicebusLogger { get; set; } = ProcessTasks.DefaultLogger;
        /// <summary>
        ///   Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebus(string arguments, string workingDirectory = null, IReadOnlyDictionary<string, string> environmentVariables = null, int? timeout = null, bool? logOutput = null, bool? logInvocation = null, Func<string, string> outputFilter = null)
        {
            var process = ProcessTasks.StartProcess(AzureServicebusPath, arguments, workingDirectory, environmentVariables, timeout, logOutput, logInvocation, AzureServicebusLogger, outputFilter);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebus(AzureServicebusSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusSettings.Query"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebus(Configure<AzureServicebusSettings> configurator)
        {
            return AzureServicebus(configurator(new AzureServicebusSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusSettings.Query"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebus(CombinatorialConfigure<AzureServicebusSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebus, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicCreate(AzureServicebusTopicCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicCreateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicCreateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicCreateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusTopicCreateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicCreateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusTopicCreateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusTopicCreateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-ordering</c> via <see cref="AzureServicebusTopicCreateSettings.EnableOrdering"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusTopicCreateSettings.EnablePartitioning"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicCreateSettings.Help"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusTopicCreateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicCreateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicCreate(Configure<AzureServicebusTopicCreateSettings> configurator)
        {
            return AzureServicebusTopicCreate(configurator(new AzureServicebusTopicCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicCreateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicCreateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicCreateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusTopicCreateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicCreateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusTopicCreateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusTopicCreateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-ordering</c> via <see cref="AzureServicebusTopicCreateSettings.EnableOrdering"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusTopicCreateSettings.EnablePartitioning"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicCreateSettings.Help"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusTopicCreateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicCreateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicCreate(CombinatorialConfigure<AzureServicebusTopicCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicDelete(AzureServicebusTopicDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicDelete(Configure<AzureServicebusTopicDeleteSettings> configurator)
        {
            return AzureServicebusTopicDelete(configurator(new AzureServicebusTopicDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicDelete(CombinatorialConfigure<AzureServicebusTopicDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicList(AzureServicebusTopicListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusTopicListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusTopicListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicList(Configure<AzureServicebusTopicListSettings> configurator)
        {
            return AzureServicebusTopicList(configurator(new AzureServicebusTopicListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusTopicListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusTopicListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicList(CombinatorialConfigure<AzureServicebusTopicListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicShow(AzureServicebusTopicShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicShow(Configure<AzureServicebusTopicShowSettings> configurator)
        {
            return AzureServicebusTopicShow(configurator(new AzureServicebusTopicShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicShow(CombinatorialConfigure<AzureServicebusTopicShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicUpdate(AzureServicebusTopicUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicUpdateSettings.Add"/></li>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicUpdateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicUpdateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicUpdateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusTopicUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-ordering</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableOrdering"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusTopicUpdateSettings.EnablePartitioning"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicUpdateSettings.Ids"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusTopicUpdateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicUpdateSettings.Set"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicUpdateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicUpdate(Configure<AzureServicebusTopicUpdateSettings> configurator)
        {
            return AzureServicebusTopicUpdate(configurator(new AzureServicebusTopicUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicUpdateSettings.Add"/></li>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicUpdateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicUpdateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicUpdateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusTopicUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-ordering</c> via <see cref="AzureServicebusTopicUpdateSettings.EnableOrdering"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusTopicUpdateSettings.EnablePartitioning"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicUpdateSettings.Ids"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusTopicUpdateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicUpdateSettings.Set"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicUpdateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicUpdate(CombinatorialConfigure<AzureServicebusTopicUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationAbort(AzureServicebusMigrationAbortSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusMigrationAbortSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationAbortSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationAbortSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationAbortSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationAbortSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationAbortSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationAbortSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationAbortSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationAbortSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationAbortSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationAbort(Configure<AzureServicebusMigrationAbortSettings> configurator)
        {
            return AzureServicebusMigrationAbort(configurator(new AzureServicebusMigrationAbortSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationAbortSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationAbortSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationAbortSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationAbortSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationAbortSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationAbortSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationAbortSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationAbortSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationAbortSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusMigrationAbortSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusMigrationAbort(CombinatorialConfigure<AzureServicebusMigrationAbortSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusMigrationAbort, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationComplete(AzureServicebusMigrationCompleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusMigrationCompleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationCompleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationCompleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationCompleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationCompleteSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationCompleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationCompleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationCompleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationCompleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationCompleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationComplete(Configure<AzureServicebusMigrationCompleteSettings> configurator)
        {
            return AzureServicebusMigrationComplete(configurator(new AzureServicebusMigrationCompleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationCompleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationCompleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationCompleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationCompleteSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationCompleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationCompleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationCompleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationCompleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationCompleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusMigrationCompleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusMigrationComplete(CombinatorialConfigure<AzureServicebusMigrationCompleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusMigrationComplete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationShow(AzureServicebusMigrationShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusMigrationShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationShowSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationShow(Configure<AzureServicebusMigrationShowSettings> configurator)
        {
            return AzureServicebusMigrationShow(configurator(new AzureServicebusMigrationShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationShowSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusMigrationShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusMigrationShow(CombinatorialConfigure<AzureServicebusMigrationShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusMigrationShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationStart(AzureServicebusMigrationStartSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusMigrationStartSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationStartSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationStartSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationStartSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationStartSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationStartSettings.Output"/></li>
        ///     <li><c>--post-migration-name</c> via <see cref="AzureServicebusMigrationStartSettings.PostMigrationName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationStartSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationStartSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationStartSettings.Subscription"/></li>
        ///     <li><c>--target-namespace</c> via <see cref="AzureServicebusMigrationStartSettings.TargetNamespace"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationStartSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusMigrationStart(Configure<AzureServicebusMigrationStartSettings> configurator)
        {
            return AzureServicebusMigrationStart(configurator(new AzureServicebusMigrationStartSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusMigrationStartSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusMigrationStartSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusMigrationStartSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusMigrationStartSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusMigrationStartSettings.Output"/></li>
        ///     <li><c>--post-migration-name</c> via <see cref="AzureServicebusMigrationStartSettings.PostMigrationName"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusMigrationStartSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusMigrationStartSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusMigrationStartSettings.Subscription"/></li>
        ///     <li><c>--target-namespace</c> via <see cref="AzureServicebusMigrationStartSettings.TargetNamespace"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusMigrationStartSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusMigrationStartSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusMigrationStart(CombinatorialConfigure<AzureServicebusMigrationStartSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusMigrationStart, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceCreate(AzureServicebusNamespaceCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--capacity</c> via <see cref="AzureServicebusNamespaceCreateSettings.Capacity"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceCreateSettings.Debug"/></li>
        ///     <li><c>--default-action</c> via <see cref="AzureServicebusNamespaceCreateSettings.DefaultAction"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceCreateSettings.Help"/></li>
        ///     <li><c>--location</c> via <see cref="AzureServicebusNamespaceCreateSettings.Location"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceCreateSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--sku</c> via <see cref="AzureServicebusNamespaceCreateSettings.Sku"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceCreateSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzureServicebusNamespaceCreateSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceCreate(Configure<AzureServicebusNamespaceCreateSettings> configurator)
        {
            return AzureServicebusNamespaceCreate(configurator(new AzureServicebusNamespaceCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--capacity</c> via <see cref="AzureServicebusNamespaceCreateSettings.Capacity"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceCreateSettings.Debug"/></li>
        ///     <li><c>--default-action</c> via <see cref="AzureServicebusNamespaceCreateSettings.DefaultAction"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceCreateSettings.Help"/></li>
        ///     <li><c>--location</c> via <see cref="AzureServicebusNamespaceCreateSettings.Location"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceCreateSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--sku</c> via <see cref="AzureServicebusNamespaceCreateSettings.Sku"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceCreateSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzureServicebusNamespaceCreateSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceCreate(CombinatorialConfigure<AzureServicebusNamespaceCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceDelete(AzureServicebusNamespaceDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceDelete(Configure<AzureServicebusNamespaceDeleteSettings> configurator)
        {
            return AzureServicebusNamespaceDelete(configurator(new AzureServicebusNamespaceDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceDelete(CombinatorialConfigure<AzureServicebusNamespaceDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceExists(AzureServicebusNamespaceExistsSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceExistsSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceExistsSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceExistsSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceExistsSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceExistsSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceExistsSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceExistsSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceExistsSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceExists(Configure<AzureServicebusNamespaceExistsSettings> configurator)
        {
            return AzureServicebusNamespaceExists(configurator(new AzureServicebusNamespaceExistsSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceExistsSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceExistsSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceExistsSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceExistsSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceExistsSettings.Query"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceExistsSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceExistsSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceExistsSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceExists(CombinatorialConfigure<AzureServicebusNamespaceExistsSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceExists, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceList(AzureServicebusNamespaceListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceListSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceList(Configure<AzureServicebusNamespaceListSettings> configurator)
        {
            return AzureServicebusNamespaceList(configurator(new AzureServicebusNamespaceListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceListSettings.Help"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceList(CombinatorialConfigure<AzureServicebusNamespaceListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceShow(AzureServicebusNamespaceShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceShowSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceShow(Configure<AzureServicebusNamespaceShowSettings> configurator)
        {
            return AzureServicebusNamespaceShow(configurator(new AzureServicebusNamespaceShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceShowSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceShow(CombinatorialConfigure<AzureServicebusNamespaceShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceUpdate(AzureServicebusNamespaceUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Add"/></li>
        ///     <li><c>--capacity</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Capacity"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Debug"/></li>
        ///     <li><c>--default-action</c> via <see cref="AzureServicebusNamespaceUpdateSettings.DefaultAction"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusNamespaceUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Set"/></li>
        ///     <li><c>--sku</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Sku"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceUpdate(Configure<AzureServicebusNamespaceUpdateSettings> configurator)
        {
            return AzureServicebusNamespaceUpdate(configurator(new AzureServicebusNamespaceUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Add"/></li>
        ///     <li><c>--capacity</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Capacity"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Debug"/></li>
        ///     <li><c>--default-action</c> via <see cref="AzureServicebusNamespaceUpdateSettings.DefaultAction"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusNamespaceUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Name"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Set"/></li>
        ///     <li><c>--sku</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Sku"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Subscription"/></li>
        ///     <li><c>--tags</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Tags"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceUpdate(CombinatorialConfigure<AzureServicebusNamespaceUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasBreakPair(AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasBreakPairSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasBreakPair(Configure<AzureServicebusGeorecoveryAliasBreakPairSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasBreakPair(configurator(new AzureServicebusGeorecoveryAliasBreakPairSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasBreakPairSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasBreakPair(CombinatorialConfigure<AzureServicebusGeorecoveryAliasBreakPairSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasBreakPair, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasDelete(AzureServicebusGeorecoveryAliasDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasDelete(Configure<AzureServicebusGeorecoveryAliasDeleteSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasDelete(configurator(new AzureServicebusGeorecoveryAliasDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasDelete(CombinatorialConfigure<AzureServicebusGeorecoveryAliasDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasExists(AzureServicebusGeorecoveryAliasExistsSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasExistsSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasExists(Configure<AzureServicebusGeorecoveryAliasExistsSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasExists(configurator(new AzureServicebusGeorecoveryAliasExistsSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasExistsSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasExists(CombinatorialConfigure<AzureServicebusGeorecoveryAliasExistsSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasExists, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasFailOver(AzureServicebusGeorecoveryAliasFailOverSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasFailOverSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasFailOver(Configure<AzureServicebusGeorecoveryAliasFailOverSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasFailOver(configurator(new AzureServicebusGeorecoveryAliasFailOverSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasFailOverSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasFailOver(CombinatorialConfigure<AzureServicebusGeorecoveryAliasFailOverSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasFailOver, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasList(AzureServicebusGeorecoveryAliasListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasList(Configure<AzureServicebusGeorecoveryAliasListSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasList(configurator(new AzureServicebusGeorecoveryAliasListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasList(CombinatorialConfigure<AzureServicebusGeorecoveryAliasListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasSet(AzureServicebusGeorecoveryAliasSetSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasSetSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Alias"/></li>
        ///     <li><c>--alternate-name</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.AlternateName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Output"/></li>
        ///     <li><c>--partner-namespace</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.PartnerNamespace"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasSet(Configure<AzureServicebusGeorecoveryAliasSetSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasSet(configurator(new AzureServicebusGeorecoveryAliasSetSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Alias"/></li>
        ///     <li><c>--alternate-name</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.AlternateName"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Output"/></li>
        ///     <li><c>--partner-namespace</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.PartnerNamespace"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasSetSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasSetSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasSet(CombinatorialConfigure<AzureServicebusGeorecoveryAliasSetSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasSet, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasShow(AzureServicebusGeorecoveryAliasShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasShow(Configure<AzureServicebusGeorecoveryAliasShowSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasShow(configurator(new AzureServicebusGeorecoveryAliasShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasShow(CombinatorialConfigure<AzureServicebusGeorecoveryAliasShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueCreate(AzureServicebusQueueCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusQueueCreateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueCreateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusQueueCreateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusQueueCreateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusQueueCreateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusQueueCreateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusQueueCreateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusQueueCreateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusQueueCreateSettings.EnablePartitioning"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusQueueCreateSettings.EnableSession"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusQueueCreateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusQueueCreateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueCreateSettings.Help"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusQueueCreateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusQueueCreateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusQueueCreateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusQueueCreateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueCreate(Configure<AzureServicebusQueueCreateSettings> configurator)
        {
            return AzureServicebusQueueCreate(configurator(new AzureServicebusQueueCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusQueueCreateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueCreateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusQueueCreateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusQueueCreateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusQueueCreateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusQueueCreateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusQueueCreateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusQueueCreateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusQueueCreateSettings.EnablePartitioning"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusQueueCreateSettings.EnableSession"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusQueueCreateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusQueueCreateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueCreateSettings.Help"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusQueueCreateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusQueueCreateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusQueueCreateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusQueueCreateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueCreate(CombinatorialConfigure<AzureServicebusQueueCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueDelete(AzureServicebusQueueDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueDelete(Configure<AzureServicebusQueueDeleteSettings> configurator)
        {
            return AzureServicebusQueueDelete(configurator(new AzureServicebusQueueDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueDelete(CombinatorialConfigure<AzureServicebusQueueDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueList(AzureServicebusQueueListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusQueueListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusQueueListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueList(Configure<AzureServicebusQueueListSettings> configurator)
        {
            return AzureServicebusQueueList(configurator(new AzureServicebusQueueListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusQueueListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusQueueListSettings.Top"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueList(CombinatorialConfigure<AzureServicebusQueueListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueShow(AzureServicebusQueueShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueShow(Configure<AzureServicebusQueueShowSettings> configurator)
        {
            return AzureServicebusQueueShow(configurator(new AzureServicebusQueueShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueShow(CombinatorialConfigure<AzureServicebusQueueShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueUpdate(AzureServicebusQueueUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusQueueUpdateSettings.Add"/></li>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusQueueUpdateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueUpdateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusQueueUpdateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusQueueUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusQueueUpdateSettings.EnablePartitioning"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableSession"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusQueueUpdateSettings.ForceString"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusQueueUpdateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusQueueUpdateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueUpdateSettings.Ids"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusQueueUpdateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusQueueUpdateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusQueueUpdateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusQueueUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusQueueUpdateSettings.Set"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusQueueUpdateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueUpdate(Configure<AzureServicebusQueueUpdateSettings> configurator)
        {
            return AzureServicebusQueueUpdate(configurator(new AzureServicebusQueueUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusQueueUpdateSettings.Add"/></li>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusQueueUpdateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueUpdateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusQueueUpdateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--duplicate-detection-history-time-window</c> via <see cref="AzureServicebusQueueUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-duplicate-detection</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableDuplicateDetection"/></li>
        ///     <li><c>--enable-express</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableExpress"/></li>
        ///     <li><c>--enable-partitioning</c> via <see cref="AzureServicebusQueueUpdateSettings.EnablePartitioning"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusQueueUpdateSettings.EnableSession"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusQueueUpdateSettings.ForceString"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusQueueUpdateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusQueueUpdateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueUpdateSettings.Ids"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusQueueUpdateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusQueueUpdateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--max-size</c> via <see cref="AzureServicebusQueueUpdateSettings.MaxSize"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusQueueUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusQueueUpdateSettings.Set"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusQueueUpdateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueUpdate(CombinatorialConfigure<AzureServicebusQueueUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceNetworkRuleAdd(AzureServicebusNamespaceNetworkRuleAddSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceNetworkRuleAddSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Help"/></li>
        ///     <li><c>--ignore-missing-endpoint</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IgnoreMissingEndpoint"/></li>
        ///     <li><c>--ip-address</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IpAddress"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.ResourceGroup"/></li>
        ///     <li><c>--subnet</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subnet"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Verbose"/></li>
        ///     <li><c>--vnet-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.VnetName"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceNetworkRuleAdd(Configure<AzureServicebusNamespaceNetworkRuleAddSettings> configurator)
        {
            return AzureServicebusNamespaceNetworkRuleAdd(configurator(new AzureServicebusNamespaceNetworkRuleAddSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Action"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Help"/></li>
        ///     <li><c>--ignore-missing-endpoint</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IgnoreMissingEndpoint"/></li>
        ///     <li><c>--ip-address</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IpAddress"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.ResourceGroup"/></li>
        ///     <li><c>--subnet</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subnet"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Verbose"/></li>
        ///     <li><c>--vnet-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.VnetName"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceNetworkRuleAddSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceNetworkRuleAdd(CombinatorialConfigure<AzureServicebusNamespaceNetworkRuleAddSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceNetworkRuleAdd, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceNetworkRuleList(AzureServicebusNamespaceNetworkRuleListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceNetworkRuleListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceNetworkRuleList(Configure<AzureServicebusNamespaceNetworkRuleListSettings> configurator)
        {
            return AzureServicebusNamespaceNetworkRuleList(configurator(new AzureServicebusNamespaceNetworkRuleListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceNetworkRuleListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceNetworkRuleList(CombinatorialConfigure<AzureServicebusNamespaceNetworkRuleListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceNetworkRuleList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceNetworkRuleRemove(AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceNetworkRuleRemoveSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Help"/></li>
        ///     <li><c>--ip-address</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.IpAddress"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.ResourceGroup"/></li>
        ///     <li><c>--subnet</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subnet"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Verbose"/></li>
        ///     <li><c>--vnet-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.VnetName"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceNetworkRuleRemove(Configure<AzureServicebusNamespaceNetworkRuleRemoveSettings> configurator)
        {
            return AzureServicebusNamespaceNetworkRuleRemove(configurator(new AzureServicebusNamespaceNetworkRuleRemoveSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Help"/></li>
        ///     <li><c>--ip-address</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.IpAddress"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.ResourceGroup"/></li>
        ///     <li><c>--subnet</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subnet"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Verbose"/></li>
        ///     <li><c>--vnet-name</c> via <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.VnetName"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceNetworkRuleRemoveSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceNetworkRuleRemove(CombinatorialConfigure<AzureServicebusNamespaceNetworkRuleRemoveSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceNetworkRuleRemove, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleCreate(AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceAuthorizationRuleCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleCreate(Configure<AzureServicebusNamespaceAuthorizationRuleCreateSettings> configurator)
        {
            return AzureServicebusNamespaceAuthorizationRuleCreate(configurator(new AzureServicebusNamespaceAuthorizationRuleCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceAuthorizationRuleCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceAuthorizationRuleCreate(CombinatorialConfigure<AzureServicebusNamespaceAuthorizationRuleCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceAuthorizationRuleCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleDelete(AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceAuthorizationRuleDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleDelete(Configure<AzureServicebusNamespaceAuthorizationRuleDeleteSettings> configurator)
        {
            return AzureServicebusNamespaceAuthorizationRuleDelete(configurator(new AzureServicebusNamespaceAuthorizationRuleDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceAuthorizationRuleDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceAuthorizationRuleDelete(CombinatorialConfigure<AzureServicebusNamespaceAuthorizationRuleDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceAuthorizationRuleDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleList(AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceAuthorizationRuleListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleList(Configure<AzureServicebusNamespaceAuthorizationRuleListSettings> configurator)
        {
            return AzureServicebusNamespaceAuthorizationRuleList(configurator(new AzureServicebusNamespaceAuthorizationRuleListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceAuthorizationRuleListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceAuthorizationRuleList(CombinatorialConfigure<AzureServicebusNamespaceAuthorizationRuleListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceAuthorizationRuleList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleShow(AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceAuthorizationRuleShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleShow(Configure<AzureServicebusNamespaceAuthorizationRuleShowSettings> configurator)
        {
            return AzureServicebusNamespaceAuthorizationRuleShow(configurator(new AzureServicebusNamespaceAuthorizationRuleShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceAuthorizationRuleShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceAuthorizationRuleShow(CombinatorialConfigure<AzureServicebusNamespaceAuthorizationRuleShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceAuthorizationRuleShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleUpdate(AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceAuthorizationRuleUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Add"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleUpdate(Configure<AzureServicebusNamespaceAuthorizationRuleUpdateSettings> configurator)
        {
            return AzureServicebusNamespaceAuthorizationRuleUpdate(configurator(new AzureServicebusNamespaceAuthorizationRuleUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Add"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceAuthorizationRuleUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceAuthorizationRuleUpdate(CombinatorialConfigure<AzureServicebusNamespaceAuthorizationRuleUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceAuthorizationRuleUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleCreate(AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicAuthorizationRuleCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleCreate(Configure<AzureServicebusTopicAuthorizationRuleCreateSettings> configurator)
        {
            return AzureServicebusTopicAuthorizationRuleCreate(configurator(new AzureServicebusTopicAuthorizationRuleCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicAuthorizationRuleCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicAuthorizationRuleCreate(CombinatorialConfigure<AzureServicebusTopicAuthorizationRuleCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicAuthorizationRuleCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleDelete(AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicAuthorizationRuleDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleDelete(Configure<AzureServicebusTopicAuthorizationRuleDeleteSettings> configurator)
        {
            return AzureServicebusTopicAuthorizationRuleDelete(configurator(new AzureServicebusTopicAuthorizationRuleDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicAuthorizationRuleDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicAuthorizationRuleDelete(CombinatorialConfigure<AzureServicebusTopicAuthorizationRuleDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicAuthorizationRuleDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleList(AzureServicebusTopicAuthorizationRuleListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicAuthorizationRuleListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleList(Configure<AzureServicebusTopicAuthorizationRuleListSettings> configurator)
        {
            return AzureServicebusTopicAuthorizationRuleList(configurator(new AzureServicebusTopicAuthorizationRuleListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicAuthorizationRuleListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicAuthorizationRuleList(CombinatorialConfigure<AzureServicebusTopicAuthorizationRuleListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicAuthorizationRuleList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleShow(AzureServicebusTopicAuthorizationRuleShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicAuthorizationRuleShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleShow(Configure<AzureServicebusTopicAuthorizationRuleShowSettings> configurator)
        {
            return AzureServicebusTopicAuthorizationRuleShow(configurator(new AzureServicebusTopicAuthorizationRuleShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicAuthorizationRuleShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicAuthorizationRuleShow(CombinatorialConfigure<AzureServicebusTopicAuthorizationRuleShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicAuthorizationRuleShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleUpdate(AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicAuthorizationRuleUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Add"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleUpdate(Configure<AzureServicebusTopicAuthorizationRuleUpdateSettings> configurator)
        {
            return AzureServicebusTopicAuthorizationRuleUpdate(configurator(new AzureServicebusTopicAuthorizationRuleUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Add"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicAuthorizationRuleUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicAuthorizationRuleUpdate(CombinatorialConfigure<AzureServicebusTopicAuthorizationRuleUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicAuthorizationRuleUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionCreate(AzureServicebusTopicSubscriptionCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--dead-letter-on-filter-exceptions</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.DeadLetterOnFilterExceptions"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableSession"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Help"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionCreate(Configure<AzureServicebusTopicSubscriptionCreateSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionCreate(configurator(new AzureServicebusTopicSubscriptionCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--dead-letter-on-filter-exceptions</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.DeadLetterOnFilterExceptions"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableSession"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Help"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionCreate(CombinatorialConfigure<AzureServicebusTopicSubscriptionCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionDelete(AzureServicebusTopicSubscriptionDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionDelete(Configure<AzureServicebusTopicSubscriptionDeleteSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionDelete(configurator(new AzureServicebusTopicSubscriptionDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionDelete(CombinatorialConfigure<AzureServicebusTopicSubscriptionDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionList(AzureServicebusTopicSubscriptionListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Top"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionList(Configure<AzureServicebusTopicSubscriptionListSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionList(configurator(new AzureServicebusTopicSubscriptionListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Subscription"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Top"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionList(CombinatorialConfigure<AzureServicebusTopicSubscriptionListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionShow(AzureServicebusTopicSubscriptionShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionShow(Configure<AzureServicebusTopicSubscriptionShowSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionShow(configurator(new AzureServicebusTopicSubscriptionShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionShow(CombinatorialConfigure<AzureServicebusTopicSubscriptionShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionUpdate(AzureServicebusTopicSubscriptionUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Add"/></li>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--dead-letter-on-filter-exceptions</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DeadLetterOnFilterExceptions"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableSession"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForceString"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Set"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionUpdate(Configure<AzureServicebusTopicSubscriptionUpdateSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionUpdate(configurator(new AzureServicebusTopicSubscriptionUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Add"/></li>
        ///     <li><c>--auto-delete-on-idle</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.AutoDeleteOnIdle"/></li>
        ///     <li><c>--dead-letter-on-filter-exceptions</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DeadLetterOnFilterExceptions"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Debug"/></li>
        ///     <li><c>--default-message-time-to-live</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DefaultMessageTimeToLive"/></li>
        ///     <li><c>--enable-batched-operations</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableBatchedOperations"/></li>
        ///     <li><c>--enable-dead-lettering-on-message-expiration</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></li>
        ///     <li><c>--enable-session</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableSession"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForceString"/></li>
        ///     <li><c>--forward-dead-lettered-messages-to</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardDeadLetteredMessagesTo"/></li>
        ///     <li><c>--forward-to</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardTo"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/></li>
        ///     <li><c>--lock-duration</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.LockDuration"/></li>
        ///     <li><c>--max-delivery-count</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.MaxDeliveryCount"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Set"/></li>
        ///     <li><c>--status</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Status"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionUpdate(CombinatorialConfigure<AzureServicebusTopicSubscriptionUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleCreate(AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueAuthorizationRuleCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleCreate(Configure<AzureServicebusQueueAuthorizationRuleCreateSettings> configurator)
        {
            return AzureServicebusQueueAuthorizationRuleCreate(configurator(new AzureServicebusQueueAuthorizationRuleCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueAuthorizationRuleCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueAuthorizationRuleCreate(CombinatorialConfigure<AzureServicebusQueueAuthorizationRuleCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueAuthorizationRuleCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleDelete(AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueAuthorizationRuleDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleDelete(Configure<AzureServicebusQueueAuthorizationRuleDeleteSettings> configurator)
        {
            return AzureServicebusQueueAuthorizationRuleDelete(configurator(new AzureServicebusQueueAuthorizationRuleDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueAuthorizationRuleDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueAuthorizationRuleDelete(CombinatorialConfigure<AzureServicebusQueueAuthorizationRuleDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueAuthorizationRuleDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleList(AzureServicebusQueueAuthorizationRuleListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueAuthorizationRuleListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleList(Configure<AzureServicebusQueueAuthorizationRuleListSettings> configurator)
        {
            return AzureServicebusQueueAuthorizationRuleList(configurator(new AzureServicebusQueueAuthorizationRuleListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueAuthorizationRuleListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueAuthorizationRuleList(CombinatorialConfigure<AzureServicebusQueueAuthorizationRuleListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueAuthorizationRuleList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleShow(AzureServicebusQueueAuthorizationRuleShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueAuthorizationRuleShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleShow(Configure<AzureServicebusQueueAuthorizationRuleShowSettings> configurator)
        {
            return AzureServicebusQueueAuthorizationRuleShow(configurator(new AzureServicebusQueueAuthorizationRuleShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueAuthorizationRuleShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueAuthorizationRuleShow(CombinatorialConfigure<AzureServicebusQueueAuthorizationRuleShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueAuthorizationRuleShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleUpdate(AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueAuthorizationRuleUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Add"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.QueueName"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleUpdate(Configure<AzureServicebusQueueAuthorizationRuleUpdateSettings> configurator)
        {
            return AzureServicebusQueueAuthorizationRuleUpdate(configurator(new AzureServicebusQueueAuthorizationRuleUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--add</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Add"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.QueueName"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--rights</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueAuthorizationRuleUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueAuthorizationRuleUpdate(CombinatorialConfigure<AzureServicebusQueueAuthorizationRuleUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueAuthorizationRuleUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasAuthorizationRuleList(AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasAuthorizationRuleList(Configure<AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasAuthorizationRuleList(configurator(new AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasAuthorizationRuleList(CombinatorialConfigure<AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasAuthorizationRuleList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasAuthorizationRuleShow(AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasAuthorizationRuleShow(Configure<AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasAuthorizationRuleShow(configurator(new AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasAuthorizationRuleShow(CombinatorialConfigure<AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasAuthorizationRuleShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleKeysList(AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceAuthorizationRuleKeysListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleKeysList(Configure<AzureServicebusNamespaceAuthorizationRuleKeysListSettings> configurator)
        {
            return AzureServicebusNamespaceAuthorizationRuleKeysList(configurator(new AzureServicebusNamespaceAuthorizationRuleKeysListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceAuthorizationRuleKeysListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceAuthorizationRuleKeysList(CombinatorialConfigure<AzureServicebusNamespaceAuthorizationRuleKeysListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceAuthorizationRuleKeysList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleKeysRenew(AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/></li>
        ///     <li><c>--key</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Key"/></li>
        ///     <li><c>--key-value</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.KeyValue"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusNamespaceAuthorizationRuleKeysRenew(Configure<AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings> configurator)
        {
            return AzureServicebusNamespaceAuthorizationRuleKeysRenew(configurator(new AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/></li>
        ///     <li><c>--key</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Key"/></li>
        ///     <li><c>--key-value</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.KeyValue"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusNamespaceAuthorizationRuleKeysRenew(CombinatorialConfigure<AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusNamespaceAuthorizationRuleKeysRenew, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleKeysList(AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicAuthorizationRuleKeysListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleKeysList(Configure<AzureServicebusTopicAuthorizationRuleKeysListSettings> configurator)
        {
            return AzureServicebusTopicAuthorizationRuleKeysList(configurator(new AzureServicebusTopicAuthorizationRuleKeysListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicAuthorizationRuleKeysListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicAuthorizationRuleKeysList(CombinatorialConfigure<AzureServicebusTopicAuthorizationRuleKeysListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicAuthorizationRuleKeysList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleKeysRenew(AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicAuthorizationRuleKeysRenewSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/></li>
        ///     <li><c>--key</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Key"/></li>
        ///     <li><c>--key-value</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.KeyValue"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicAuthorizationRuleKeysRenew(Configure<AzureServicebusTopicAuthorizationRuleKeysRenewSettings> configurator)
        {
            return AzureServicebusTopicAuthorizationRuleKeysRenew(configurator(new AzureServicebusTopicAuthorizationRuleKeysRenewSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/></li>
        ///     <li><c>--key</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Key"/></li>
        ///     <li><c>--key-value</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.KeyValue"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Subscription"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicAuthorizationRuleKeysRenewSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicAuthorizationRuleKeysRenew(CombinatorialConfigure<AzureServicebusTopicAuthorizationRuleKeysRenewSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicAuthorizationRuleKeysRenew, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleCreate(AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionRuleCreateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action-compatibility-level</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionCompatibilityLevel"/></li>
        ///     <li><c>--action-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionSqlExpression"/></li>
        ///     <li><c>--content-type</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ContentType"/></li>
        ///     <li><c>--correlation-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.CorrelationId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Debug"/></li>
        ///     <li><c>--enable-action-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableActionPreprocessing"/></li>
        ///     <li><c>--enable-correlation-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableCorrelationPreprocessing"/></li>
        ///     <li><c>--enable-sql-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableSqlPreprocessing"/></li>
        ///     <li><c>--filter-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.FilterSqlExpression"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Help"/></li>
        ///     <li><c>--label</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Label"/></li>
        ///     <li><c>--message-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.MessageId"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Query"/></li>
        ///     <li><c>--reply-to</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyTo"/></li>
        ///     <li><c>--reply-to-session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyToSessionId"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SessionId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SubscriptionName"/></li>
        ///     <li><c>--to</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.To"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleCreate(Configure<AzureServicebusTopicSubscriptionRuleCreateSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionRuleCreate(configurator(new AzureServicebusTopicSubscriptionRuleCreateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action-compatibility-level</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionCompatibilityLevel"/></li>
        ///     <li><c>--action-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionSqlExpression"/></li>
        ///     <li><c>--content-type</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ContentType"/></li>
        ///     <li><c>--correlation-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.CorrelationId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Debug"/></li>
        ///     <li><c>--enable-action-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableActionPreprocessing"/></li>
        ///     <li><c>--enable-correlation-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableCorrelationPreprocessing"/></li>
        ///     <li><c>--enable-sql-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableSqlPreprocessing"/></li>
        ///     <li><c>--filter-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.FilterSqlExpression"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Help"/></li>
        ///     <li><c>--label</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Label"/></li>
        ///     <li><c>--message-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.MessageId"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Query"/></li>
        ///     <li><c>--reply-to</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyTo"/></li>
        ///     <li><c>--reply-to-session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyToSessionId"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ResourceGroup"/></li>
        ///     <li><c>--session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SessionId"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SubscriptionName"/></li>
        ///     <li><c>--to</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.To"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionRuleCreateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionRuleCreate(CombinatorialConfigure<AzureServicebusTopicSubscriptionRuleCreateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionRuleCreate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleDelete(AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionRuleDeleteSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.SubscriptionName"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleDelete(Configure<AzureServicebusTopicSubscriptionRuleDeleteSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionRuleDelete(configurator(new AzureServicebusTopicSubscriptionRuleDeleteSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.SubscriptionName"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionRuleDeleteSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionRuleDelete(CombinatorialConfigure<AzureServicebusTopicSubscriptionRuleDeleteSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionRuleDelete, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleList(AzureServicebusTopicSubscriptionRuleListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionRuleListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.SubscriptionName"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Top"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleList(Configure<AzureServicebusTopicSubscriptionRuleListSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionRuleList(configurator(new AzureServicebusTopicSubscriptionRuleListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Help"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.ResourceGroup"/></li>
        ///     <li><c>--skip</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Skip"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.SubscriptionName"/></li>
        ///     <li><c>--top</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Top"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionRuleListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionRuleList(CombinatorialConfigure<AzureServicebusTopicSubscriptionRuleListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionRuleList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleShow(AzureServicebusTopicSubscriptionRuleShowSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionRuleShowSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.SubscriptionName"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleShow(Configure<AzureServicebusTopicSubscriptionRuleShowSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionRuleShow(configurator(new AzureServicebusTopicSubscriptionRuleShowSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.SubscriptionName"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionRuleShowSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionRuleShow(CombinatorialConfigure<AzureServicebusTopicSubscriptionRuleShowSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionRuleShow, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleUpdate(AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusTopicSubscriptionRuleUpdateSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action-compatibility-level</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionCompatibilityLevel"/></li>
        ///     <li><c>--action-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionSqlExpression"/></li>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Add"/></li>
        ///     <li><c>--content-type</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ContentType"/></li>
        ///     <li><c>--correlation-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.CorrelationId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--enable-action-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableActionPreprocessing"/></li>
        ///     <li><c>--enable-correlation-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableCorrelationPreprocessing"/></li>
        ///     <li><c>--enable-sql-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableSqlPreprocessing"/></li>
        ///     <li><c>--filter-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.FilterSqlExpression"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--label</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Label"/></li>
        ///     <li><c>--message-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.MessageId"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--reply-to</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyTo"/></li>
        ///     <li><c>--reply-to-session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyToSessionId"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SessionId"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SubscriptionName"/></li>
        ///     <li><c>--to</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.To"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusTopicSubscriptionRuleUpdate(Configure<AzureServicebusTopicSubscriptionRuleUpdateSettings> configurator)
        {
            return AzureServicebusTopicSubscriptionRuleUpdate(configurator(new AzureServicebusTopicSubscriptionRuleUpdateSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--action-compatibility-level</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionCompatibilityLevel"/></li>
        ///     <li><c>--action-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionSqlExpression"/></li>
        ///     <li><c>--add</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Add"/></li>
        ///     <li><c>--content-type</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ContentType"/></li>
        ///     <li><c>--correlation-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.CorrelationId"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Debug"/></li>
        ///     <li><c>--enable-action-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableActionPreprocessing"/></li>
        ///     <li><c>--enable-correlation-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableCorrelationPreprocessing"/></li>
        ///     <li><c>--enable-sql-preprocessing</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableSqlPreprocessing"/></li>
        ///     <li><c>--filter-sql-expression</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.FilterSqlExpression"/></li>
        ///     <li><c>--force-string</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ForceString"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/></li>
        ///     <li><c>--label</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Label"/></li>
        ///     <li><c>--message-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.MessageId"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Query"/></li>
        ///     <li><c>--remove</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Remove"/></li>
        ///     <li><c>--reply-to</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyTo"/></li>
        ///     <li><c>--reply-to-session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyToSessionId"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ResourceGroup"/></li>
        ///     <li><c>--session-id</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SessionId"/></li>
        ///     <li><c>--set</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Set"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Subscription"/></li>
        ///     <li><c>--subscription-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SubscriptionName"/></li>
        ///     <li><c>--to</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.To"/></li>
        ///     <li><c>--topic-name</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.TopicName"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusTopicSubscriptionRuleUpdateSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusTopicSubscriptionRuleUpdate(CombinatorialConfigure<AzureServicebusTopicSubscriptionRuleUpdateSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusTopicSubscriptionRuleUpdate, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleKeysList(AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueAuthorizationRuleKeysListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleKeysList(Configure<AzureServicebusQueueAuthorizationRuleKeysListSettings> configurator)
        {
            return AzureServicebusQueueAuthorizationRuleKeysList(configurator(new AzureServicebusQueueAuthorizationRuleKeysListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueAuthorizationRuleKeysListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueAuthorizationRuleKeysList(CombinatorialConfigure<AzureServicebusQueueAuthorizationRuleKeysListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueAuthorizationRuleKeysList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleKeysRenew(AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusQueueAuthorizationRuleKeysRenewSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/></li>
        ///     <li><c>--key</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Key"/></li>
        ///     <li><c>--key-value</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.KeyValue"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusQueueAuthorizationRuleKeysRenew(Configure<AzureServicebusQueueAuthorizationRuleKeysRenewSettings> configurator)
        {
            return AzureServicebusQueueAuthorizationRuleKeysRenew(configurator(new AzureServicebusQueueAuthorizationRuleKeysRenewSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Help"/></li>
        ///     <li><c>--ids</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/></li>
        ///     <li><c>--key</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Key"/></li>
        ///     <li><c>--key-value</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.KeyValue"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Query"/></li>
        ///     <li><c>--queue-name</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.QueueName"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusQueueAuthorizationRuleKeysRenewSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusQueueAuthorizationRuleKeysRenew(CombinatorialConfigure<AzureServicebusQueueAuthorizationRuleKeysRenewSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusQueueAuthorizationRuleKeysRenew, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasAuthorizationRuleKeysList(AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings = null)
        {
            toolSettings = toolSettings ?? new AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings();
            var process = ProcessTasks.StartProcess(toolSettings);
            process.AssertZeroExitCode();
            return process.Output;
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IReadOnlyCollection<Output> AzureServicebusGeorecoveryAliasAuthorizationRuleKeysList(Configure<AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings> configurator)
        {
            return AzureServicebusGeorecoveryAliasAuthorizationRuleKeysList(configurator(new AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings()));
        }
        /// <summary>
        ///   <p>Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias.</p>
        ///   <p>For more details, visit the <a href="https://docs.microsoft.com/en-us/cli/azure/servicebus?view=azure-cli-latest">official website</a>.</p>
        /// </summary>
        /// <remarks>
        ///   <p>This is a <a href="http://www.nuke.build/docs/authoring-builds/cli-tools.html#fluent-apis">CLI wrapper with fluent API</a> that allows to modify the following arguments:</p>
        ///   <ul>
        ///     <li><c>--alias</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Alias"/></li>
        ///     <li><c>--debug</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Debug"/></li>
        ///     <li><c>--help</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Help"/></li>
        ///     <li><c>--name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Name"/></li>
        ///     <li><c>--namespace-name</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.NamespaceName"/></li>
        ///     <li><c>--output</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Output"/></li>
        ///     <li><c>--query</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Query"/></li>
        ///     <li><c>--resource-group</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.ResourceGroup"/></li>
        ///     <li><c>--subscription</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Subscription"/></li>
        ///     <li><c>--verbose</c> via <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Verbose"/></li>
        ///   </ul>
        /// </remarks>
        public static IEnumerable<(AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings Settings, IReadOnlyCollection<Output> Output)> AzureServicebusGeorecoveryAliasAuthorizationRuleKeysList(CombinatorialConfigure<AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false)
        {
            return configurator.Invoke(AzureServicebusGeorecoveryAliasAuthorizationRuleKeysList, AzureServicebusLogger, degreeOfParallelism, completeOnFailure);
        }
    }
    #region AzureServicebusSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus")
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   ISO 8601 timespan or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        public virtual string AutoDeleteOnIdle { get; internal set; }
        /// <summary>
        ///   ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        public virtual string DefaultMessageTimeToLive { get; internal set; }
        /// <summary>
        ///   ISO 8601 timespan or duration time format for structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        public virtual string DuplicateDetectionHistoryTimeWindow { get; internal set; }
        /// <summary>
        ///   Allow server-side batched operations.
        /// </summary>
        public virtual bool? EnableBatchedOperations { get; internal set; }
        /// <summary>
        ///   A boolean value indicating if this topic requires duplicate detection.
        /// </summary>
        public virtual bool? EnableDuplicateDetection { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
        /// </summary>
        public virtual bool? EnableExpress { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the topic supports ordering.
        /// </summary>
        public virtual bool? EnableOrdering { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
        /// </summary>
        public virtual bool? EnablePartitioning { get; internal set; }
        /// <summary>
        ///   Maximum size of topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.
        /// </summary>
        public virtual ServicebusTopicMaxSize MaxSize { get; internal set; }
        /// <summary>
        ///   Enumerates the possible values for the status of a messaging entity.
        /// </summary>
        public virtual ServicebusTopicStatus Status { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic create")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--auto-delete-on-idle {value}", AutoDeleteOnIdle)
              .Add("--default-message-time-to-live {value}", DefaultMessageTimeToLive)
              .Add("--duplicate-detection-history-time-window {value}", DuplicateDetectionHistoryTimeWindow)
              .Add("--enable-batched-operations", EnableBatchedOperations)
              .Add("--enable-duplicate-detection", EnableDuplicateDetection)
              .Add("--enable-express", EnableExpress)
              .Add("--enable-ordering", EnableOrdering)
              .Add("--enable-partitioning", EnablePartitioning)
              .Add("--max-size {value}", MaxSize)
              .Add("--status {value}", Status)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.
        /// </summary>
        public virtual string Skip { get; internal set; }
        /// <summary>
        ///   May be used to limit the number of results to the most recent N usageDetails.
        /// </summary>
        public virtual string Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   ISO 8601 timespan or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        public virtual string AutoDeleteOnIdle { get; internal set; }
        /// <summary>
        ///   ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        public virtual string DefaultMessageTimeToLive { get; internal set; }
        /// <summary>
        ///   ISO 8601 timespan or duration time format for structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        public virtual string DuplicateDetectionHistoryTimeWindow { get; internal set; }
        /// <summary>
        ///   Allow server-side batched operations.
        /// </summary>
        public virtual bool? EnableBatchedOperations { get; internal set; }
        /// <summary>
        ///   A boolean value indicating if this topic requires duplicate detection.
        /// </summary>
        public virtual bool? EnableDuplicateDetection { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
        /// </summary>
        public virtual bool? EnableExpress { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the topic supports ordering.
        /// </summary>
        public virtual bool? EnableOrdering { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
        /// </summary>
        public virtual bool? EnablePartitioning { get; internal set; }
        /// <summary>
        ///   Maximum size of topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.
        /// </summary>
        public virtual ServicebusTopicMaxSize MaxSize { get; internal set; }
        /// <summary>
        ///   Enumerates the possible values for the status of a messaging entity.
        /// </summary>
        public virtual ServicebusTopicStatus Status { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic update")
              .Add("--auto-delete-on-idle {value}", AutoDeleteOnIdle)
              .Add("--default-message-time-to-live {value}", DefaultMessageTimeToLive)
              .Add("--duplicate-detection-history-time-window {value}", DuplicateDetectionHistoryTimeWindow)
              .Add("--enable-batched-operations", EnableBatchedOperations)
              .Add("--enable-duplicate-detection", EnableDuplicateDetection)
              .Add("--enable-express", EnableExpress)
              .Add("--enable-ordering", EnableOrdering)
              .Add("--enable-partitioning", EnablePartitioning)
              .Add("--max-size {value}", MaxSize)
              .Add("--status {value}", Status)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusMigrationAbortSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusMigrationAbortSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Standard Namespace.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus migration abort")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusMigrationCompleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusMigrationCompleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Standard Namespace.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus migration complete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusMigrationShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusMigrationShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Standard Namespace.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus migration show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusMigrationStartSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusMigrationStartSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Post migration name is the name that can be used to connect to standard namespace after migration is complete.
        /// </summary>
        public virtual string PostMigrationName { get; internal set; }
        /// <summary>
        ///   Name (if within the same resource group) or ARM Id of empty Premium Service Bus namespace name that will be target of the migration.
        /// </summary>
        public virtual string TargetNamespace { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Standard Namespace used as source of the migration.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus migration start")
              .Add("--post-migration-name {value}", PostMigrationName)
              .Add("--target-namespace {value}", TargetNamespace)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Number of message units. This property is only applicable to namespaces of Premium SKU.
        /// </summary>
        public virtual ServicebusNamespaceCapacity Capacity { get; internal set; }
        /// <summary>
        ///   Default action for network rule set.
        /// </summary>
        public virtual string DefaultAction { get; internal set; }
        /// <summary>
        ///   Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=&amp;lt;location&amp;gt;`.
        /// </summary>
        public virtual string Location { get; internal set; }
        /// <summary>
        ///   Namespace SKU.
        /// </summary>
        public virtual ServicebusNamespaceSku Sku { get; internal set; }
        /// <summary>
        ///   Space-separated tags in 'key[=value]' format. Use "" to clear existing tags.
        /// </summary>
        public virtual string Tags { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace create")
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--capacity {value}", Capacity)
              .Add("--default-action {value}", DefaultAction)
              .Add("--location {value}", Location)
              .Add("--sku {value}", Sku)
              .Add("--tags {value}", Tags)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceExistsSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceExistsSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Namespace name. Name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace exists")
              .Add("--name {value}", Name)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace list")
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Number of message units. This property is only applicable to namespaces of Premium SKU.
        /// </summary>
        public virtual ServicebusNamespaceCapacity Capacity { get; internal set; }
        /// <summary>
        ///   Default action for network rule set.
        /// </summary>
        public virtual string DefaultAction { get; internal set; }
        /// <summary>
        ///   Namespace SKU.
        /// </summary>
        public virtual ServicebusNamespaceSku Sku { get; internal set; }
        /// <summary>
        ///   Space-separated tags in 'key[=value]' format. Use "" to clear existing tags.
        /// </summary>
        public virtual string Tags { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace update")
              .Add("--capacity {value}", Capacity)
              .Add("--default-action {value}", DefaultAction)
              .Add("--sku {value}", Sku)
              .Add("--tags {value}", Tags)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasBreakPairSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasBreakPairSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias break-pair")
              .Add("--alias {value}", Alias)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias delete")
              .Add("--alias {value}", Alias)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasExistsSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasExistsSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Geo-Disaster Recovery Configuration Alias to check availability.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias exists")
              .Add("--alias {value}", Alias)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasFailOverSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasFailOverSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias fail-over")
              .Add("--alias {value}", Alias)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasSetSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasSetSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name (if within the same resource group) or ARM Id of Primary/Secondary Service Bus  namespace name, which is part of GEO DR pairing.
        /// </summary>
        public virtual string PartnerNamespace { get; internal set; }
        /// <summary>
        ///   Alternate Name (Post failover) for Primary Namespace, when Namespace name and Alias name are same.
        /// </summary>
        public virtual string AlternateName { get; internal set; }
        /// <summary>
        ///   Name of the Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias set")
              .Add("--partner-namespace {value}", PartnerNamespace)
              .Add("--alternate-name {value}", AlternateName)
              .Add("--alias {value}", Alias)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias show")
              .Add("--alias {value}", Alias)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   ISO 8601 timeSpan or duration time format for idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        public virtual string AutoDeleteOnIdle { get; internal set; }
        /// <summary>
        ///   ISO 8601 timespan or duration time format for default message to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        public virtual string DefaultMessageTimeToLive { get; internal set; }
        /// <summary>
        ///   ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        public virtual string DuplicateDetectionHistoryTimeWindow { get; internal set; }
        /// <summary>
        ///   Allow server-side batched operations.
        /// </summary>
        public virtual bool? EnableBatchedOperations { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether this queue has dead letter support when a message expires.
        /// </summary>
        public virtual bool? EnableDeadLetteringOnMessageExpiration { get; internal set; }
        /// <summary>
        ///   A boolean value indicating if this queue requires duplicate detection.
        /// </summary>
        public virtual bool? EnableDuplicateDetection { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
        /// </summary>
        public virtual bool? EnableExpress { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.
        /// </summary>
        public virtual bool? EnablePartitioning { get; internal set; }
        /// <summary>
        ///   A boolean value indicating whether the queue supports the concept of sessions.
        /// </summary>
        public virtual bool? EnableSession { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the Dead Letter message.
        /// </summary>
        public virtual string ForwardDeadLetteredMessagesTo { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the messages.
        /// </summary>
        public virtual string ForwardTo { get; internal set; }
        /// <summary>
        ///   String ISO 8601 timespan or duration format for duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
        /// </summary>
        public virtual string LockDuration { get; internal set; }
        /// <summary>
        ///   The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
        /// </summary>
        public virtual string MaxDeliveryCount { get; internal set; }
        /// <summary>
        ///   Maximum size of queue in megabytes, which is the size of the memory allocated for the queue. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.
        /// </summary>
        public virtual ServicebusTopicMaxSize MaxSize { get; internal set; }
        /// <summary>
        ///   Enumerates the possible values for the status of a messaging entity.
        /// </summary>
        public virtual ServicebusTopicStatus Status { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue create")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--auto-delete-on-idle {value}", AutoDeleteOnIdle)
              .Add("--default-message-time-to-live {value}", DefaultMessageTimeToLive)
              .Add("--duplicate-detection-history-time-window {value}", DuplicateDetectionHistoryTimeWindow)
              .Add("--enable-batched-operations", EnableBatchedOperations)
              .Add("--enable-dead-lettering-on-message-expiration", EnableDeadLetteringOnMessageExpiration)
              .Add("--enable-duplicate-detection", EnableDuplicateDetection)
              .Add("--enable-express", EnableExpress)
              .Add("--enable-partitioning", EnablePartitioning)
              .Add("--enable-session", EnableSession)
              .Add("--forward-dead-lettered-messages-to {value}", ForwardDeadLetteredMessagesTo)
              .Add("--forward-to {value}", ForwardTo)
              .Add("--lock-duration {value}", LockDuration)
              .Add("--max-delivery-count {value}", MaxDeliveryCount)
              .Add("--max-size {value}", MaxSize)
              .Add("--status {value}", Status)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.
        /// </summary>
        public virtual string Skip { get; internal set; }
        /// <summary>
        ///   May be used to limit the number of results to the most recent N usageDetails.
        /// </summary>
        public virtual string Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   ISO 8601 timeSpan or duration time format for idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        public virtual string AutoDeleteOnIdle { get; internal set; }
        /// <summary>
        ///   ISO 8601 timespan or duration time format for default message to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        public virtual string DefaultMessageTimeToLive { get; internal set; }
        /// <summary>
        ///   ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        public virtual string DuplicateDetectionHistoryTimeWindow { get; internal set; }
        /// <summary>
        ///   Allow server-side batched operations.
        /// </summary>
        public virtual bool? EnableBatchedOperations { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether this queue has dead letter support when a message expires.
        /// </summary>
        public virtual bool? EnableDeadLetteringOnMessageExpiration { get; internal set; }
        /// <summary>
        ///   A boolean value indicating if this queue requires duplicate detection.
        /// </summary>
        public virtual bool? EnableDuplicateDetection { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
        /// </summary>
        public virtual bool? EnableExpress { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.
        /// </summary>
        public virtual bool? EnablePartitioning { get; internal set; }
        /// <summary>
        ///   A boolean value indicating whether the queue supports the concept of sessions.
        /// </summary>
        public virtual bool? EnableSession { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the Dead Letter message.
        /// </summary>
        public virtual string ForwardDeadLetteredMessagesTo { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the messages.
        /// </summary>
        public virtual string ForwardTo { get; internal set; }
        /// <summary>
        ///   String ISO 8601 timespan or duration format for duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
        /// </summary>
        public virtual string LockDuration { get; internal set; }
        /// <summary>
        ///   The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
        /// </summary>
        public virtual string MaxDeliveryCount { get; internal set; }
        /// <summary>
        ///   Maximum size of queue in megabytes, which is the size of the memory allocated for the queue. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.
        /// </summary>
        public virtual ServicebusTopicMaxSize MaxSize { get; internal set; }
        /// <summary>
        ///   Enumerates the possible values for the status of a messaging entity.
        /// </summary>
        public virtual ServicebusTopicStatus Status { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue update")
              .Add("--auto-delete-on-idle {value}", AutoDeleteOnIdle)
              .Add("--default-message-time-to-live {value}", DefaultMessageTimeToLive)
              .Add("--duplicate-detection-history-time-window {value}", DuplicateDetectionHistoryTimeWindow)
              .Add("--enable-batched-operations", EnableBatchedOperations)
              .Add("--enable-dead-lettering-on-message-expiration", EnableDeadLetteringOnMessageExpiration)
              .Add("--enable-duplicate-detection", EnableDuplicateDetection)
              .Add("--enable-express", EnableExpress)
              .Add("--enable-partitioning", EnablePartitioning)
              .Add("--enable-session", EnableSession)
              .Add("--forward-dead-lettered-messages-to {value}", ForwardDeadLetteredMessagesTo)
              .Add("--forward-to {value}", ForwardTo)
              .Add("--lock-duration {value}", LockDuration)
              .Add("--max-delivery-count {value}", MaxDeliveryCount)
              .Add("--max-size {value}", MaxSize)
              .Add("--status {value}", Status)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceNetworkRuleAddSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceNetworkRuleAddSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Action of the IP rule.
        /// </summary>
        public virtual ServicebusNamespaceNetworkRuleAddAction Action { get; internal set; }
        /// <summary>
        ///   IPv4 address or CIDR range.
        /// </summary>
        public virtual string IpAddress { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether to ignore missing vnet Service Endpoint.
        /// </summary>
        public virtual bool? IgnoreMissingEndpoint { get; internal set; }
        /// <summary>
        ///   Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied.
        /// </summary>
        public virtual string Subnet { get; internal set; }
        /// <summary>
        ///   Name of the Virtual Network.
        /// </summary>
        public virtual string VnetName { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace network-rule add")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--action {value}", Action)
              .Add("--ip-address {value}", IpAddress)
              .Add("--ignore-missing-endpoint", IgnoreMissingEndpoint)
              .Add("--subnet {value}", Subnet)
              .Add("--vnet-name {value}", VnetName)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceNetworkRuleListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceNetworkRuleListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace network-rule list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceNetworkRuleRemoveSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceNetworkRuleRemoveSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   IPv4 address or CIDR range.
        /// </summary>
        public virtual string IpAddress { get; internal set; }
        /// <summary>
        ///   Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied.
        /// </summary>
        public virtual string Subnet { get; internal set; }
        /// <summary>
        ///   Name of the Virtual Network.
        /// </summary>
        public virtual string VnetName { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace network-rule remove")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--ip-address {value}", IpAddress)
              .Add("--subnet {value}", Subnet)
              .Add("--vnet-name {value}", VnetName)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceAuthorizationRuleCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Space-separated list of Authorization rule rights.
        /// </summary>
        public virtual IReadOnlyList<ServicebusNamespaceAuthorizationRuleRights> Rights => RightsInternal.AsReadOnly();
        internal List<ServicebusNamespaceAuthorizationRuleRights> RightsInternal { get; set; } = new List<ServicebusNamespaceAuthorizationRuleRights>();
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace authorization-rule create")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--rights {value}", Rights, separator: ' ')
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceAuthorizationRuleDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace authorization-rule delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceAuthorizationRuleListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace authorization-rule list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceAuthorizationRuleShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace authorization-rule show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceAuthorizationRuleUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Space-separated list of Authorization rule rights.
        /// </summary>
        public virtual IReadOnlyList<ServicebusNamespaceAuthorizationRuleRights> Rights => RightsInternal.AsReadOnly();
        internal List<ServicebusNamespaceAuthorizationRuleRights> RightsInternal { get; set; } = new List<ServicebusNamespaceAuthorizationRuleRights>();
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace authorization-rule update")
              .Add("--rights {value}", Rights, separator: ' ')
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicAuthorizationRuleCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Topic Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Space-separated list of Authorization rule rights.
        /// </summary>
        public virtual IReadOnlyList<ServicebusNamespaceAuthorizationRuleRights> Rights => RightsInternal.AsReadOnly();
        internal List<ServicebusNamespaceAuthorizationRuleRights> RightsInternal { get; set; } = new List<ServicebusNamespaceAuthorizationRuleRights>();
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic authorization-rule create")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--rights {value}", Rights, separator: ' ')
              .Add("--topic-name {value}", TopicName)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicAuthorizationRuleDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Topic Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic authorization-rule delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--topic-name {value}", TopicName)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicAuthorizationRuleListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic authorization-rule list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--topic-name {value}", TopicName)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicAuthorizationRuleShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Topic Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic authorization-rule show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--topic-name {value}", TopicName)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicAuthorizationRuleUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Space-separated list of Authorization rule rights.
        /// </summary>
        public virtual IReadOnlyList<ServicebusNamespaceAuthorizationRuleRights> Rights => RightsInternal.AsReadOnly();
        internal List<ServicebusNamespaceAuthorizationRuleRights> RightsInternal { get; set; } = new List<ServicebusNamespaceAuthorizationRuleRights>();
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Topic Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic authorization-rule update")
              .Add("--rights {value}", Rights, separator: ' ')
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--topic-name {value}", TopicName)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   ISO 8601 timeSpan  or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        public virtual string AutoDeleteOnIdle { get; internal set; }
        /// <summary>
        ///   Allow dead lettering when filter evaluation exceptions occur.
        /// </summary>
        public virtual bool? DeadLetterOnFilterExceptions { get; internal set; }
        /// <summary>
        ///   ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        public virtual string DefaultMessageTimeToLive { get; internal set; }
        /// <summary>
        ///   Allow server-side batched operations.
        /// </summary>
        public virtual bool? EnableBatchedOperations { get; internal set; }
        /// <summary>
        ///   A boolean Value that indicates whether a subscription has dead letter support when a message expires.
        /// </summary>
        public virtual bool? EnableDeadLetteringOnMessageExpiration { get; internal set; }
        /// <summary>
        ///   A boolean value indicating if a subscription supports the concept of sessions.
        /// </summary>
        public virtual bool? EnableSession { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the Dead Letter message.
        /// </summary>
        public virtual string ForwardDeadLetteredMessagesTo { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the messages.
        /// </summary>
        public virtual string ForwardTo { get; internal set; }
        /// <summary>
        ///   ISO 8601 or duration format (day:minute:seconds) for lock duration timespan for the subscription. The default value is 1 minute.
        /// </summary>
        public virtual string LockDuration { get; internal set; }
        /// <summary>
        ///   Number of maximum deliveries.
        /// </summary>
        public virtual int? MaxDeliveryCount { get; internal set; }
        /// <summary>
        ///   Enumerates the possible values for the status of a messaging entity.
        /// </summary>
        public virtual ServicebusTopicStatus Status { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription create")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--topic-name {value}", TopicName)
              .Add("--auto-delete-on-idle {value}", AutoDeleteOnIdle)
              .Add("--dead-letter-on-filter-exceptions", DeadLetterOnFilterExceptions)
              .Add("--default-message-time-to-live {value}", DefaultMessageTimeToLive)
              .Add("--enable-batched-operations", EnableBatchedOperations)
              .Add("--enable-dead-lettering-on-message-expiration", EnableDeadLetteringOnMessageExpiration)
              .Add("--enable-session", EnableSession)
              .Add("--forward-dead-lettered-messages-to {value}", ForwardDeadLetteredMessagesTo)
              .Add("--forward-to {value}", ForwardTo)
              .Add("--lock-duration {value}", LockDuration)
              .Add("--max-delivery-count {value}", MaxDeliveryCount)
              .Add("--status {value}", Status)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--topic-name {value}", TopicName)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.
        /// </summary>
        public virtual string Skip { get; internal set; }
        /// <summary>
        ///   May be used to limit the number of results to the most recent N usageDetails.
        /// </summary>
        public virtual string Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--topic-name {value}", TopicName)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--topic-name {value}", TopicName)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   ISO 8601 timeSpan  or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        public virtual string AutoDeleteOnIdle { get; internal set; }
        /// <summary>
        ///   Allow dead lettering when filter evaluation exceptions occur.
        /// </summary>
        public virtual bool? DeadLetterOnFilterExceptions { get; internal set; }
        /// <summary>
        ///   ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        public virtual string DefaultMessageTimeToLive { get; internal set; }
        /// <summary>
        ///   Allow server-side batched operations.
        /// </summary>
        public virtual bool? EnableBatchedOperations { get; internal set; }
        /// <summary>
        ///   A boolean Value that indicates whether a subscription has dead letter support when a message expires.
        /// </summary>
        public virtual bool? EnableDeadLetteringOnMessageExpiration { get; internal set; }
        /// <summary>
        ///   A boolean value indicating if a subscription supports the concept of sessions.
        /// </summary>
        public virtual bool? EnableSession { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the Dead Letter message.
        /// </summary>
        public virtual string ForwardDeadLetteredMessagesTo { get; internal set; }
        /// <summary>
        ///   Queue/Topic name to forward the messages.
        /// </summary>
        public virtual string ForwardTo { get; internal set; }
        /// <summary>
        ///   ISO 8601 or duration format (day:minute:seconds) for lock duration timespan for the subscription. The default value is 1 minute.
        /// </summary>
        public virtual string LockDuration { get; internal set; }
        /// <summary>
        ///   Number of maximum deliveries.
        /// </summary>
        public virtual int? MaxDeliveryCount { get; internal set; }
        /// <summary>
        ///   Enumerates the possible values for the status of a messaging entity.
        /// </summary>
        public virtual ServicebusTopicStatus Status { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription update")
              .Add("--auto-delete-on-idle {value}", AutoDeleteOnIdle)
              .Add("--dead-letter-on-filter-exceptions", DeadLetterOnFilterExceptions)
              .Add("--default-message-time-to-live {value}", DefaultMessageTimeToLive)
              .Add("--enable-batched-operations", EnableBatchedOperations)
              .Add("--enable-dead-lettering-on-message-expiration", EnableDeadLetteringOnMessageExpiration)
              .Add("--enable-session", EnableSession)
              .Add("--forward-dead-lettered-messages-to {value}", ForwardDeadLetteredMessagesTo)
              .Add("--forward-to {value}", ForwardTo)
              .Add("--lock-duration {value}", LockDuration)
              .Add("--max-delivery-count {value}", MaxDeliveryCount)
              .Add("--status {value}", Status)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--topic-name {value}", TopicName)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueAuthorizationRuleCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Queue Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Space-separated list of Authorization rule rights.
        /// </summary>
        public virtual IReadOnlyList<ServicebusNamespaceAuthorizationRuleRights> Rights => RightsInternal.AsReadOnly();
        internal List<ServicebusNamespaceAuthorizationRuleRights> RightsInternal { get; set; } = new List<ServicebusNamespaceAuthorizationRuleRights>();
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue authorization-rule create")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--queue-name {value}", QueueName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--rights {value}", Rights, separator: ' ')
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueAuthorizationRuleDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Queue Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue authorization-rule delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--queue-name {value}", QueueName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueAuthorizationRuleListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue authorization-rule list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--queue-name {value}", QueueName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueAuthorizationRuleShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Queue Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue authorization-rule show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--queue-name {value}", QueueName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueAuthorizationRuleUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Space-separated list of Authorization rule rights.
        /// </summary>
        public virtual IReadOnlyList<ServicebusNamespaceAuthorizationRuleRights> Rights => RightsInternal.AsReadOnly();
        internal List<ServicebusNamespaceAuthorizationRuleRights> RightsInternal { get; set; } = new List<ServicebusNamespaceAuthorizationRuleRights>();
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Queue Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue authorization-rule update")
              .Add("--rights {value}", Rights, separator: ' ')
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--queue-name {value}", QueueName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias authorization-rule list")
              .Add("--alias {value}", Alias)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of the Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias authorization-rule show")
              .Add("--alias {value}", Alias)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleKeysListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceAuthorizationRuleKeysListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace authorization-rule keys list")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Specifies Primary or Secondary key needs to be reset.
        /// </summary>
        public virtual ServicebusNamespaceAuthorizationRuleKeysKey Key { get; internal set; }
        /// <summary>
        ///   Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.
        /// </summary>
        public virtual string KeyValue { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Namespace Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus namespace authorization-rule keys renew")
              .Add("--key {value}", Key)
              .Add("--key-value {value}", KeyValue)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleKeysListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicAuthorizationRuleKeysListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Topic Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic authorization-rule keys list")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--topic-name {value}", TopicName)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleKeysRenewSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicAuthorizationRuleKeysRenewSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Specifies Primary or Secondary key needs to be reset.
        /// </summary>
        public virtual ServicebusNamespaceAuthorizationRuleKeysKey Key { get; internal set; }
        /// <summary>
        ///   Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.
        /// </summary>
        public virtual string KeyValue { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Topic Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic authorization-rule keys renew")
              .Add("--key {value}", Key)
              .Add("--key-value {value}", KeyValue)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--topic-name {value}", TopicName)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleCreateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionRuleCreateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string SubscriptionName { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
        /// </summary>
        public virtual string ActionCompatibilityLevel { get; internal set; }
        /// <summary>
        ///   Action SQL expression.
        /// </summary>
        public virtual string ActionSqlExpression { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the rule action requires preprocessing.
        /// </summary>
        public virtual bool? EnableActionPreprocessing { get; internal set; }
        /// <summary>
        ///   Content type of message.
        /// </summary>
        public virtual string ContentType { get; internal set; }
        /// <summary>
        ///   Identifier of correlation.
        /// </summary>
        public virtual string CorrelationId { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the rule action requires preprocessing.
        /// </summary>
        public virtual bool? EnableCorrelationPreprocessing { get; internal set; }
        /// <summary>
        ///   Application specific label.
        /// </summary>
        public virtual string Label { get; internal set; }
        /// <summary>
        ///   Identifier of message.
        /// </summary>
        public virtual string MessageId { get; internal set; }
        /// <summary>
        ///   Address of the queue to reply to.
        /// </summary>
        public virtual string ReplyTo { get; internal set; }
        /// <summary>
        ///   Session identifier to reply to.
        /// </summary>
        public virtual string ReplyToSessionId { get; internal set; }
        /// <summary>
        ///   Session identifier.
        /// </summary>
        public virtual string SessionId { get; internal set; }
        /// <summary>
        ///   Address to send to.
        /// </summary>
        public virtual string To { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the rule action requires preprocessing.
        /// </summary>
        public virtual bool? EnableSqlPreprocessing { get; internal set; }
        /// <summary>
        ///   SQL expression. e.g. myproperty=test.
        /// </summary>
        public virtual string FilterSqlExpression { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription rule create")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription-name {value}", SubscriptionName)
              .Add("--topic-name {value}", TopicName)
              .Add("--action-compatibility-level {value}", ActionCompatibilityLevel)
              .Add("--action-sql-expression {value}", ActionSqlExpression)
              .Add("--enable-action-preprocessing", EnableActionPreprocessing)
              .Add("--content-type {value}", ContentType)
              .Add("--correlation-id {value}", CorrelationId)
              .Add("--enable-correlation-preprocessing", EnableCorrelationPreprocessing)
              .Add("--label {value}", Label)
              .Add("--message-id {value}", MessageId)
              .Add("--reply-to {value}", ReplyTo)
              .Add("--reply-to-session-id {value}", ReplyToSessionId)
              .Add("--session-id {value}", SessionId)
              .Add("--to {value}", To)
              .Add("--enable-sql-preprocessing", EnableSqlPreprocessing)
              .Add("--filter-sql-expression {value}", FilterSqlExpression)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleDeleteSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionRuleDeleteSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string SubscriptionName { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription rule delete")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--subscription-name {value}", SubscriptionName)
              .Add("--topic-name {value}", TopicName)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionRuleListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string SubscriptionName { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.
        /// </summary>
        public virtual string Skip { get; internal set; }
        /// <summary>
        ///   May be used to limit the number of results to the most recent N usageDetails.
        /// </summary>
        public virtual string Top { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription rule list")
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription-name {value}", SubscriptionName)
              .Add("--topic-name {value}", TopicName)
              .Add("--skip {value}", Skip)
              .Add("--top {value}", Top)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleShowSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionRuleShowSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string SubscriptionName { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription rule show")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--subscription-name {value}", SubscriptionName)
              .Add("--topic-name {value}", TopicName)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleUpdateSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusTopicSubscriptionRuleUpdateSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Name of Subscription.
        /// </summary>
        public virtual string SubscriptionName { get; internal set; }
        /// <summary>
        ///   Name of Topic.
        /// </summary>
        public virtual string TopicName { get; internal set; }
        /// <summary>
        ///   This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
        /// </summary>
        public virtual string ActionCompatibilityLevel { get; internal set; }
        /// <summary>
        ///   Action SQL expression.
        /// </summary>
        public virtual string ActionSqlExpression { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the rule action requires preprocessing.
        /// </summary>
        public virtual bool? EnableActionPreprocessing { get; internal set; }
        /// <summary>
        ///   Content type of message.
        /// </summary>
        public virtual string ContentType { get; internal set; }
        /// <summary>
        ///   Identifier of correlation.
        /// </summary>
        public virtual string CorrelationId { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the rule action requires preprocessing.
        /// </summary>
        public virtual bool? EnableCorrelationPreprocessing { get; internal set; }
        /// <summary>
        ///   Application specific label.
        /// </summary>
        public virtual string Label { get; internal set; }
        /// <summary>
        ///   Identifier of message.
        /// </summary>
        public virtual string MessageId { get; internal set; }
        /// <summary>
        ///   Address of the queue to reply to.
        /// </summary>
        public virtual string ReplyTo { get; internal set; }
        /// <summary>
        ///   Session identifier to reply to.
        /// </summary>
        public virtual string ReplyToSessionId { get; internal set; }
        /// <summary>
        ///   Session identifier.
        /// </summary>
        public virtual string SessionId { get; internal set; }
        /// <summary>
        ///   Address to send to.
        /// </summary>
        public virtual string To { get; internal set; }
        /// <summary>
        ///   A boolean value that indicates whether the rule action requires preprocessing.
        /// </summary>
        public virtual bool? EnableSqlPreprocessing { get; internal set; }
        /// <summary>
        ///   SQL expression. e.g. myproperty=test.
        /// </summary>
        public virtual string FilterSqlExpression { get; internal set; }
        /// <summary>
        ///   Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.
        /// </summary>
        public virtual string Add { get; internal set; }
        /// <summary>
        ///   When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
        /// </summary>
        public virtual string ForceString { get; internal set; }
        /// <summary>
        ///   Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.
        /// </summary>
        public virtual string Remove { get; internal set; }
        /// <summary>
        ///   Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.
        /// </summary>
        public virtual string Set { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus topic subscription rule update")
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--subscription-name {value}", SubscriptionName)
              .Add("--topic-name {value}", TopicName)
              .Add("--action-compatibility-level {value}", ActionCompatibilityLevel)
              .Add("--action-sql-expression {value}", ActionSqlExpression)
              .Add("--enable-action-preprocessing", EnableActionPreprocessing)
              .Add("--content-type {value}", ContentType)
              .Add("--correlation-id {value}", CorrelationId)
              .Add("--enable-correlation-preprocessing", EnableCorrelationPreprocessing)
              .Add("--label {value}", Label)
              .Add("--message-id {value}", MessageId)
              .Add("--reply-to {value}", ReplyTo)
              .Add("--reply-to-session-id {value}", ReplyToSessionId)
              .Add("--session-id {value}", SessionId)
              .Add("--to {value}", To)
              .Add("--enable-sql-preprocessing", EnableSqlPreprocessing)
              .Add("--filter-sql-expression {value}", FilterSqlExpression)
              .Add("--add {value}", Add)
              .Add("--force-string {value}", ForceString)
              .Add("--remove {value}", Remove)
              .Add("--set {value}", Set)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleKeysListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueAuthorizationRuleKeysListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Queue Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue authorization-rule keys list")
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--queue-name {value}", QueueName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleKeysRenewSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusQueueAuthorizationRuleKeysRenewSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Specifies Primary or Secondary key needs to be reset.
        /// </summary>
        public virtual ServicebusNamespaceAuthorizationRuleKeysKey Key { get; internal set; }
        /// <summary>
        ///   Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.
        /// </summary>
        public virtual string KeyValue { get; internal set; }
        /// <summary>
        ///   One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.
        /// </summary>
        public virtual IReadOnlyList<string> Ids => IdsInternal.AsReadOnly();
        internal List<string> IdsInternal { get; set; } = new List<string>();
        /// <summary>
        ///   Name of Queue Authorization Rule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of Queue.
        /// </summary>
        public virtual string QueueName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus queue authorization-rule keys renew")
              .Add("--key {value}", Key)
              .Add("--key-value {value}", KeyValue)
              .Add("--ids {value}", Ids, separator: ' ')
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--queue-name {value}", QueueName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    [Serializable]
    public partial class AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings : ToolSettings
    {
        /// <summary>
        ///   Path to the AzureServicebus executable.
        /// </summary>
        public override string ToolPath => base.ToolPath ?? AzureServicebusTasks.AzureServicebusPath;
        public override Action<OutputType, string> CustomLogger => AzureServicebusTasks.AzureServicebusLogger;
        /// <summary>
        ///   Name of Geo-Disaster Recovery Configuration Alias.
        /// </summary>
        public virtual string Alias { get; internal set; }
        /// <summary>
        ///   Name of Namespace AuthorizationRule.
        /// </summary>
        public virtual string Name { get; internal set; }
        /// <summary>
        ///   Name of Namespace.
        /// </summary>
        public virtual string NamespaceName { get; internal set; }
        /// <summary>
        ///   Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.
        /// </summary>
        public virtual string ResourceGroup { get; internal set; }
        /// <summary>
        ///   Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
        /// </summary>
        public virtual string Subscription { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity to show all debug logs.
        /// </summary>
        public virtual string Debug { get; internal set; }
        /// <summary>
        ///   Show this help message and exit.
        /// </summary>
        public virtual string Help { get; internal set; }
        /// <summary>
        ///   Output format.
        /// </summary>
        public virtual AzureOutput Output { get; internal set; }
        /// <summary>
        ///   JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
        /// </summary>
        public virtual string Query { get; internal set; }
        /// <summary>
        ///   Increase logging verbosity. Use --debug for full debug logs.
        /// </summary>
        public virtual string Verbose { get; internal set; }
        protected override Arguments ConfigureArguments(Arguments arguments)
        {
            arguments
              .Add("servicebus georecovery-alias authorization-rule keys list")
              .Add("--alias {value}", Alias)
              .Add("--name {value}", Name)
              .Add("--namespace-name {value}", NamespaceName)
              .Add("--resource-group {value}", ResourceGroup)
              .Add("--subscription {value}", Subscription)
              .Add("--debug {value}", Debug)
              .Add("--help {value}", Help)
              .Add("--output {value}", Output)
              .Add("--query {value}", Query)
              .Add("--verbose {value}", Verbose);
            return base.ConfigureArguments(arguments);
        }
    }
    #endregion
    #region AzureServicebusSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusSettingsExtensions
    {
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings SetDebug(this AzureServicebusSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings ResetDebug(this AzureServicebusSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings SetHelp(this AzureServicebusSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings ResetHelp(this AzureServicebusSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings SetOutput(this AzureServicebusSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings ResetOutput(this AzureServicebusSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings SetQuery(this AzureServicebusSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings ResetQuery(this AzureServicebusSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings SetVerbose(this AzureServicebusSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusSettings ResetVerbose(this AzureServicebusSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetName(this AzureServicebusTopicCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetName(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetNamespaceName(this AzureServicebusTopicCreateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetNamespaceName(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetResourceGroup(this AzureServicebusTopicCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetResourceGroup(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region AutoDeleteOnIdle
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetAutoDeleteOnIdle(this AzureServicebusTopicCreateSettings toolSettings, string autoDeleteOnIdle)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = autoDeleteOnIdle;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetAutoDeleteOnIdle(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = null;
            return toolSettings;
        }
        #endregion
        #region DefaultMessageTimeToLive
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetDefaultMessageTimeToLive(this AzureServicebusTopicCreateSettings toolSettings, string defaultMessageTimeToLive)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = defaultMessageTimeToLive;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetDefaultMessageTimeToLive(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = null;
            return toolSettings;
        }
        #endregion
        #region DuplicateDetectionHistoryTimeWindow
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetDuplicateDetectionHistoryTimeWindow(this AzureServicebusTopicCreateSettings toolSettings, string duplicateDetectionHistoryTimeWindow)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetDuplicateDetectionHistoryTimeWindow(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = null;
            return toolSettings;
        }
        #endregion
        #region EnableBatchedOperations
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetEnableBatchedOperations(this AzureServicebusTopicCreateSettings toolSettings, bool? enableBatchedOperations)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = enableBatchedOperations;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetEnableBatchedOperations(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings EnableEnableBatchedOperations(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings DisableEnableBatchedOperations(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ToggleEnableBatchedOperations(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = !toolSettings.EnableBatchedOperations;
            return toolSettings;
        }
        #endregion
        #region EnableDuplicateDetection
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetEnableDuplicateDetection(this AzureServicebusTopicCreateSettings toolSettings, bool? enableDuplicateDetection)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = enableDuplicateDetection;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetEnableDuplicateDetection(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings EnableEnableDuplicateDetection(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings DisableEnableDuplicateDetection(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ToggleEnableDuplicateDetection(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = !toolSettings.EnableDuplicateDetection;
            return toolSettings;
        }
        #endregion
        #region EnableExpress
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetEnableExpress(this AzureServicebusTopicCreateSettings toolSettings, bool? enableExpress)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = enableExpress;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetEnableExpress(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings EnableEnableExpress(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings DisableEnableExpress(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ToggleEnableExpress(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = !toolSettings.EnableExpress;
            return toolSettings;
        }
        #endregion
        #region EnableOrdering
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetEnableOrdering(this AzureServicebusTopicCreateSettings toolSettings, bool? enableOrdering)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = enableOrdering;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetEnableOrdering(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicCreateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings EnableEnableOrdering(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicCreateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings DisableEnableOrdering(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicCreateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ToggleEnableOrdering(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = !toolSettings.EnableOrdering;
            return toolSettings;
        }
        #endregion
        #region EnablePartitioning
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetEnablePartitioning(this AzureServicebusTopicCreateSettings toolSettings, bool? enablePartitioning)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = enablePartitioning;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetEnablePartitioning(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings EnableEnablePartitioning(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings DisableEnablePartitioning(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ToggleEnablePartitioning(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = !toolSettings.EnablePartitioning;
            return toolSettings;
        }
        #endregion
        #region MaxSize
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetMaxSize(this AzureServicebusTopicCreateSettings toolSettings, ServicebusTopicMaxSize maxSize)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = maxSize;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetMaxSize(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetStatus(this AzureServicebusTopicCreateSettings toolSettings, ServicebusTopicStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetStatus(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetSubscription(this AzureServicebusTopicCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetSubscription(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetDebug(this AzureServicebusTopicCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetDebug(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetHelp(this AzureServicebusTopicCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetHelp(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetOutput(this AzureServicebusTopicCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetOutput(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetQuery(this AzureServicebusTopicCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetQuery(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings SetVerbose(this AzureServicebusTopicCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicCreateSettings ResetVerbose(this AzureServicebusTopicCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetIds(this AzureServicebusTopicDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetIds(this AzureServicebusTopicDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings AddIds(this AzureServicebusTopicDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings AddIds(this AzureServicebusTopicDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ClearIds(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings RemoveIds(this AzureServicebusTopicDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings RemoveIds(this AzureServicebusTopicDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetName(this AzureServicebusTopicDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetName(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetNamespaceName(this AzureServicebusTopicDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetNamespaceName(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetResourceGroup(this AzureServicebusTopicDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetResourceGroup(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetSubscription(this AzureServicebusTopicDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetSubscription(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetDebug(this AzureServicebusTopicDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetDebug(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetHelp(this AzureServicebusTopicDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetHelp(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetOutput(this AzureServicebusTopicDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetOutput(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetQuery(this AzureServicebusTopicDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetQuery(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings SetVerbose(this AzureServicebusTopicDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicDeleteSettings ResetVerbose(this AzureServicebusTopicDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetNamespaceName(this AzureServicebusTopicListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetNamespaceName(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetResourceGroup(this AzureServicebusTopicListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetResourceGroup(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetSkip(this AzureServicebusTopicListSettings toolSettings, string skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetSkip(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetTop(this AzureServicebusTopicListSettings toolSettings, string top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetTop(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetSubscription(this AzureServicebusTopicListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetSubscription(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetDebug(this AzureServicebusTopicListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetDebug(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetHelp(this AzureServicebusTopicListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetHelp(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetOutput(this AzureServicebusTopicListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetOutput(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetQuery(this AzureServicebusTopicListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetQuery(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings SetVerbose(this AzureServicebusTopicListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicListSettings ResetVerbose(this AzureServicebusTopicListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetIds(this AzureServicebusTopicShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetIds(this AzureServicebusTopicShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings AddIds(this AzureServicebusTopicShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings AddIds(this AzureServicebusTopicShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ClearIds(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings RemoveIds(this AzureServicebusTopicShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings RemoveIds(this AzureServicebusTopicShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetName(this AzureServicebusTopicShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetName(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetNamespaceName(this AzureServicebusTopicShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetNamespaceName(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetResourceGroup(this AzureServicebusTopicShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetResourceGroup(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetSubscription(this AzureServicebusTopicShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetSubscription(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetDebug(this AzureServicebusTopicShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetDebug(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetHelp(this AzureServicebusTopicShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetHelp(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetOutput(this AzureServicebusTopicShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetOutput(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetQuery(this AzureServicebusTopicShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetQuery(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings SetVerbose(this AzureServicebusTopicShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicShowSettings ResetVerbose(this AzureServicebusTopicShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicUpdateSettingsExtensions
    {
        #region AutoDeleteOnIdle
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetAutoDeleteOnIdle(this AzureServicebusTopicUpdateSettings toolSettings, string autoDeleteOnIdle)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = autoDeleteOnIdle;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetAutoDeleteOnIdle(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = null;
            return toolSettings;
        }
        #endregion
        #region DefaultMessageTimeToLive
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetDefaultMessageTimeToLive(this AzureServicebusTopicUpdateSettings toolSettings, string defaultMessageTimeToLive)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = defaultMessageTimeToLive;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetDefaultMessageTimeToLive(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = null;
            return toolSettings;
        }
        #endregion
        #region DuplicateDetectionHistoryTimeWindow
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetDuplicateDetectionHistoryTimeWindow(this AzureServicebusTopicUpdateSettings toolSettings, string duplicateDetectionHistoryTimeWindow)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetDuplicateDetectionHistoryTimeWindow(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = null;
            return toolSettings;
        }
        #endregion
        #region EnableBatchedOperations
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetEnableBatchedOperations(this AzureServicebusTopicUpdateSettings toolSettings, bool? enableBatchedOperations)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = enableBatchedOperations;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetEnableBatchedOperations(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings EnableEnableBatchedOperations(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings DisableEnableBatchedOperations(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ToggleEnableBatchedOperations(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = !toolSettings.EnableBatchedOperations;
            return toolSettings;
        }
        #endregion
        #region EnableDuplicateDetection
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetEnableDuplicateDetection(this AzureServicebusTopicUpdateSettings toolSettings, bool? enableDuplicateDetection)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = enableDuplicateDetection;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetEnableDuplicateDetection(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings EnableEnableDuplicateDetection(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings DisableEnableDuplicateDetection(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this topic requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ToggleEnableDuplicateDetection(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = !toolSettings.EnableDuplicateDetection;
            return toolSettings;
        }
        #endregion
        #region EnableExpress
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetEnableExpress(this AzureServicebusTopicUpdateSettings toolSettings, bool? enableExpress)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = enableExpress;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetEnableExpress(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings EnableEnableExpress(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings DisableEnableExpress(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ToggleEnableExpress(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = !toolSettings.EnableExpress;
            return toolSettings;
        }
        #endregion
        #region EnableOrdering
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetEnableOrdering(this AzureServicebusTopicUpdateSettings toolSettings, bool? enableOrdering)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = enableOrdering;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetEnableOrdering(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicUpdateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings EnableEnableOrdering(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicUpdateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings DisableEnableOrdering(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicUpdateSettings.EnableOrdering"/></em></p>
        ///   <p>A boolean value that indicates whether the topic supports ordering.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ToggleEnableOrdering(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableOrdering = !toolSettings.EnableOrdering;
            return toolSettings;
        }
        #endregion
        #region EnablePartitioning
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetEnablePartitioning(this AzureServicebusTopicUpdateSettings toolSettings, bool? enablePartitioning)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = enablePartitioning;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetEnablePartitioning(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings EnableEnablePartitioning(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings DisableEnablePartitioning(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the topic to be partitioned across multiple message brokers is enabled.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ToggleEnablePartitioning(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = !toolSettings.EnablePartitioning;
            return toolSettings;
        }
        #endregion
        #region MaxSize
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetMaxSize(this AzureServicebusTopicUpdateSettings toolSettings, ServicebusTopicMaxSize maxSize)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = maxSize;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetMaxSize(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetStatus(this AzureServicebusTopicUpdateSettings toolSettings, ServicebusTopicStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetStatus(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetIds(this AzureServicebusTopicUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetIds(this AzureServicebusTopicUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings AddIds(this AzureServicebusTopicUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings AddIds(this AzureServicebusTopicUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ClearIds(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings RemoveIds(this AzureServicebusTopicUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings RemoveIds(this AzureServicebusTopicUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetName(this AzureServicebusTopicUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Name"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetName(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetNamespaceName(this AzureServicebusTopicUpdateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetNamespaceName(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetResourceGroup(this AzureServicebusTopicUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetResourceGroup(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetSubscription(this AzureServicebusTopicUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetSubscription(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetAdd(this AzureServicebusTopicUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetAdd(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetForceString(this AzureServicebusTopicUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetForceString(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetRemove(this AzureServicebusTopicUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetRemove(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetSet(this AzureServicebusTopicUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetSet(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetDebug(this AzureServicebusTopicUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetDebug(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetHelp(this AzureServicebusTopicUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetHelp(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetOutput(this AzureServicebusTopicUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetOutput(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetQuery(this AzureServicebusTopicUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetQuery(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings SetVerbose(this AzureServicebusTopicUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicUpdateSettings ResetVerbose(this AzureServicebusTopicUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusMigrationAbortSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusMigrationAbortSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetIds(this AzureServicebusMigrationAbortSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetIds(this AzureServicebusMigrationAbortSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationAbortSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings AddIds(this AzureServicebusMigrationAbortSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationAbortSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings AddIds(this AzureServicebusMigrationAbortSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusMigrationAbortSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ClearIds(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationAbortSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings RemoveIds(this AzureServicebusMigrationAbortSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationAbortSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings RemoveIds(this AzureServicebusMigrationAbortSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetName(this AzureServicebusMigrationAbortSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetName(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetResourceGroup(this AzureServicebusMigrationAbortSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetResourceGroup(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetSubscription(this AzureServicebusMigrationAbortSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetSubscription(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetDebug(this AzureServicebusMigrationAbortSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetDebug(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetHelp(this AzureServicebusMigrationAbortSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetHelp(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetOutput(this AzureServicebusMigrationAbortSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetOutput(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetQuery(this AzureServicebusMigrationAbortSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetQuery(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationAbortSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings SetVerbose(this AzureServicebusMigrationAbortSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationAbortSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationAbortSettings ResetVerbose(this AzureServicebusMigrationAbortSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusMigrationCompleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusMigrationCompleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetIds(this AzureServicebusMigrationCompleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetIds(this AzureServicebusMigrationCompleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationCompleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings AddIds(this AzureServicebusMigrationCompleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationCompleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings AddIds(this AzureServicebusMigrationCompleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusMigrationCompleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ClearIds(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationCompleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings RemoveIds(this AzureServicebusMigrationCompleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationCompleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings RemoveIds(this AzureServicebusMigrationCompleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetName(this AzureServicebusMigrationCompleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetName(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetResourceGroup(this AzureServicebusMigrationCompleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetResourceGroup(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetSubscription(this AzureServicebusMigrationCompleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetSubscription(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetDebug(this AzureServicebusMigrationCompleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetDebug(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetHelp(this AzureServicebusMigrationCompleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetHelp(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetOutput(this AzureServicebusMigrationCompleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetOutput(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetQuery(this AzureServicebusMigrationCompleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetQuery(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationCompleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings SetVerbose(this AzureServicebusMigrationCompleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationCompleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationCompleteSettings ResetVerbose(this AzureServicebusMigrationCompleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusMigrationShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusMigrationShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetIds(this AzureServicebusMigrationShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetIds(this AzureServicebusMigrationShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings AddIds(this AzureServicebusMigrationShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings AddIds(this AzureServicebusMigrationShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusMigrationShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ClearIds(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings RemoveIds(this AzureServicebusMigrationShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings RemoveIds(this AzureServicebusMigrationShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetName(this AzureServicebusMigrationShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetName(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetResourceGroup(this AzureServicebusMigrationShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetResourceGroup(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetSubscription(this AzureServicebusMigrationShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetSubscription(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetDebug(this AzureServicebusMigrationShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetDebug(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetHelp(this AzureServicebusMigrationShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetHelp(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetOutput(this AzureServicebusMigrationShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetOutput(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetQuery(this AzureServicebusMigrationShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetQuery(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings SetVerbose(this AzureServicebusMigrationShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationShowSettings ResetVerbose(this AzureServicebusMigrationShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusMigrationStartSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusMigrationStartSettingsExtensions
    {
        #region PostMigrationName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.PostMigrationName"/></em></p>
        ///   <p>Post migration name is the name that can be used to connect to standard namespace after migration is complete.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetPostMigrationName(this AzureServicebusMigrationStartSettings toolSettings, string postMigrationName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PostMigrationName = postMigrationName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.PostMigrationName"/></em></p>
        ///   <p>Post migration name is the name that can be used to connect to standard namespace after migration is complete.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetPostMigrationName(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PostMigrationName = null;
            return toolSettings;
        }
        #endregion
        #region TargetNamespace
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.TargetNamespace"/></em></p>
        ///   <p>Name (if within the same resource group) or ARM Id of empty Premium Service Bus namespace name that will be target of the migration.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetTargetNamespace(this AzureServicebusMigrationStartSettings toolSettings, string targetNamespace)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TargetNamespace = targetNamespace;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.TargetNamespace"/></em></p>
        ///   <p>Name (if within the same resource group) or ARM Id of empty Premium Service Bus namespace name that will be target of the migration.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetTargetNamespace(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TargetNamespace = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetIds(this AzureServicebusMigrationStartSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetIds(this AzureServicebusMigrationStartSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationStartSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings AddIds(this AzureServicebusMigrationStartSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusMigrationStartSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings AddIds(this AzureServicebusMigrationStartSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusMigrationStartSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ClearIds(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationStartSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings RemoveIds(this AzureServicebusMigrationStartSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusMigrationStartSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings RemoveIds(this AzureServicebusMigrationStartSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace used as source of the migration.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetName(this AzureServicebusMigrationStartSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.Name"/></em></p>
        ///   <p>Name of Standard Namespace used as source of the migration.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetName(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetResourceGroup(this AzureServicebusMigrationStartSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetResourceGroup(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetSubscription(this AzureServicebusMigrationStartSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetSubscription(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetDebug(this AzureServicebusMigrationStartSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetDebug(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetHelp(this AzureServicebusMigrationStartSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetHelp(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetOutput(this AzureServicebusMigrationStartSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetOutput(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetQuery(this AzureServicebusMigrationStartSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetQuery(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusMigrationStartSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings SetVerbose(this AzureServicebusMigrationStartSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusMigrationStartSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusMigrationStartSettings ResetVerbose(this AzureServicebusMigrationStartSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetName(this AzureServicebusNamespaceCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetName(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetResourceGroup(this AzureServicebusNamespaceCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetResourceGroup(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Capacity
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Capacity"/></em></p>
        ///   <p>Number of message units. This property is only applicable to namespaces of Premium SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetCapacity(this AzureServicebusNamespaceCreateSettings toolSettings, ServicebusNamespaceCapacity capacity)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Capacity = capacity;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Capacity"/></em></p>
        ///   <p>Number of message units. This property is only applicable to namespaces of Premium SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetCapacity(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Capacity = null;
            return toolSettings;
        }
        #endregion
        #region DefaultAction
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.DefaultAction"/></em></p>
        ///   <p>Default action for network rule set.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetDefaultAction(this AzureServicebusNamespaceCreateSettings toolSettings, string defaultAction)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultAction = defaultAction;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.DefaultAction"/></em></p>
        ///   <p>Default action for network rule set.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetDefaultAction(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultAction = null;
            return toolSettings;
        }
        #endregion
        #region Location
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Location"/></em></p>
        ///   <p>Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=&amp;lt;location&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetLocation(this AzureServicebusNamespaceCreateSettings toolSettings, string location)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Location = location;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Location"/></em></p>
        ///   <p>Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=&amp;lt;location&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetLocation(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Location = null;
            return toolSettings;
        }
        #endregion
        #region Sku
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Sku"/></em></p>
        ///   <p>Namespace SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetSku(this AzureServicebusNamespaceCreateSettings toolSettings, ServicebusNamespaceSku sku)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Sku = sku;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Sku"/></em></p>
        ///   <p>Namespace SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetSku(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Sku = null;
            return toolSettings;
        }
        #endregion
        #region Tags
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Tags"/></em></p>
        ///   <p>Space-separated tags in 'key[=value]' format. Use "" to clear existing tags.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetTags(this AzureServicebusNamespaceCreateSettings toolSettings, string tags)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = tags;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Tags"/></em></p>
        ///   <p>Space-separated tags in 'key[=value]' format. Use "" to clear existing tags.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetTags(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetSubscription(this AzureServicebusNamespaceCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetSubscription(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetDebug(this AzureServicebusNamespaceCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetDebug(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetHelp(this AzureServicebusNamespaceCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetHelp(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetOutput(this AzureServicebusNamespaceCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetOutput(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetQuery(this AzureServicebusNamespaceCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetQuery(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings SetVerbose(this AzureServicebusNamespaceCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceCreateSettings ResetVerbose(this AzureServicebusNamespaceCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetIds(this AzureServicebusNamespaceDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetIds(this AzureServicebusNamespaceDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings AddIds(this AzureServicebusNamespaceDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings AddIds(this AzureServicebusNamespaceDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ClearIds(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings RemoveIds(this AzureServicebusNamespaceDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings RemoveIds(this AzureServicebusNamespaceDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetName(this AzureServicebusNamespaceDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetName(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetResourceGroup(this AzureServicebusNamespaceDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetResourceGroup(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetSubscription(this AzureServicebusNamespaceDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetSubscription(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetDebug(this AzureServicebusNamespaceDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetDebug(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetHelp(this AzureServicebusNamespaceDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetHelp(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetOutput(this AzureServicebusNamespaceDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetOutput(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetQuery(this AzureServicebusNamespaceDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetQuery(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings SetVerbose(this AzureServicebusNamespaceDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceDeleteSettings ResetVerbose(this AzureServicebusNamespaceDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceExistsSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceExistsSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceExistsSettings.Name"/></em></p>
        ///   <p>Namespace name. Name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings SetName(this AzureServicebusNamespaceExistsSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceExistsSettings.Name"/></em></p>
        ///   <p>Namespace name. Name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings ResetName(this AzureServicebusNamespaceExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceExistsSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings SetSubscription(this AzureServicebusNamespaceExistsSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceExistsSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings ResetSubscription(this AzureServicebusNamespaceExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceExistsSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings SetDebug(this AzureServicebusNamespaceExistsSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceExistsSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings ResetDebug(this AzureServicebusNamespaceExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceExistsSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings SetHelp(this AzureServicebusNamespaceExistsSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceExistsSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings ResetHelp(this AzureServicebusNamespaceExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceExistsSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings SetOutput(this AzureServicebusNamespaceExistsSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceExistsSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings ResetOutput(this AzureServicebusNamespaceExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceExistsSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings SetQuery(this AzureServicebusNamespaceExistsSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceExistsSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings ResetQuery(this AzureServicebusNamespaceExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceExistsSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings SetVerbose(this AzureServicebusNamespaceExistsSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceExistsSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceExistsSettings ResetVerbose(this AzureServicebusNamespaceExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceListSettingsExtensions
    {
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings SetResourceGroup(this AzureServicebusNamespaceListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings ResetResourceGroup(this AzureServicebusNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings SetSubscription(this AzureServicebusNamespaceListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings ResetSubscription(this AzureServicebusNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings SetDebug(this AzureServicebusNamespaceListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings ResetDebug(this AzureServicebusNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings SetHelp(this AzureServicebusNamespaceListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings ResetHelp(this AzureServicebusNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings SetOutput(this AzureServicebusNamespaceListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings ResetOutput(this AzureServicebusNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings SetQuery(this AzureServicebusNamespaceListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings ResetQuery(this AzureServicebusNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings SetVerbose(this AzureServicebusNamespaceListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceListSettings ResetVerbose(this AzureServicebusNamespaceListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetIds(this AzureServicebusNamespaceShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetIds(this AzureServicebusNamespaceShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings AddIds(this AzureServicebusNamespaceShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings AddIds(this AzureServicebusNamespaceShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ClearIds(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings RemoveIds(this AzureServicebusNamespaceShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings RemoveIds(this AzureServicebusNamespaceShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetName(this AzureServicebusNamespaceShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetName(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetResourceGroup(this AzureServicebusNamespaceShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetResourceGroup(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetSubscription(this AzureServicebusNamespaceShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetSubscription(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetDebug(this AzureServicebusNamespaceShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetDebug(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetHelp(this AzureServicebusNamespaceShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetHelp(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetOutput(this AzureServicebusNamespaceShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetOutput(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetQuery(this AzureServicebusNamespaceShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetQuery(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings SetVerbose(this AzureServicebusNamespaceShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceShowSettings ResetVerbose(this AzureServicebusNamespaceShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceUpdateSettingsExtensions
    {
        #region Capacity
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Capacity"/></em></p>
        ///   <p>Number of message units. This property is only applicable to namespaces of Premium SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetCapacity(this AzureServicebusNamespaceUpdateSettings toolSettings, ServicebusNamespaceCapacity capacity)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Capacity = capacity;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Capacity"/></em></p>
        ///   <p>Number of message units. This property is only applicable to namespaces of Premium SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetCapacity(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Capacity = null;
            return toolSettings;
        }
        #endregion
        #region DefaultAction
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.DefaultAction"/></em></p>
        ///   <p>Default action for network rule set.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetDefaultAction(this AzureServicebusNamespaceUpdateSettings toolSettings, string defaultAction)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultAction = defaultAction;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.DefaultAction"/></em></p>
        ///   <p>Default action for network rule set.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetDefaultAction(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultAction = null;
            return toolSettings;
        }
        #endregion
        #region Sku
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Sku"/></em></p>
        ///   <p>Namespace SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetSku(this AzureServicebusNamespaceUpdateSettings toolSettings, ServicebusNamespaceSku sku)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Sku = sku;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Sku"/></em></p>
        ///   <p>Namespace SKU.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetSku(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Sku = null;
            return toolSettings;
        }
        #endregion
        #region Tags
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Tags"/></em></p>
        ///   <p>Space-separated tags in 'key[=value]' format. Use "" to clear existing tags.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetTags(this AzureServicebusNamespaceUpdateSettings toolSettings, string tags)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = tags;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Tags"/></em></p>
        ///   <p>Space-separated tags in 'key[=value]' format. Use "" to clear existing tags.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetTags(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Tags = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetIds(this AzureServicebusNamespaceUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetIds(this AzureServicebusNamespaceUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings AddIds(this AzureServicebusNamespaceUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings AddIds(this AzureServicebusNamespaceUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ClearIds(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings RemoveIds(this AzureServicebusNamespaceUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings RemoveIds(this AzureServicebusNamespaceUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetName(this AzureServicebusNamespaceUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Name"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetName(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetResourceGroup(this AzureServicebusNamespaceUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetResourceGroup(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetSubscription(this AzureServicebusNamespaceUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetSubscription(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetAdd(this AzureServicebusNamespaceUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetAdd(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetForceString(this AzureServicebusNamespaceUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetForceString(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetRemove(this AzureServicebusNamespaceUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetRemove(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetSet(this AzureServicebusNamespaceUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetSet(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetDebug(this AzureServicebusNamespaceUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetDebug(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetHelp(this AzureServicebusNamespaceUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetHelp(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetOutput(this AzureServicebusNamespaceUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetOutput(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetQuery(this AzureServicebusNamespaceUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetQuery(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings SetVerbose(this AzureServicebusNamespaceUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceUpdateSettings ResetVerbose(this AzureServicebusNamespaceUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasBreakPairSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasBreakPairSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetAlias(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetAlias(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetIds(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetIds(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings AddIds(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings AddIds(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ClearIds(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings RemoveIds(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings RemoveIds(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetSubscription(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetSubscription(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetDebug(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetDebug(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetHelp(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetHelp(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetOutput(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetOutput(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetQuery(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetQuery(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings SetVerbose(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasBreakPairSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasBreakPairSettings ResetVerbose(this AzureServicebusGeorecoveryAliasBreakPairSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasDeleteSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetAlias(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetAlias(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetIds(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetIds(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings AddIds(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings AddIds(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ClearIds(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings RemoveIds(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings RemoveIds(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetSubscription(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetSubscription(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetDebug(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetDebug(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetHelp(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetHelp(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetOutput(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetOutput(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetQuery(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetQuery(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings SetVerbose(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasDeleteSettings ResetVerbose(this AzureServicebusGeorecoveryAliasDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasExistsSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasExistsSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Alias"/></em></p>
        ///   <p>Name of Geo-Disaster Recovery Configuration Alias to check availability.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetAlias(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Alias"/></em></p>
        ///   <p>Name of Geo-Disaster Recovery Configuration Alias to check availability.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetAlias(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetSubscription(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetSubscription(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetDebug(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetDebug(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetHelp(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetHelp(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetOutput(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetOutput(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetQuery(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetQuery(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings SetVerbose(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasExistsSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasExistsSettings ResetVerbose(this AzureServicebusGeorecoveryAliasExistsSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasFailOverSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasFailOverSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetAlias(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetAlias(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetIds(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetIds(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings AddIds(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings AddIds(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ClearIds(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings RemoveIds(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings RemoveIds(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetSubscription(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetSubscription(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetDebug(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetDebug(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetHelp(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetHelp(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetOutput(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetOutput(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetQuery(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetQuery(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings SetVerbose(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasFailOverSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasFailOverSettings ResetVerbose(this AzureServicebusGeorecoveryAliasFailOverSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetSubscription(this AzureServicebusGeorecoveryAliasListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetSubscription(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetDebug(this AzureServicebusGeorecoveryAliasListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetDebug(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetHelp(this AzureServicebusGeorecoveryAliasListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetHelp(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetOutput(this AzureServicebusGeorecoveryAliasListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetOutput(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetQuery(this AzureServicebusGeorecoveryAliasListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetQuery(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings SetVerbose(this AzureServicebusGeorecoveryAliasListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasListSettings ResetVerbose(this AzureServicebusGeorecoveryAliasListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasSetSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasSetSettingsExtensions
    {
        #region PartnerNamespace
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.PartnerNamespace"/></em></p>
        ///   <p>Name (if within the same resource group) or ARM Id of Primary/Secondary Service Bus  namespace name, which is part of GEO DR pairing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetPartnerNamespace(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string partnerNamespace)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PartnerNamespace = partnerNamespace;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.PartnerNamespace"/></em></p>
        ///   <p>Name (if within the same resource group) or ARM Id of Primary/Secondary Service Bus  namespace name, which is part of GEO DR pairing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetPartnerNamespace(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.PartnerNamespace = null;
            return toolSettings;
        }
        #endregion
        #region AlternateName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.AlternateName"/></em></p>
        ///   <p>Alternate Name (Post failover) for Primary Namespace, when Namespace name and Alias name are same.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetAlternateName(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string alternateName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AlternateName = alternateName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.AlternateName"/></em></p>
        ///   <p>Alternate Name (Post failover) for Primary Namespace, when Namespace name and Alias name are same.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetAlternateName(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AlternateName = null;
            return toolSettings;
        }
        #endregion
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetAlias(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetAlias(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetIds(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetIds(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings AddIds(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings AddIds(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ClearIds(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings RemoveIds(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasSetSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings RemoveIds(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetSubscription(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetSubscription(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetDebug(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetDebug(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetHelp(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetHelp(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetOutput(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetOutput(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetQuery(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetQuery(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings SetVerbose(this AzureServicebusGeorecoveryAliasSetSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasSetSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasSetSettings ResetVerbose(this AzureServicebusGeorecoveryAliasSetSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasShowSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetAlias(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetAlias(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetIds(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetIds(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings AddIds(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings AddIds(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ClearIds(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings RemoveIds(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings RemoveIds(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetSubscription(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetSubscription(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetDebug(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetDebug(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetHelp(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetHelp(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetOutput(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetOutput(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetQuery(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetQuery(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings SetVerbose(this AzureServicebusGeorecoveryAliasShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasShowSettings ResetVerbose(this AzureServicebusGeorecoveryAliasShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetName(this AzureServicebusQueueCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetName(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetNamespaceName(this AzureServicebusQueueCreateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetNamespaceName(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetResourceGroup(this AzureServicebusQueueCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetResourceGroup(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region AutoDeleteOnIdle
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan or duration time format for idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetAutoDeleteOnIdle(this AzureServicebusQueueCreateSettings toolSettings, string autoDeleteOnIdle)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = autoDeleteOnIdle;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan or duration time format for idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetAutoDeleteOnIdle(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = null;
            return toolSettings;
        }
        #endregion
        #region DefaultMessageTimeToLive
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for default message to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetDefaultMessageTimeToLive(this AzureServicebusQueueCreateSettings toolSettings, string defaultMessageTimeToLive)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = defaultMessageTimeToLive;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for default message to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetDefaultMessageTimeToLive(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = null;
            return toolSettings;
        }
        #endregion
        #region DuplicateDetectionHistoryTimeWindow
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetDuplicateDetectionHistoryTimeWindow(this AzureServicebusQueueCreateSettings toolSettings, string duplicateDetectionHistoryTimeWindow)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetDuplicateDetectionHistoryTimeWindow(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = null;
            return toolSettings;
        }
        #endregion
        #region EnableBatchedOperations
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetEnableBatchedOperations(this AzureServicebusQueueCreateSettings toolSettings, bool? enableBatchedOperations)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = enableBatchedOperations;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetEnableBatchedOperations(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings EnableEnableBatchedOperations(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings DisableEnableBatchedOperations(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ToggleEnableBatchedOperations(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = !toolSettings.EnableBatchedOperations;
            return toolSettings;
        }
        #endregion
        #region EnableDeadLetteringOnMessageExpiration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueCreateSettings toolSettings, bool? enableDeadLetteringOnMessageExpiration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = enableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings EnableEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings DisableEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ToggleEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = !toolSettings.EnableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        #endregion
        #region EnableDuplicateDetection
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetEnableDuplicateDetection(this AzureServicebusQueueCreateSettings toolSettings, bool? enableDuplicateDetection)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = enableDuplicateDetection;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetEnableDuplicateDetection(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings EnableEnableDuplicateDetection(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings DisableEnableDuplicateDetection(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueCreateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ToggleEnableDuplicateDetection(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = !toolSettings.EnableDuplicateDetection;
            return toolSettings;
        }
        #endregion
        #region EnableExpress
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetEnableExpress(this AzureServicebusQueueCreateSettings toolSettings, bool? enableExpress)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = enableExpress;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetEnableExpress(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings EnableEnableExpress(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings DisableEnableExpress(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueCreateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ToggleEnableExpress(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = !toolSettings.EnableExpress;
            return toolSettings;
        }
        #endregion
        #region EnablePartitioning
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetEnablePartitioning(this AzureServicebusQueueCreateSettings toolSettings, bool? enablePartitioning)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = enablePartitioning;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetEnablePartitioning(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings EnableEnablePartitioning(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings DisableEnablePartitioning(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueCreateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ToggleEnablePartitioning(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = !toolSettings.EnablePartitioning;
            return toolSettings;
        }
        #endregion
        #region EnableSession
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetEnableSession(this AzureServicebusQueueCreateSettings toolSettings, bool? enableSession)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = enableSession;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetEnableSession(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings EnableEnableSession(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings DisableEnableSession(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ToggleEnableSession(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = !toolSettings.EnableSession;
            return toolSettings;
        }
        #endregion
        #region ForwardDeadLetteredMessagesTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetForwardDeadLetteredMessagesTo(this AzureServicebusQueueCreateSettings toolSettings, string forwardDeadLetteredMessagesTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = forwardDeadLetteredMessagesTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetForwardDeadLetteredMessagesTo(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = null;
            return toolSettings;
        }
        #endregion
        #region ForwardTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetForwardTo(this AzureServicebusQueueCreateSettings toolSettings, string forwardTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = forwardTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetForwardTo(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = null;
            return toolSettings;
        }
        #endregion
        #region LockDuration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.LockDuration"/></em></p>
        ///   <p>String ISO 8601 timespan or duration format for duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetLockDuration(this AzureServicebusQueueCreateSettings toolSettings, string lockDuration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = lockDuration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.LockDuration"/></em></p>
        ///   <p>String ISO 8601 timespan or duration format for duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetLockDuration(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = null;
            return toolSettings;
        }
        #endregion
        #region MaxDeliveryCount
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetMaxDeliveryCount(this AzureServicebusQueueCreateSettings toolSettings, string maxDeliveryCount)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = maxDeliveryCount;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetMaxDeliveryCount(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = null;
            return toolSettings;
        }
        #endregion
        #region MaxSize
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of queue in megabytes, which is the size of the memory allocated for the queue. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetMaxSize(this AzureServicebusQueueCreateSettings toolSettings, ServicebusTopicMaxSize maxSize)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = maxSize;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of queue in megabytes, which is the size of the memory allocated for the queue. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetMaxSize(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetStatus(this AzureServicebusQueueCreateSettings toolSettings, ServicebusTopicStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetStatus(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetSubscription(this AzureServicebusQueueCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetSubscription(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetDebug(this AzureServicebusQueueCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetDebug(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetHelp(this AzureServicebusQueueCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetHelp(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetOutput(this AzureServicebusQueueCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetOutput(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetQuery(this AzureServicebusQueueCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetQuery(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings SetVerbose(this AzureServicebusQueueCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueCreateSettings ResetVerbose(this AzureServicebusQueueCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetIds(this AzureServicebusQueueDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetIds(this AzureServicebusQueueDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings AddIds(this AzureServicebusQueueDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings AddIds(this AzureServicebusQueueDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ClearIds(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings RemoveIds(this AzureServicebusQueueDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings RemoveIds(this AzureServicebusQueueDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetName(this AzureServicebusQueueDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetName(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetNamespaceName(this AzureServicebusQueueDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetNamespaceName(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetResourceGroup(this AzureServicebusQueueDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetResourceGroup(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetSubscription(this AzureServicebusQueueDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetSubscription(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetDebug(this AzureServicebusQueueDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetDebug(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetHelp(this AzureServicebusQueueDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetHelp(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetOutput(this AzureServicebusQueueDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetOutput(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetQuery(this AzureServicebusQueueDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetQuery(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings SetVerbose(this AzureServicebusQueueDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueDeleteSettings ResetVerbose(this AzureServicebusQueueDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetNamespaceName(this AzureServicebusQueueListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetNamespaceName(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetResourceGroup(this AzureServicebusQueueListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetResourceGroup(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetSkip(this AzureServicebusQueueListSettings toolSettings, string skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetSkip(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetTop(this AzureServicebusQueueListSettings toolSettings, string top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetTop(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetSubscription(this AzureServicebusQueueListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetSubscription(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetDebug(this AzureServicebusQueueListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetDebug(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetHelp(this AzureServicebusQueueListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetHelp(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetOutput(this AzureServicebusQueueListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetOutput(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetQuery(this AzureServicebusQueueListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetQuery(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings SetVerbose(this AzureServicebusQueueListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueListSettings ResetVerbose(this AzureServicebusQueueListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetIds(this AzureServicebusQueueShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetIds(this AzureServicebusQueueShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings AddIds(this AzureServicebusQueueShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings AddIds(this AzureServicebusQueueShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ClearIds(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings RemoveIds(this AzureServicebusQueueShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings RemoveIds(this AzureServicebusQueueShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetName(this AzureServicebusQueueShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetName(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetNamespaceName(this AzureServicebusQueueShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetNamespaceName(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetResourceGroup(this AzureServicebusQueueShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetResourceGroup(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetSubscription(this AzureServicebusQueueShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetSubscription(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetDebug(this AzureServicebusQueueShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetDebug(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetHelp(this AzureServicebusQueueShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetHelp(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetOutput(this AzureServicebusQueueShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetOutput(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetQuery(this AzureServicebusQueueShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetQuery(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings SetVerbose(this AzureServicebusQueueShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueShowSettings ResetVerbose(this AzureServicebusQueueShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueUpdateSettingsExtensions
    {
        #region AutoDeleteOnIdle
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan or duration time format for idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetAutoDeleteOnIdle(this AzureServicebusQueueUpdateSettings toolSettings, string autoDeleteOnIdle)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = autoDeleteOnIdle;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan or duration time format for idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetAutoDeleteOnIdle(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = null;
            return toolSettings;
        }
        #endregion
        #region DefaultMessageTimeToLive
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for default message to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetDefaultMessageTimeToLive(this AzureServicebusQueueUpdateSettings toolSettings, string defaultMessageTimeToLive)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = defaultMessageTimeToLive;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 timespan or duration time format for default message to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetDefaultMessageTimeToLive(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = null;
            return toolSettings;
        }
        #endregion
        #region DuplicateDetectionHistoryTimeWindow
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetDuplicateDetectionHistoryTimeWindow(this AzureServicebusQueueUpdateSettings toolSettings, string duplicateDetectionHistoryTimeWindow)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.DuplicateDetectionHistoryTimeWindow"/></em></p>
        ///   <p>ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetDuplicateDetectionHistoryTimeWindow(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DuplicateDetectionHistoryTimeWindow = null;
            return toolSettings;
        }
        #endregion
        #region EnableBatchedOperations
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetEnableBatchedOperations(this AzureServicebusQueueUpdateSettings toolSettings, bool? enableBatchedOperations)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = enableBatchedOperations;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetEnableBatchedOperations(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings EnableEnableBatchedOperations(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings DisableEnableBatchedOperations(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ToggleEnableBatchedOperations(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = !toolSettings.EnableBatchedOperations;
            return toolSettings;
        }
        #endregion
        #region EnableDeadLetteringOnMessageExpiration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueUpdateSettings toolSettings, bool? enableDeadLetteringOnMessageExpiration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = enableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings EnableEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings DisableEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean value that indicates whether this queue has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ToggleEnableDeadLetteringOnMessageExpiration(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = !toolSettings.EnableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        #endregion
        #region EnableDuplicateDetection
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetEnableDuplicateDetection(this AzureServicebusQueueUpdateSettings toolSettings, bool? enableDuplicateDetection)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = enableDuplicateDetection;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetEnableDuplicateDetection(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings EnableEnableDuplicateDetection(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings DisableEnableDuplicateDetection(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueUpdateSettings.EnableDuplicateDetection"/></em></p>
        ///   <p>A boolean value indicating if this queue requires duplicate detection.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ToggleEnableDuplicateDetection(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDuplicateDetection = !toolSettings.EnableDuplicateDetection;
            return toolSettings;
        }
        #endregion
        #region EnableExpress
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetEnableExpress(this AzureServicebusQueueUpdateSettings toolSettings, bool? enableExpress)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = enableExpress;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetEnableExpress(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings EnableEnableExpress(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings DisableEnableExpress(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueUpdateSettings.EnableExpress"/></em></p>
        ///   <p>A boolean value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ToggleEnableExpress(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableExpress = !toolSettings.EnableExpress;
            return toolSettings;
        }
        #endregion
        #region EnablePartitioning
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetEnablePartitioning(this AzureServicebusQueueUpdateSettings toolSettings, bool? enablePartitioning)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = enablePartitioning;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetEnablePartitioning(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings EnableEnablePartitioning(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings DisableEnablePartitioning(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueUpdateSettings.EnablePartitioning"/></em></p>
        ///   <p>A boolean value that indicates whether the queue is to be partitioned across multiple message brokers.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ToggleEnablePartitioning(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnablePartitioning = !toolSettings.EnablePartitioning;
            return toolSettings;
        }
        #endregion
        #region EnableSession
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetEnableSession(this AzureServicebusQueueUpdateSettings toolSettings, bool? enableSession)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = enableSession;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetEnableSession(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusQueueUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings EnableEnableSession(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusQueueUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings DisableEnableSession(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusQueueUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating whether the queue supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ToggleEnableSession(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = !toolSettings.EnableSession;
            return toolSettings;
        }
        #endregion
        #region ForwardDeadLetteredMessagesTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetForwardDeadLetteredMessagesTo(this AzureServicebusQueueUpdateSettings toolSettings, string forwardDeadLetteredMessagesTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = forwardDeadLetteredMessagesTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetForwardDeadLetteredMessagesTo(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = null;
            return toolSettings;
        }
        #endregion
        #region ForwardTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetForwardTo(this AzureServicebusQueueUpdateSettings toolSettings, string forwardTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = forwardTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetForwardTo(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = null;
            return toolSettings;
        }
        #endregion
        #region LockDuration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.LockDuration"/></em></p>
        ///   <p>String ISO 8601 timespan or duration format for duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetLockDuration(this AzureServicebusQueueUpdateSettings toolSettings, string lockDuration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = lockDuration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.LockDuration"/></em></p>
        ///   <p>String ISO 8601 timespan or duration format for duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetLockDuration(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = null;
            return toolSettings;
        }
        #endregion
        #region MaxDeliveryCount
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetMaxDeliveryCount(this AzureServicebusQueueUpdateSettings toolSettings, string maxDeliveryCount)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = maxDeliveryCount;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetMaxDeliveryCount(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = null;
            return toolSettings;
        }
        #endregion
        #region MaxSize
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of queue in megabytes, which is the size of the memory allocated for the queue. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetMaxSize(this AzureServicebusQueueUpdateSettings toolSettings, ServicebusTopicMaxSize maxSize)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = maxSize;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.MaxSize"/></em></p>
        ///   <p>Maximum size of queue in megabytes, which is the size of the memory allocated for the queue. Default is 1024. Max for Standard SKU is 5120 and for Premium SKU is 81920.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetMaxSize(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxSize = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetStatus(this AzureServicebusQueueUpdateSettings toolSettings, ServicebusTopicStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetStatus(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetIds(this AzureServicebusQueueUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetIds(this AzureServicebusQueueUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings AddIds(this AzureServicebusQueueUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings AddIds(this AzureServicebusQueueUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ClearIds(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings RemoveIds(this AzureServicebusQueueUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings RemoveIds(this AzureServicebusQueueUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetName(this AzureServicebusQueueUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Name"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetName(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetNamespaceName(this AzureServicebusQueueUpdateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetNamespaceName(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetResourceGroup(this AzureServicebusQueueUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetResourceGroup(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetSubscription(this AzureServicebusQueueUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetSubscription(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetAdd(this AzureServicebusQueueUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetAdd(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetForceString(this AzureServicebusQueueUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetForceString(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetRemove(this AzureServicebusQueueUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetRemove(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetSet(this AzureServicebusQueueUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetSet(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetDebug(this AzureServicebusQueueUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetDebug(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetHelp(this AzureServicebusQueueUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetHelp(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetOutput(this AzureServicebusQueueUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetOutput(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetQuery(this AzureServicebusQueueUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetQuery(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings SetVerbose(this AzureServicebusQueueUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueUpdateSettings ResetVerbose(this AzureServicebusQueueUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceNetworkRuleAddSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceNetworkRuleAddSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetNamespaceName(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetNamespaceName(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetResourceGroup(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetResourceGroup(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Action
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Action"/></em></p>
        ///   <p>Action of the IP rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetAction(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, ServicebusNamespaceNetworkRuleAddAction action)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = action;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Action"/></em></p>
        ///   <p>Action of the IP rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetAction(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Action = null;
            return toolSettings;
        }
        #endregion
        #region IpAddress
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IpAddress"/></em></p>
        ///   <p>IPv4 address or CIDR range.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetIpAddress(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string ipAddress)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IpAddress = ipAddress;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IpAddress"/></em></p>
        ///   <p>IPv4 address or CIDR range.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetIpAddress(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IpAddress = null;
            return toolSettings;
        }
        #endregion
        #region IgnoreMissingEndpoint
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IgnoreMissingEndpoint"/></em></p>
        ///   <p>A boolean value that indicates whether to ignore missing vnet Service Endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetIgnoreMissingEndpoint(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, bool? ignoreMissingEndpoint)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IgnoreMissingEndpoint = ignoreMissingEndpoint;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IgnoreMissingEndpoint"/></em></p>
        ///   <p>A boolean value that indicates whether to ignore missing vnet Service Endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetIgnoreMissingEndpoint(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IgnoreMissingEndpoint = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IgnoreMissingEndpoint"/></em></p>
        ///   <p>A boolean value that indicates whether to ignore missing vnet Service Endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings EnableIgnoreMissingEndpoint(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IgnoreMissingEndpoint = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IgnoreMissingEndpoint"/></em></p>
        ///   <p>A boolean value that indicates whether to ignore missing vnet Service Endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings DisableIgnoreMissingEndpoint(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IgnoreMissingEndpoint = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.IgnoreMissingEndpoint"/></em></p>
        ///   <p>A boolean value that indicates whether to ignore missing vnet Service Endpoint.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ToggleIgnoreMissingEndpoint(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IgnoreMissingEndpoint = !toolSettings.IgnoreMissingEndpoint;
            return toolSettings;
        }
        #endregion
        #region Subnet
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subnet"/></em></p>
        ///   <p>Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetSubnet(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string subnet)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subnet = subnet;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subnet"/></em></p>
        ///   <p>Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetSubnet(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subnet = null;
            return toolSettings;
        }
        #endregion
        #region VnetName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.VnetName"/></em></p>
        ///   <p>Name of the Virtual Network.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetVnetName(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string vnetName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VnetName = vnetName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.VnetName"/></em></p>
        ///   <p>Name of the Virtual Network.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetVnetName(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VnetName = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetSubscription(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetSubscription(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetDebug(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetDebug(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetHelp(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetHelp(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetOutput(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetOutput(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetQuery(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetQuery(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings SetVerbose(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleAddSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleAddSettings ResetVerbose(this AzureServicebusNamespaceNetworkRuleAddSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceNetworkRuleListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceNetworkRuleListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetNamespaceName(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetNamespaceName(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetResourceGroup(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetResourceGroup(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetSubscription(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetSubscription(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetDebug(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetDebug(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetHelp(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetHelp(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetOutput(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetOutput(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetQuery(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetQuery(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings SetVerbose(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleListSettings ResetVerbose(this AzureServicebusNamespaceNetworkRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceNetworkRuleRemoveSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceNetworkRuleRemoveSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetNamespaceName(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetNamespaceName(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetResourceGroup(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetResourceGroup(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region IpAddress
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.IpAddress"/></em></p>
        ///   <p>IPv4 address or CIDR range.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetIpAddress(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string ipAddress)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IpAddress = ipAddress;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.IpAddress"/></em></p>
        ///   <p>IPv4 address or CIDR range.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetIpAddress(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IpAddress = null;
            return toolSettings;
        }
        #endregion
        #region Subnet
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subnet"/></em></p>
        ///   <p>Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetSubnet(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string subnet)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subnet = subnet;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subnet"/></em></p>
        ///   <p>Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetSubnet(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subnet = null;
            return toolSettings;
        }
        #endregion
        #region VnetName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.VnetName"/></em></p>
        ///   <p>Name of the Virtual Network.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetVnetName(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string vnetName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VnetName = vnetName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.VnetName"/></em></p>
        ///   <p>Name of the Virtual Network.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetVnetName(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.VnetName = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetSubscription(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetSubscription(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetDebug(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetDebug(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetHelp(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetHelp(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetOutput(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetOutput(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetQuery(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetQuery(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings SetVerbose(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceNetworkRuleRemoveSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceNetworkRuleRemoveSettings ResetVerbose(this AzureServicebusNamespaceNetworkRuleRemoveSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceAuthorizationRuleCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetName(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetName(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Rights
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetRights(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetRights(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings AddRights(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings AddRights(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ClearRights(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings RemoveRights(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings RemoveRights(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetSubscription(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetSubscription(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetDebug(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetDebug(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetHelp(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetHelp(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetOutput(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetOutput(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetQuery(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetQuery(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings SetVerbose(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleCreateSettings ResetVerbose(this AzureServicebusNamespaceAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceAuthorizationRuleDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ClearIds(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetName(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetName(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetSubscription(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetSubscription(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetDebug(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetDebug(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetHelp(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetHelp(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetOutput(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetOutput(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetQuery(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetQuery(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings SetVerbose(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleDeleteSettings ResetVerbose(this AzureServicebusNamespaceAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceAuthorizationRuleListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of the Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetSubscription(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetSubscription(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetDebug(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetDebug(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetHelp(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetHelp(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetOutput(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetOutput(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetQuery(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetQuery(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings SetVerbose(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleListSettings ResetVerbose(this AzureServicebusNamespaceAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceAuthorizationRuleShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ClearIds(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetName(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetName(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetSubscription(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetSubscription(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetDebug(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetDebug(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetHelp(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetHelp(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetOutput(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetOutput(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetQuery(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetQuery(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings SetVerbose(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleShowSettings ResetVerbose(this AzureServicebusNamespaceAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceAuthorizationRuleUpdateSettingsExtensions
    {
        #region Rights
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetRights(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetRights(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings AddRights(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings AddRights(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ClearRights(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings RemoveRights(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings RemoveRights(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ClearIds(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetName(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetName(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetSubscription(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetSubscription(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetAdd(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetAdd(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetForceString(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetForceString(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetRemove(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetRemove(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetSet(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetSet(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetDebug(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetDebug(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetHelp(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetHelp(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetOutput(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetOutput(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetQuery(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetQuery(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings SetVerbose(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleUpdateSettings ResetVerbose(this AzureServicebusNamespaceAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicAuthorizationRuleCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetName(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetName(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetNamespaceName(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetNamespaceName(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetResourceGroup(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetResourceGroup(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Rights
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetRights(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetRights(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings AddRights(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings AddRights(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ClearRights(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings RemoveRights(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings RemoveRights(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetTopicName(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetTopicName(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetSubscription(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetSubscription(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetDebug(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetDebug(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetHelp(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetHelp(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetOutput(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetOutput(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetQuery(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetQuery(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings SetVerbose(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleCreateSettings ResetVerbose(this AzureServicebusTopicAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicAuthorizationRuleDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetIds(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetIds(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings AddIds(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings AddIds(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ClearIds(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetName(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetName(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetNamespaceName(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetNamespaceName(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetResourceGroup(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetResourceGroup(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetSubscription(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetSubscription(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetTopicName(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetTopicName(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetDebug(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetDebug(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetHelp(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetHelp(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetOutput(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetOutput(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetQuery(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetQuery(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings SetVerbose(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleDeleteSettings ResetVerbose(this AzureServicebusTopicAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicAuthorizationRuleListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetNamespaceName(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetNamespaceName(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetResourceGroup(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetResourceGroup(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetTopicName(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetTopicName(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetSubscription(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetSubscription(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetDebug(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetDebug(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetHelp(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetHelp(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetOutput(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetOutput(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetQuery(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetQuery(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings SetVerbose(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleListSettings ResetVerbose(this AzureServicebusTopicAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicAuthorizationRuleShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetIds(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetIds(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings AddIds(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings AddIds(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ClearIds(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetName(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetName(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetNamespaceName(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetNamespaceName(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetResourceGroup(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetResourceGroup(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetSubscription(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetSubscription(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetTopicName(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetTopicName(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetDebug(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetDebug(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetHelp(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetHelp(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetOutput(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetOutput(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetQuery(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetQuery(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings SetVerbose(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleShowSettings ResetVerbose(this AzureServicebusTopicAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicAuthorizationRuleUpdateSettingsExtensions
    {
        #region Rights
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetRights(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetRights(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings AddRights(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings AddRights(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ClearRights(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings RemoveRights(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings RemoveRights(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetIds(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetIds(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings AddIds(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings AddIds(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ClearIds(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetName(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetName(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetNamespaceName(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetNamespaceName(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetResourceGroup(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetResourceGroup(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetSubscription(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetSubscription(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetTopicName(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetTopicName(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetAdd(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetAdd(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetForceString(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetForceString(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetRemove(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetRemove(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetSet(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetSet(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetDebug(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetDebug(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetHelp(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetHelp(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetOutput(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetOutput(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetQuery(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetQuery(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings SetVerbose(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleUpdateSettings ResetVerbose(this AzureServicebusTopicAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetName(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetName(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetNamespaceName(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetResourceGroup(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetTopicName(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetTopicName(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region AutoDeleteOnIdle
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan  or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetAutoDeleteOnIdle(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string autoDeleteOnIdle)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = autoDeleteOnIdle;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan  or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetAutoDeleteOnIdle(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = null;
            return toolSettings;
        }
        #endregion
        #region DeadLetterOnFilterExceptions
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, bool? deadLetterOnFilterExceptions)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = deadLetterOnFilterExceptions;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionCreateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings EnableDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionCreateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings DisableDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionCreateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ToggleDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = !toolSettings.DeadLetterOnFilterExceptions;
            return toolSettings;
        }
        #endregion
        #region DefaultMessageTimeToLive
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetDefaultMessageTimeToLive(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string defaultMessageTimeToLive)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = defaultMessageTimeToLive;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetDefaultMessageTimeToLive(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = null;
            return toolSettings;
        }
        #endregion
        #region EnableBatchedOperations
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetEnableBatchedOperations(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, bool? enableBatchedOperations)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = enableBatchedOperations;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetEnableBatchedOperations(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings EnableEnableBatchedOperations(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings DisableEnableBatchedOperations(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ToggleEnableBatchedOperations(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = !toolSettings.EnableBatchedOperations;
            return toolSettings;
        }
        #endregion
        #region EnableDeadLetteringOnMessageExpiration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, bool? enableDeadLetteringOnMessageExpiration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = enableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings EnableEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings DisableEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ToggleEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = !toolSettings.EnableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        #endregion
        #region EnableSession
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetEnableSession(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, bool? enableSession)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = enableSession;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetEnableSession(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings EnableEnableSession(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings DisableEnableSession(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionCreateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ToggleEnableSession(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = !toolSettings.EnableSession;
            return toolSettings;
        }
        #endregion
        #region ForwardDeadLetteredMessagesTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetForwardDeadLetteredMessagesTo(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string forwardDeadLetteredMessagesTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = forwardDeadLetteredMessagesTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetForwardDeadLetteredMessagesTo(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = null;
            return toolSettings;
        }
        #endregion
        #region ForwardTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetForwardTo(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string forwardTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = forwardTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetForwardTo(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = null;
            return toolSettings;
        }
        #endregion
        #region LockDuration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.LockDuration"/></em></p>
        ///   <p>ISO 8601 or duration format (day:minute:seconds) for lock duration timespan for the subscription. The default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetLockDuration(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string lockDuration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = lockDuration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.LockDuration"/></em></p>
        ///   <p>ISO 8601 or duration format (day:minute:seconds) for lock duration timespan for the subscription. The default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetLockDuration(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = null;
            return toolSettings;
        }
        #endregion
        #region MaxDeliveryCount
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>Number of maximum deliveries.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetMaxDeliveryCount(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, int? maxDeliveryCount)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = maxDeliveryCount;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>Number of maximum deliveries.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetMaxDeliveryCount(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetStatus(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, ServicebusTopicStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetStatus(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetSubscription(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetSubscription(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetDebug(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetDebug(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetHelp(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetHelp(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetOutput(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetOutput(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetQuery(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetQuery(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings SetVerbose(this AzureServicebusTopicSubscriptionCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionCreateSettings ResetVerbose(this AzureServicebusTopicSubscriptionCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetIds(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetIds(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings AddIds(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings AddIds(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ClearIds(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings RemoveIds(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings RemoveIds(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetName(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetName(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetNamespaceName(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetResourceGroup(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetSubscription(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetSubscription(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetTopicName(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetTopicName(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetDebug(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetDebug(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetHelp(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetHelp(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetOutput(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetOutput(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetQuery(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetQuery(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings SetVerbose(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionDeleteSettings ResetVerbose(this AzureServicebusTopicSubscriptionDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetNamespaceName(this AzureServicebusTopicSubscriptionListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetResourceGroup(this AzureServicebusTopicSubscriptionListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetTopicName(this AzureServicebusTopicSubscriptionListSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetTopicName(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetSkip(this AzureServicebusTopicSubscriptionListSettings toolSettings, string skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetSkip(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetTop(this AzureServicebusTopicSubscriptionListSettings toolSettings, string top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetTop(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetSubscription(this AzureServicebusTopicSubscriptionListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetSubscription(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetDebug(this AzureServicebusTopicSubscriptionListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetDebug(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetHelp(this AzureServicebusTopicSubscriptionListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetHelp(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetOutput(this AzureServicebusTopicSubscriptionListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetOutput(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetQuery(this AzureServicebusTopicSubscriptionListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetQuery(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings SetVerbose(this AzureServicebusTopicSubscriptionListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionListSettings ResetVerbose(this AzureServicebusTopicSubscriptionListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetIds(this AzureServicebusTopicSubscriptionShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetIds(this AzureServicebusTopicSubscriptionShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings AddIds(this AzureServicebusTopicSubscriptionShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings AddIds(this AzureServicebusTopicSubscriptionShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ClearIds(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings RemoveIds(this AzureServicebusTopicSubscriptionShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings RemoveIds(this AzureServicebusTopicSubscriptionShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetName(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetName(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetNamespaceName(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetResourceGroup(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetSubscription(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetSubscription(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetTopicName(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetTopicName(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetDebug(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetDebug(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetHelp(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetHelp(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetOutput(this AzureServicebusTopicSubscriptionShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetOutput(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetQuery(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetQuery(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings SetVerbose(this AzureServicebusTopicSubscriptionShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionShowSettings ResetVerbose(this AzureServicebusTopicSubscriptionShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionUpdateSettingsExtensions
    {
        #region AutoDeleteOnIdle
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan  or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetAutoDeleteOnIdle(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string autoDeleteOnIdle)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = autoDeleteOnIdle;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.AutoDeleteOnIdle"/></em></p>
        ///   <p>ISO 8601 timeSpan  or duration time format for idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetAutoDeleteOnIdle(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.AutoDeleteOnIdle = null;
            return toolSettings;
        }
        #endregion
        #region DeadLetterOnFilterExceptions
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, bool? deadLetterOnFilterExceptions)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = deadLetterOnFilterExceptions;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings EnableDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings DisableDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DeadLetterOnFilterExceptions"/></em></p>
        ///   <p>Allow dead lettering when filter evaluation exceptions occur.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ToggleDeadLetterOnFilterExceptions(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DeadLetterOnFilterExceptions = !toolSettings.DeadLetterOnFilterExceptions;
            return toolSettings;
        }
        #endregion
        #region DefaultMessageTimeToLive
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetDefaultMessageTimeToLive(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string defaultMessageTimeToLive)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = defaultMessageTimeToLive;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.DefaultMessageTimeToLive"/></em></p>
        ///   <p>ISO 8601 or duration time format for Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetDefaultMessageTimeToLive(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.DefaultMessageTimeToLive = null;
            return toolSettings;
        }
        #endregion
        #region EnableBatchedOperations
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetEnableBatchedOperations(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, bool? enableBatchedOperations)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = enableBatchedOperations;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetEnableBatchedOperations(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings EnableEnableBatchedOperations(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings DisableEnableBatchedOperations(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableBatchedOperations"/></em></p>
        ///   <p>Allow server-side batched operations.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ToggleEnableBatchedOperations(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableBatchedOperations = !toolSettings.EnableBatchedOperations;
            return toolSettings;
        }
        #endregion
        #region EnableDeadLetteringOnMessageExpiration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, bool? enableDeadLetteringOnMessageExpiration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = enableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings EnableEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings DisableEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableDeadLetteringOnMessageExpiration"/></em></p>
        ///   <p>A boolean Value that indicates whether a subscription has dead letter support when a message expires.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ToggleEnableDeadLetteringOnMessageExpiration(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableDeadLetteringOnMessageExpiration = !toolSettings.EnableDeadLetteringOnMessageExpiration;
            return toolSettings;
        }
        #endregion
        #region EnableSession
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetEnableSession(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, bool? enableSession)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = enableSession;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetEnableSession(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings EnableEnableSession(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings DisableEnableSession(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionUpdateSettings.EnableSession"/></em></p>
        ///   <p>A boolean value indicating if a subscription supports the concept of sessions.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ToggleEnableSession(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSession = !toolSettings.EnableSession;
            return toolSettings;
        }
        #endregion
        #region ForwardDeadLetteredMessagesTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetForwardDeadLetteredMessagesTo(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string forwardDeadLetteredMessagesTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = forwardDeadLetteredMessagesTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardDeadLetteredMessagesTo"/></em></p>
        ///   <p>Queue/Topic name to forward the Dead Letter message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetForwardDeadLetteredMessagesTo(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardDeadLetteredMessagesTo = null;
            return toolSettings;
        }
        #endregion
        #region ForwardTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetForwardTo(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string forwardTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = forwardTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForwardTo"/></em></p>
        ///   <p>Queue/Topic name to forward the messages.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetForwardTo(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForwardTo = null;
            return toolSettings;
        }
        #endregion
        #region LockDuration
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.LockDuration"/></em></p>
        ///   <p>ISO 8601 or duration format (day:minute:seconds) for lock duration timespan for the subscription. The default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetLockDuration(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string lockDuration)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = lockDuration;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.LockDuration"/></em></p>
        ///   <p>ISO 8601 or duration format (day:minute:seconds) for lock duration timespan for the subscription. The default value is 1 minute.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetLockDuration(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.LockDuration = null;
            return toolSettings;
        }
        #endregion
        #region MaxDeliveryCount
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>Number of maximum deliveries.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetMaxDeliveryCount(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, int? maxDeliveryCount)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = maxDeliveryCount;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.MaxDeliveryCount"/></em></p>
        ///   <p>Number of maximum deliveries.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetMaxDeliveryCount(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MaxDeliveryCount = null;
            return toolSettings;
        }
        #endregion
        #region Status
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetStatus(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, ServicebusTopicStatus status)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = status;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Status"/></em></p>
        ///   <p>Enumerates the possible values for the status of a messaging entity.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetStatus(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Status = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetIds(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetIds(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings AddIds(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings AddIds(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ClearIds(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings RemoveIds(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings RemoveIds(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetName(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Name"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetName(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetNamespaceName(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetResourceGroup(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetSubscription(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetSubscription(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetTopicName(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetTopicName(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetAdd(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetAdd(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetForceString(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetForceString(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetRemove(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetRemove(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetSet(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetSet(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetDebug(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetDebug(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetHelp(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetHelp(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetOutput(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetOutput(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetQuery(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetQuery(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings SetVerbose(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionUpdateSettings ResetVerbose(this AzureServicebusTopicSubscriptionUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueAuthorizationRuleCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetName(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetName(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetNamespaceName(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetNamespaceName(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetQueueName(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetQueueName(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetResourceGroup(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetResourceGroup(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Rights
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetRights(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetRights(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings AddRights(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings AddRights(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ClearRights(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings RemoveRights(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings RemoveRights(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetSubscription(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetSubscription(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetDebug(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetDebug(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetHelp(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetHelp(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetOutput(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetOutput(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetQuery(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetQuery(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings SetVerbose(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleCreateSettings ResetVerbose(this AzureServicebusQueueAuthorizationRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueAuthorizationRuleDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetIds(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetIds(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings AddIds(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings AddIds(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ClearIds(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetName(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetName(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetNamespaceName(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetNamespaceName(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetQueueName(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetQueueName(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetResourceGroup(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetResourceGroup(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetSubscription(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetSubscription(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetDebug(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetDebug(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetHelp(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetHelp(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetOutput(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetOutput(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetQuery(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetQuery(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings SetVerbose(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleDeleteSettings ResetVerbose(this AzureServicebusQueueAuthorizationRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueAuthorizationRuleListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetNamespaceName(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetNamespaceName(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetQueueName(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetQueueName(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetResourceGroup(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetResourceGroup(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetSubscription(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetSubscription(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetDebug(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetDebug(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetHelp(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetHelp(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetOutput(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetOutput(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetQuery(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetQuery(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings SetVerbose(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleListSettings ResetVerbose(this AzureServicebusQueueAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueAuthorizationRuleShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetIds(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetIds(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings AddIds(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings AddIds(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ClearIds(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetName(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetName(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetNamespaceName(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetNamespaceName(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetQueueName(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetQueueName(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetResourceGroup(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetResourceGroup(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetSubscription(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetSubscription(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetDebug(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetDebug(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetHelp(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetHelp(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetOutput(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetOutput(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetQuery(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetQuery(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings SetVerbose(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleShowSettings ResetVerbose(this AzureServicebusQueueAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueAuthorizationRuleUpdateSettingsExtensions
    {
        #region Rights
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetRights(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/> to a new list</em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetRights(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal = rights.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings AddRights(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings AddRights(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.AddRange(rights);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ClearRights(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.RightsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings RemoveRights(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, params ServicebusNamespaceAuthorizationRuleRights[] rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Rights"/></em></p>
        ///   <p>Space-separated list of Authorization rule rights.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings RemoveRights(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, IEnumerable<ServicebusNamespaceAuthorizationRuleRights> rights)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<ServicebusNamespaceAuthorizationRuleRights>(rights);
            toolSettings.RightsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetIds(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetIds(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings AddIds(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings AddIds(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ClearIds(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetName(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetName(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetNamespaceName(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetNamespaceName(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetQueueName(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetQueueName(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetResourceGroup(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetResourceGroup(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetSubscription(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetSubscription(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetAdd(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetAdd(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetForceString(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetForceString(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetRemove(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetRemove(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetSet(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetSet(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetDebug(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetDebug(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetHelp(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetHelp(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetOutput(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetOutput(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetQuery(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetQuery(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings SetVerbose(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleUpdateSettings ResetVerbose(this AzureServicebusQueueAuthorizationRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasAuthorizationRuleListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasAuthorizationRuleListSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Alias"/></em></p>
        ///   <p>Name of Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetAlias(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Alias"/></em></p>
        ///   <p>Name of Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetAlias(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetSubscription(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetSubscription(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetDebug(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetDebug(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetHelp(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetHelp(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetOutput(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetOutput(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetQuery(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetQuery(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings SetVerbose(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings ResetVerbose(this AzureServicebusGeorecoveryAliasAuthorizationRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetAlias(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Alias"/></em></p>
        ///   <p>Name of the Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetAlias(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetIds(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetIds(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings AddIds(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings AddIds(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ClearIds(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings RemoveIds(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings RemoveIds(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetName(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetName(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetSubscription(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetSubscription(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetDebug(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetDebug(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetHelp(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetHelp(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetOutput(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetOutput(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetQuery(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetQuery(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings SetVerbose(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings ResetVerbose(this AzureServicebusGeorecoveryAliasAuthorizationRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleKeysListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceAuthorizationRuleKeysListSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetName(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetName(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetSubscription(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetSubscription(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetDebug(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetDebug(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetHelp(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetHelp(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetOutput(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetOutput(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetQuery(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetQuery(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings SetVerbose(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysListSettings ResetVerbose(this AzureServicebusNamespaceAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusNamespaceAuthorizationRuleKeysRenewSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusNamespaceAuthorizationRuleKeysRenewSettingsExtensions
    {
        #region Key
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Key"/></em></p>
        ///   <p>Specifies Primary or Secondary key needs to be reset.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetKey(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, ServicebusNamespaceAuthorizationRuleKeysKey key)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Key = key;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Key"/></em></p>
        ///   <p>Specifies Primary or Secondary key needs to be reset.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetKey(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Key = null;
            return toolSettings;
        }
        #endregion
        #region KeyValue
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.KeyValue"/></em></p>
        ///   <p>Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetKeyValue(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string keyValue)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.KeyValue = keyValue;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.KeyValue"/></em></p>
        ///   <p>Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetKeyValue(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.KeyValue = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetIds(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings AddIds(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ClearIds(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings RemoveIds(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetName(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Name"/></em></p>
        ///   <p>Name of Namespace Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetName(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetNamespaceName(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetResourceGroup(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetSubscription(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetSubscription(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetDebug(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetDebug(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetHelp(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetHelp(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetOutput(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetOutput(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetQuery(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetQuery(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings SetVerbose(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings ResetVerbose(this AzureServicebusNamespaceAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleKeysListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicAuthorizationRuleKeysListSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetName(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetName(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetNamespaceName(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetNamespaceName(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetResourceGroup(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetResourceGroup(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetTopicName(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetTopicName(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetSubscription(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetSubscription(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetDebug(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetDebug(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetHelp(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetHelp(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetOutput(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetOutput(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetQuery(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetQuery(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings SetVerbose(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysListSettings ResetVerbose(this AzureServicebusTopicAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicAuthorizationRuleKeysRenewSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicAuthorizationRuleKeysRenewSettingsExtensions
    {
        #region Key
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Key"/></em></p>
        ///   <p>Specifies Primary or Secondary key needs to be reset.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetKey(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, ServicebusNamespaceAuthorizationRuleKeysKey key)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Key = key;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Key"/></em></p>
        ///   <p>Specifies Primary or Secondary key needs to be reset.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetKey(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Key = null;
            return toolSettings;
        }
        #endregion
        #region KeyValue
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.KeyValue"/></em></p>
        ///   <p>Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetKeyValue(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string keyValue)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.KeyValue = keyValue;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.KeyValue"/></em></p>
        ///   <p>Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetKeyValue(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.KeyValue = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetIds(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetIds(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings AddIds(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings AddIds(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ClearIds(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings RemoveIds(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetName(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Name"/></em></p>
        ///   <p>Name of Topic Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetName(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetNamespaceName(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetNamespaceName(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetResourceGroup(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetResourceGroup(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetSubscription(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetSubscription(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetTopicName(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetTopicName(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetDebug(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetDebug(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetHelp(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetHelp(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetOutput(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetOutput(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetQuery(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetQuery(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings SetVerbose(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicAuthorizationRuleKeysRenewSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicAuthorizationRuleKeysRenewSettings ResetVerbose(this AzureServicebusTopicAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleCreateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionRuleCreateSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetNamespaceName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetResourceGroup(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region SubscriptionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetSubscriptionName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string subscriptionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = subscriptionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetSubscriptionName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetTopicName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetTopicName(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region ActionCompatibilityLevel
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionCompatibilityLevel"/></em></p>
        ///   <p>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetActionCompatibilityLevel(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string actionCompatibilityLevel)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionCompatibilityLevel = actionCompatibilityLevel;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionCompatibilityLevel"/></em></p>
        ///   <p>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetActionCompatibilityLevel(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionCompatibilityLevel = null;
            return toolSettings;
        }
        #endregion
        #region ActionSqlExpression
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionSqlExpression"/></em></p>
        ///   <p>Action SQL expression.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetActionSqlExpression(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string actionSqlExpression)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionSqlExpression = actionSqlExpression;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ActionSqlExpression"/></em></p>
        ///   <p>Action SQL expression.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetActionSqlExpression(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionSqlExpression = null;
            return toolSettings;
        }
        #endregion
        #region EnableActionPreprocessing
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, bool? enableActionPreprocessing)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = enableActionPreprocessing;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings EnableEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings DisableEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ToggleEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = !toolSettings.EnableActionPreprocessing;
            return toolSettings;
        }
        #endregion
        #region ContentType
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ContentType"/></em></p>
        ///   <p>Content type of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetContentType(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string contentType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContentType = contentType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ContentType"/></em></p>
        ///   <p>Content type of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetContentType(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContentType = null;
            return toolSettings;
        }
        #endregion
        #region CorrelationId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.CorrelationId"/></em></p>
        ///   <p>Identifier of correlation.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetCorrelationId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string correlationId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CorrelationId = correlationId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.CorrelationId"/></em></p>
        ///   <p>Identifier of correlation.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetCorrelationId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CorrelationId = null;
            return toolSettings;
        }
        #endregion
        #region EnableCorrelationPreprocessing
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, bool? enableCorrelationPreprocessing)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = enableCorrelationPreprocessing;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings EnableEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings DisableEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ToggleEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = !toolSettings.EnableCorrelationPreprocessing;
            return toolSettings;
        }
        #endregion
        #region Label
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Label"/></em></p>
        ///   <p>Application specific label.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetLabel(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string label)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Label = label;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Label"/></em></p>
        ///   <p>Application specific label.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetLabel(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Label = null;
            return toolSettings;
        }
        #endregion
        #region MessageId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.MessageId"/></em></p>
        ///   <p>Identifier of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetMessageId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string messageId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MessageId = messageId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.MessageId"/></em></p>
        ///   <p>Identifier of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetMessageId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MessageId = null;
            return toolSettings;
        }
        #endregion
        #region ReplyTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyTo"/></em></p>
        ///   <p>Address of the queue to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetReplyTo(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string replyTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyTo = replyTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyTo"/></em></p>
        ///   <p>Address of the queue to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetReplyTo(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyTo = null;
            return toolSettings;
        }
        #endregion
        #region ReplyToSessionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyToSessionId"/></em></p>
        ///   <p>Session identifier to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetReplyToSessionId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string replyToSessionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyToSessionId = replyToSessionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.ReplyToSessionId"/></em></p>
        ///   <p>Session identifier to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetReplyToSessionId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyToSessionId = null;
            return toolSettings;
        }
        #endregion
        #region SessionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SessionId"/></em></p>
        ///   <p>Session identifier.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetSessionId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string sessionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SessionId = sessionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.SessionId"/></em></p>
        ///   <p>Session identifier.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetSessionId(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SessionId = null;
            return toolSettings;
        }
        #endregion
        #region To
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.To"/></em></p>
        ///   <p>Address to send to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetTo(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string to)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.To = to;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.To"/></em></p>
        ///   <p>Address to send to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetTo(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.To = null;
            return toolSettings;
        }
        #endregion
        #region EnableSqlPreprocessing
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, bool? enableSqlPreprocessing)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = enableSqlPreprocessing;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings EnableEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings DisableEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ToggleEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = !toolSettings.EnableSqlPreprocessing;
            return toolSettings;
        }
        #endregion
        #region FilterSqlExpression
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.FilterSqlExpression"/></em></p>
        ///   <p>SQL expression. e.g. myproperty=test.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetFilterSqlExpression(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string filterSqlExpression)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilterSqlExpression = filterSqlExpression;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.FilterSqlExpression"/></em></p>
        ///   <p>SQL expression. e.g. myproperty=test.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetFilterSqlExpression(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilterSqlExpression = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetSubscription(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetSubscription(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetDebug(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetDebug(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetHelp(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetHelp(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetOutput(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetOutput(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetQuery(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetQuery(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings SetVerbose(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleCreateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleCreateSettings ResetVerbose(this AzureServicebusTopicSubscriptionRuleCreateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleDeleteSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionRuleDeleteSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetIds(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetIds(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings AddIds(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings AddIds(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ClearIds(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings RemoveIds(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings RemoveIds(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetNamespaceName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetResourceGroup(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetSubscription(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetSubscription(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region SubscriptionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetSubscriptionName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string subscriptionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = subscriptionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetSubscriptionName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetTopicName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetTopicName(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetDebug(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetDebug(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetHelp(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetHelp(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetOutput(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetOutput(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetQuery(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetQuery(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings SetVerbose(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleDeleteSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleDeleteSettings ResetVerbose(this AzureServicebusTopicSubscriptionRuleDeleteSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionRuleListSettingsExtensions
    {
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetNamespaceName(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetResourceGroup(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region SubscriptionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetSubscriptionName(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string subscriptionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = subscriptionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetSubscriptionName(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetTopicName(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetTopicName(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Skip
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetSkip(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string skip)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = skip;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Skip"/></em></p>
        ///   <p>Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetSkip(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Skip = null;
            return toolSettings;
        }
        #endregion
        #region Top
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetTop(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string top)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = top;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Top"/></em></p>
        ///   <p>May be used to limit the number of results to the most recent N usageDetails.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetTop(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Top = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetSubscription(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetSubscription(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetDebug(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetDebug(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetHelp(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetHelp(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetOutput(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetOutput(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetQuery(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetQuery(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings SetVerbose(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleListSettings ResetVerbose(this AzureServicebusTopicSubscriptionRuleListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleShowSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionRuleShowSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetIds(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetIds(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings AddIds(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings AddIds(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ClearIds(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings RemoveIds(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings RemoveIds(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetNamespaceName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetResourceGroup(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetSubscription(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetSubscription(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region SubscriptionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetSubscriptionName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string subscriptionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = subscriptionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetSubscriptionName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetTopicName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetTopicName(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetDebug(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetDebug(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetHelp(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetHelp(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetOutput(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetOutput(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetQuery(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetQuery(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings SetVerbose(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleShowSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleShowSettings ResetVerbose(this AzureServicebusTopicSubscriptionRuleShowSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusTopicSubscriptionRuleUpdateSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusTopicSubscriptionRuleUpdateSettingsExtensions
    {
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetIds(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetIds(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings AddIds(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings AddIds(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ClearIds(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings RemoveIds(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings RemoveIds(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Name"/></em></p>
        ///   <p>Name of Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetNamespaceName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetNamespaceName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetResourceGroup(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetResourceGroup(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetSubscription(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetSubscription(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region SubscriptionName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetSubscriptionName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string subscriptionName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = subscriptionName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SubscriptionName"/></em></p>
        ///   <p>Name of Subscription.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetSubscriptionName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SubscriptionName = null;
            return toolSettings;
        }
        #endregion
        #region TopicName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetTopicName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string topicName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = topicName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.TopicName"/></em></p>
        ///   <p>Name of Topic.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetTopicName(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.TopicName = null;
            return toolSettings;
        }
        #endregion
        #region ActionCompatibilityLevel
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionCompatibilityLevel"/></em></p>
        ///   <p>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetActionCompatibilityLevel(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string actionCompatibilityLevel)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionCompatibilityLevel = actionCompatibilityLevel;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionCompatibilityLevel"/></em></p>
        ///   <p>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetActionCompatibilityLevel(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionCompatibilityLevel = null;
            return toolSettings;
        }
        #endregion
        #region ActionSqlExpression
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionSqlExpression"/></em></p>
        ///   <p>Action SQL expression.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetActionSqlExpression(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string actionSqlExpression)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionSqlExpression = actionSqlExpression;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ActionSqlExpression"/></em></p>
        ///   <p>Action SQL expression.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetActionSqlExpression(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ActionSqlExpression = null;
            return toolSettings;
        }
        #endregion
        #region EnableActionPreprocessing
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, bool? enableActionPreprocessing)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = enableActionPreprocessing;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings EnableEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings DisableEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableActionPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ToggleEnableActionPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableActionPreprocessing = !toolSettings.EnableActionPreprocessing;
            return toolSettings;
        }
        #endregion
        #region ContentType
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ContentType"/></em></p>
        ///   <p>Content type of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetContentType(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string contentType)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContentType = contentType;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ContentType"/></em></p>
        ///   <p>Content type of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetContentType(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ContentType = null;
            return toolSettings;
        }
        #endregion
        #region CorrelationId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.CorrelationId"/></em></p>
        ///   <p>Identifier of correlation.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetCorrelationId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string correlationId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CorrelationId = correlationId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.CorrelationId"/></em></p>
        ///   <p>Identifier of correlation.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetCorrelationId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.CorrelationId = null;
            return toolSettings;
        }
        #endregion
        #region EnableCorrelationPreprocessing
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, bool? enableCorrelationPreprocessing)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = enableCorrelationPreprocessing;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings EnableEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings DisableEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableCorrelationPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ToggleEnableCorrelationPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableCorrelationPreprocessing = !toolSettings.EnableCorrelationPreprocessing;
            return toolSettings;
        }
        #endregion
        #region Label
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Label"/></em></p>
        ///   <p>Application specific label.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetLabel(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string label)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Label = label;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Label"/></em></p>
        ///   <p>Application specific label.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetLabel(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Label = null;
            return toolSettings;
        }
        #endregion
        #region MessageId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.MessageId"/></em></p>
        ///   <p>Identifier of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetMessageId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string messageId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MessageId = messageId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.MessageId"/></em></p>
        ///   <p>Identifier of message.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetMessageId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.MessageId = null;
            return toolSettings;
        }
        #endregion
        #region ReplyTo
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyTo"/></em></p>
        ///   <p>Address of the queue to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetReplyTo(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string replyTo)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyTo = replyTo;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyTo"/></em></p>
        ///   <p>Address of the queue to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetReplyTo(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyTo = null;
            return toolSettings;
        }
        #endregion
        #region ReplyToSessionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyToSessionId"/></em></p>
        ///   <p>Session identifier to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetReplyToSessionId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string replyToSessionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyToSessionId = replyToSessionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ReplyToSessionId"/></em></p>
        ///   <p>Session identifier to reply to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetReplyToSessionId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ReplyToSessionId = null;
            return toolSettings;
        }
        #endregion
        #region SessionId
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SessionId"/></em></p>
        ///   <p>Session identifier.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetSessionId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string sessionId)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SessionId = sessionId;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.SessionId"/></em></p>
        ///   <p>Session identifier.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetSessionId(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.SessionId = null;
            return toolSettings;
        }
        #endregion
        #region To
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.To"/></em></p>
        ///   <p>Address to send to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetTo(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string to)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.To = to;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.To"/></em></p>
        ///   <p>Address to send to.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetTo(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.To = null;
            return toolSettings;
        }
        #endregion
        #region EnableSqlPreprocessing
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, bool? enableSqlPreprocessing)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = enableSqlPreprocessing;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = null;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Enables <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings EnableEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = true;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Disables <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings DisableEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = false;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Toggles <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.EnableSqlPreprocessing"/></em></p>
        ///   <p>A boolean value that indicates whether the rule action requires preprocessing.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ToggleEnableSqlPreprocessing(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.EnableSqlPreprocessing = !toolSettings.EnableSqlPreprocessing;
            return toolSettings;
        }
        #endregion
        #region FilterSqlExpression
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.FilterSqlExpression"/></em></p>
        ///   <p>SQL expression. e.g. myproperty=test.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetFilterSqlExpression(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string filterSqlExpression)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilterSqlExpression = filterSqlExpression;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.FilterSqlExpression"/></em></p>
        ///   <p>SQL expression. e.g. myproperty=test.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetFilterSqlExpression(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.FilterSqlExpression = null;
            return toolSettings;
        }
        #endregion
        #region Add
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetAdd(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string add)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = add;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Add"/></em></p>
        ///   <p>Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetAdd(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Add = null;
            return toolSettings;
        }
        #endregion
        #region ForceString
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetForceString(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string forceString)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = forceString;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.ForceString"/></em></p>
        ///   <p>When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetForceString(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ForceString = null;
            return toolSettings;
        }
        #endregion
        #region Remove
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetRemove(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string remove)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = remove;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Remove"/></em></p>
        ///   <p>Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetRemove(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Remove = null;
            return toolSettings;
        }
        #endregion
        #region Set
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetSet(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string set)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = set;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Set"/></em></p>
        ///   <p>Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetSet(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Set = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetDebug(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetDebug(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetHelp(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetHelp(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetOutput(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetOutput(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetQuery(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetQuery(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings SetVerbose(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusTopicSubscriptionRuleUpdateSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusTopicSubscriptionRuleUpdateSettings ResetVerbose(this AzureServicebusTopicSubscriptionRuleUpdateSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleKeysListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueAuthorizationRuleKeysListSettingsExtensions
    {
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetName(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetName(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetNamespaceName(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetNamespaceName(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetQueueName(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetQueueName(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetResourceGroup(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetResourceGroup(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetSubscription(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetSubscription(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetDebug(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetDebug(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetHelp(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetHelp(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetOutput(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetOutput(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetQuery(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetQuery(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings SetVerbose(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysListSettings ResetVerbose(this AzureServicebusQueueAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusQueueAuthorizationRuleKeysRenewSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusQueueAuthorizationRuleKeysRenewSettingsExtensions
    {
        #region Key
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Key"/></em></p>
        ///   <p>Specifies Primary or Secondary key needs to be reset.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetKey(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, ServicebusNamespaceAuthorizationRuleKeysKey key)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Key = key;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Key"/></em></p>
        ///   <p>Specifies Primary or Secondary key needs to be reset.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetKey(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Key = null;
            return toolSettings;
        }
        #endregion
        #region KeyValue
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.KeyValue"/></em></p>
        ///   <p>Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetKeyValue(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string keyValue)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.KeyValue = keyValue;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.KeyValue"/></em></p>
        ///   <p>Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetKeyValue(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.KeyValue = null;
            return toolSettings;
        }
        #endregion
        #region Ids
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetIds(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/> to a new list</em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetIds(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal = ids.ToList();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings AddIds(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Adds values to <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings AddIds(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.AddRange(ids);
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Clears <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ClearIds(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.IdsInternal.Clear();
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, params string[] ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Removes values from <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Ids"/></em></p>
        ///   <p>One or more resource IDs (space-delimited). If provided, no other 'Resource Id' arguments should be specified.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings RemoveIds(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, IEnumerable<string> ids)
        {
            toolSettings = toolSettings.NewInstance();
            var hashSet = new HashSet<string>(ids);
            toolSettings.IdsInternal.RemoveAll(x => hashSet.Contains(x));
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetName(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Name"/></em></p>
        ///   <p>Name of Queue Authorization Rule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetName(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetNamespaceName(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetNamespaceName(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region QueueName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetQueueName(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string queueName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = queueName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.QueueName"/></em></p>
        ///   <p>Name of Queue.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetQueueName(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.QueueName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetResourceGroup(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetResourceGroup(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetSubscription(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetSubscription(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetDebug(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetDebug(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetHelp(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetHelp(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetOutput(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetOutput(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetQuery(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetQuery(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings SetVerbose(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusQueueAuthorizationRuleKeysRenewSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusQueueAuthorizationRuleKeysRenewSettings ResetVerbose(this AzureServicebusQueueAuthorizationRuleKeysRenewSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettingsExtensions
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [ExcludeFromCodeCoverage]
    public static partial class AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettingsExtensions
    {
        #region Alias
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Alias"/></em></p>
        ///   <p>Name of Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetAlias(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string alias)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = alias;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Alias"/></em></p>
        ///   <p>Name of Geo-Disaster Recovery Configuration Alias.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetAlias(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Alias = null;
            return toolSettings;
        }
        #endregion
        #region Name
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Namespace AuthorizationRule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetName(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string name)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = name;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Name"/></em></p>
        ///   <p>Name of Namespace AuthorizationRule.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetName(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Name = null;
            return toolSettings;
        }
        #endregion
        #region NamespaceName
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetNamespaceName(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string namespaceName)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = namespaceName;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.NamespaceName"/></em></p>
        ///   <p>Name of Namespace.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetNamespaceName(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.NamespaceName = null;
            return toolSettings;
        }
        #endregion
        #region ResourceGroup
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetResourceGroup(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string resourceGroup)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = resourceGroup;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.ResourceGroup"/></em></p>
        ///   <p>Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetResourceGroup(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.ResourceGroup = null;
            return toolSettings;
        }
        #endregion
        #region Subscription
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetSubscription(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string subscription)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = subscription;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Subscription"/></em></p>
        ///   <p>Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetSubscription(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Subscription = null;
            return toolSettings;
        }
        #endregion
        #region Debug
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetDebug(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string debug)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = debug;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Debug"/></em></p>
        ///   <p>Increase logging verbosity to show all debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetDebug(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Debug = null;
            return toolSettings;
        }
        #endregion
        #region Help
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetHelp(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string help)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = help;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Help"/></em></p>
        ///   <p>Show this help message and exit.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetHelp(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Help = null;
            return toolSettings;
        }
        #endregion
        #region Output
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetOutput(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, AzureOutput output)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = output;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Output"/></em></p>
        ///   <p>Output format.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetOutput(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Output = null;
            return toolSettings;
        }
        #endregion
        #region Query
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetQuery(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string query)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = query;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Query"/></em></p>
        ///   <p>JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetQuery(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Query = null;
            return toolSettings;
        }
        #endregion
        #region Verbose
        /// <summary>
        ///   <p><em>Sets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings SetVerbose(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings, string verbose)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = verbose;
            return toolSettings;
        }
        /// <summary>
        ///   <p><em>Resets <see cref="AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings.Verbose"/></em></p>
        ///   <p>Increase logging verbosity. Use --debug for full debug logs.</p>
        /// </summary>
        [Pure]
        public static AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings ResetVerbose(this AzureServicebusGeorecoveryAliasAuthorizationRuleKeysListSettings toolSettings)
        {
            toolSettings = toolSettings.NewInstance();
            toolSettings.Verbose = null;
            return toolSettings;
        }
        #endregion
    }
    #endregion
    #region ServicebusTopicMaxSize
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<ServicebusTopicMaxSize>))]
    public partial class ServicebusTopicMaxSize : Enumeration
    {
        public static ServicebusTopicMaxSize _1024 = new ServicebusTopicMaxSize { Value = "1024" };
        public static ServicebusTopicMaxSize _10240 = new ServicebusTopicMaxSize { Value = "10240" };
        public static ServicebusTopicMaxSize _2048 = new ServicebusTopicMaxSize { Value = "2048" };
        public static ServicebusTopicMaxSize _20480 = new ServicebusTopicMaxSize { Value = "20480" };
        public static ServicebusTopicMaxSize _3072 = new ServicebusTopicMaxSize { Value = "3072" };
        public static ServicebusTopicMaxSize _4096 = new ServicebusTopicMaxSize { Value = "4096" };
        public static ServicebusTopicMaxSize _40960 = new ServicebusTopicMaxSize { Value = "40960" };
        public static ServicebusTopicMaxSize _5120 = new ServicebusTopicMaxSize { Value = "5120" };
        public static ServicebusTopicMaxSize _81920 = new ServicebusTopicMaxSize { Value = "81920" };
    }
    #endregion
    #region ServicebusTopicStatus
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<ServicebusTopicStatus>))]
    public partial class ServicebusTopicStatus : Enumeration
    {
        public static ServicebusTopicStatus active = new ServicebusTopicStatus { Value = "active" };
        public static ServicebusTopicStatus disabled = new ServicebusTopicStatus { Value = "disabled" };
        public static ServicebusTopicStatus receivedisabled = new ServicebusTopicStatus { Value = "receivedisabled" };
        public static ServicebusTopicStatus senddisabled = new ServicebusTopicStatus { Value = "senddisabled" };
    }
    #endregion
    #region ServicebusNamespaceCapacity
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<ServicebusNamespaceCapacity>))]
    public partial class ServicebusNamespaceCapacity : Enumeration
    {
        public static ServicebusNamespaceCapacity _1 = new ServicebusNamespaceCapacity { Value = "1" };
        public static ServicebusNamespaceCapacity _2 = new ServicebusNamespaceCapacity { Value = "2" };
        public static ServicebusNamespaceCapacity _4 = new ServicebusNamespaceCapacity { Value = "4" };
    }
    #endregion
    #region ServicebusNamespaceSku
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<ServicebusNamespaceSku>))]
    public partial class ServicebusNamespaceSku : Enumeration
    {
        public static ServicebusNamespaceSku basic = new ServicebusNamespaceSku { Value = "basic" };
        public static ServicebusNamespaceSku premium = new ServicebusNamespaceSku { Value = "premium" };
        public static ServicebusNamespaceSku standard = new ServicebusNamespaceSku { Value = "standard" };
    }
    #endregion
    #region ServicebusNamespaceNetworkRuleAddAction
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<ServicebusNamespaceNetworkRuleAddAction>))]
    public partial class ServicebusNamespaceNetworkRuleAddAction : Enumeration
    {
        public static ServicebusNamespaceNetworkRuleAddAction allow = new ServicebusNamespaceNetworkRuleAddAction { Value = "allow" };
    }
    #endregion
    #region ServicebusNamespaceAuthorizationRuleRights
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<ServicebusNamespaceAuthorizationRuleRights>))]
    public partial class ServicebusNamespaceAuthorizationRuleRights : Enumeration
    {
        public static ServicebusNamespaceAuthorizationRuleRights listen = new ServicebusNamespaceAuthorizationRuleRights { Value = "listen" };
        public static ServicebusNamespaceAuthorizationRuleRights manage = new ServicebusNamespaceAuthorizationRuleRights { Value = "manage" };
        public static ServicebusNamespaceAuthorizationRuleRights send = new ServicebusNamespaceAuthorizationRuleRights { Value = "send" };
    }
    #endregion
    #region ServicebusNamespaceAuthorizationRuleKeysKey
    /// <summary>
    ///   Used within <see cref="AzureServicebusTasks"/>.
    /// </summary>
    [PublicAPI]
    [Serializable]
    [ExcludeFromCodeCoverage]
    [TypeConverter(typeof(TypeConverter<ServicebusNamespaceAuthorizationRuleKeysKey>))]
    public partial class ServicebusNamespaceAuthorizationRuleKeysKey : Enumeration
    {
        public static ServicebusNamespaceAuthorizationRuleKeysKey primarykey = new ServicebusNamespaceAuthorizationRuleKeysKey { Value = "primarykey" };
        public static ServicebusNamespaceAuthorizationRuleKeysKey secondarykey = new ServicebusNamespaceAuthorizationRuleKeysKey { Value = "secondarykey" };
    }
    #endregion
}
