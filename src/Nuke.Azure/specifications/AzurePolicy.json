{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.CodeGeneration/schema.json",
  "license": [
    "Copyright Sebastian Karasek, Matthias Koch 2018.",
    "Distributed under the MIT License.",
    "https://github.com/nuke-build/azure/blob/master/LICENSE"
  ],
  "references": [
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/2a2c87c2/latest/docs-ref-autogen/policy.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/2a2c87c2/latest/docs-ref-autogen/policy/assignment.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/2a2c87c2/latest/docs-ref-autogen/policy/definition.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/2a2c87c2/latest/docs-ref-autogen/policy/event.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/2a2c87c2/latest/docs-ref-autogen/policy/set-definition.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/2a2c87c2/latest/docs-ref-autogen/policy/state.yml"
  ],
  "name": "AzurePolicy",
  "officialUrl": "https://docs.microsoft.com/en-us/cli/azure/policy?view=azure-cli-latest",
  "help": "Manage resource policies.",
  "pathExecutable": "az",
  "tasks": [
    {
      "postfix": "",
      "definiteArgument": "policy",
      "settingsClass": {}
    },
    {
      "postfix": "AssignmentCreate",
      "definiteArgument": "policy assignment create",
      "settingsClass": {
        "properties": [
          {
            "name": "DisplayName",
            "type": "string",
            "format": "--display-name {value}",
            "help": "Display name of the policy assignment."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the new policy assignment."
          },
          {
            "name": "NotScopes",
            "type": "List<string>",
            "format": "--not-scopes {value}",
            "separator": " ",
            "help": "Space-separated scopes where the policy assignment does not apply."
          },
          {
            "name": "Params",
            "type": "string",
            "format": "--params {value}",
            "help": "JSON formatted string or path to file with parameter values of policy rule."
          },
          {
            "name": "Policy",
            "type": "string",
            "format": "--policy {value}",
            "help": "Name or id of the policy definition."
          },
          {
            "name": "PolicySetDefinition",
            "type": "string",
            "format": "--policy-set-definition {value}",
            "help": "Name or id of the policy set definition."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "The resource group where the policy will be applied."
          },
          {
            "name": "Scope",
            "type": "string",
            "format": "--scope {value}",
            "help": "Scope to which this policy assignment applies."
          },
          {
            "name": "Sku",
            "type": "PolicyAssignmentCreateSku",
            "format": "--sku {value}",
            "help": "Policy sku."
          }
        ]
      }
    },
    {
      "postfix": "AssignmentDelete",
      "definiteArgument": "policy assignment delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the policy assignment."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "The resource group where the policy will be applied."
          },
          {
            "name": "Scope",
            "type": "string",
            "format": "--scope {value}",
            "help": "Scope to which this policy assignment applies."
          }
        ]
      }
    },
    {
      "postfix": "AssignmentList",
      "definiteArgument": "policy assignment list",
      "settingsClass": {
        "properties": [
          {
            "name": "DisableScopeStrictMatch",
            "type": "string",
            "format": "--disable-scope-strict-match {value}",
            "help": "Include policy assignments either inherited from parent scope or at child scope."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "The resource group where the policy will be applied."
          },
          {
            "name": "Scope",
            "type": "string",
            "format": "--scope {value}",
            "help": "Scope to which this policy assignment applies."
          }
        ]
      }
    },
    {
      "postfix": "AssignmentShow",
      "definiteArgument": "policy assignment show",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the policy assignment."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "The resource group where the policy will be applied."
          },
          {
            "name": "Scope",
            "type": "string",
            "format": "--scope {value}",
            "help": "Scope to which this policy assignment applies."
          }
        ]
      }
    },
    {
      "postfix": "DefinitionCreate",
      "definiteArgument": "policy definition create",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the new policy definition."
          },
          {
            "name": "Description",
            "type": "string",
            "format": "--description {value}",
            "help": "Description of policy definition."
          },
          {
            "name": "DisplayName",
            "type": "string",
            "format": "--display-name {value}",
            "help": "Display name of policy definition."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "Name of the management group the new policy definition can be assigned in."
          },
          {
            "name": "Metadata",
            "type": "Dictionary<string, object>",
            "format": "--metadata {value}",
            "itemFormat": "{key}={value}",
            "separator": " ",
            "help": "Metadata in space-separated key=value pairs."
          },
          {
            "name": "Mode",
            "type": "PolicyDefinitionCreateMode",
            "format": "--mode {value}",
            "help": "Mode of the new policy definition."
          },
          {
            "name": "Params",
            "type": "string",
            "format": "--params {value}",
            "help": "JSON formatted string or a path to a file or uri with parameter definitions."
          },
          {
            "name": "Rules",
            "type": "string",
            "format": "--rules {value}",
            "help": "Policy rules in JSON format, or a path to a file containing JSON rules."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "Name or id of the subscription the new policy definition can be assigned in."
          }
        ]
      }
    },
    {
      "postfix": "DefinitionDelete",
      "definiteArgument": "policy definition delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "The policy definition name."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "DefinitionList",
      "definiteArgument": "policy definition list",
      "settingsClass": {
        "properties": [
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "DefinitionShow",
      "definiteArgument": "policy definition show",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "The policy definition name."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "DefinitionUpdate",
      "definiteArgument": "policy definition update",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "The policy definition name."
          },
          {
            "name": "Description",
            "type": "string",
            "format": "--description {value}",
            "help": "Description of policy definition."
          },
          {
            "name": "DisplayName",
            "type": "string",
            "format": "--display-name {value}",
            "help": "Display name of policy definition."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Metadata",
            "type": "Dictionary<string, object>",
            "format": "--metadata {value}",
            "itemFormat": "{key}={value}",
            "separator": " ",
            "help": "Metadata in space-separated key=value pairs."
          },
          {
            "name": "Mode",
            "type": "string",
            "format": "--mode {value}",
            "help": ""
          },
          {
            "name": "Params",
            "type": "string",
            "format": "--params {value}",
            "help": "JSON formatted string or a path to a file or uri with parameter definitions."
          },
          {
            "name": "Rules",
            "type": "string",
            "format": "--rules {value}",
            "help": "JSON formatted string or a path to a file with such content."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "EventList",
      "definiteArgument": "policy event list",
      "settingsClass": {
        "properties": [
          {
            "name": "Apply",
            "type": "string",
            "format": "--apply {value}",
            "help": "Apply expression for aggregations using OData notation."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter expression using OData notation."
          },
          {
            "name": "From",
            "type": "string",
            "format": "--from {value}",
            "help": "ISO 8601 formatted timestamp specifying the start time of the interval to query."
          },
          {
            "name": "OrderBy",
            "type": "string",
            "format": "--order-by {value}",
            "help": "Ordering expression using OData notation."
          },
          {
            "name": "Select",
            "type": "string",
            "format": "--select {value}",
            "help": "Select expression using OData notation."
          },
          {
            "name": "To",
            "type": "string",
            "format": "--to {value}",
            "help": "ISO 8601 formatted timestamp specifying the end time of the interval to query."
          },
          {
            "name": "Top",
            "type": "int",
            "format": "--top {value}",
            "help": "Maximum number of records to return."
          },
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Provider namespace (Ex: Microsoft.Provider)."
          },
          {
            "name": "Parent",
            "type": "string",
            "format": "--parent {value}",
            "help": "The parent path (Ex: resA/myA/resB/myB)."
          },
          {
            "name": "Resource",
            "type": "string",
            "format": "--resource {value}",
            "help": "Resource ID or resource name. If a name is given, please provide the resource group and other relevant resource id arguments."
          },
          {
            "name": "ResourceType",
            "type": "string",
            "format": "--resource-type {value}",
            "help": "Resource type (Ex: resC)."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "Name of management group."
          },
          {
            "name": "PolicyAssignment",
            "type": "string",
            "format": "--policy-assignment {value}",
            "help": "Name of policy assignment."
          },
          {
            "name": "PolicyDefinition",
            "type": "string",
            "format": "--policy-definition {value}",
            "help": "Name of policy definition."
          },
          {
            "name": "PolicySetDefinition",
            "type": "string",
            "format": "--policy-set-definition {value}",
            "help": "Name of policy set definition."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`."
          }
        ]
      }
    },
    {
      "postfix": "SetDefinitionCreate",
      "definiteArgument": "policy set-definition create",
      "settingsClass": {
        "properties": [
          {
            "name": "Definitions",
            "type": "string",
            "format": "--definitions {value}",
            "help": "Policy definitions in JSON format, or a path to a file containing JSON rules."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the new policy set definition."
          },
          {
            "name": "Description",
            "type": "string",
            "format": "--description {value}",
            "help": "Description of policy set definition."
          },
          {
            "name": "DisplayName",
            "type": "string",
            "format": "--display-name {value}",
            "help": "Display name of policy set definition."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "Name of management group the new policy set definition can be assigned in."
          },
          {
            "name": "Params",
            "type": "string",
            "format": "--params {value}",
            "help": "JSON formatted string or a path to a file or uri with parameter definitions."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "Name or id of the subscription the new policy set definition can be assigned in."
          }
        ]
      }
    },
    {
      "postfix": "SetDefinitionDelete",
      "definiteArgument": "policy set-definition delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "The policy set definition name."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "SetDefinitionList",
      "definiteArgument": "policy set-definition list",
      "settingsClass": {
        "properties": [
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "SetDefinitionShow",
      "definiteArgument": "policy set-definition show",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "The policy set definition name."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "SetDefinitionUpdate",
      "definiteArgument": "policy set-definition update",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "The policy set definition name."
          },
          {
            "name": "Definitions",
            "type": "string",
            "format": "--definitions {value}",
            "help": "JSON formatted string or a path to a file or uri containing definitions."
          },
          {
            "name": "Description",
            "type": "string",
            "format": "--description {value}",
            "help": "Description of policy set definition."
          },
          {
            "name": "DisplayName",
            "type": "string",
            "format": "--display-name {value}",
            "help": "Display name of policy set definition."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "The name of the management group of the policy [set] definition."
          },
          {
            "name": "Params",
            "type": "string",
            "format": "--params {value}",
            "help": "JSON formatted string or a path to a file or uri with parameter definitions."
          },
          {
            "name": "Subscription",
            "type": "string",
            "format": "--subscription {value}",
            "help": "The subscription id of the policy [set] definition."
          }
        ]
      }
    },
    {
      "postfix": "StateList",
      "definiteArgument": "policy state list",
      "settingsClass": {
        "properties": [
          {
            "name": "All",
            "type": "string",
            "format": "--all {value}",
            "help": "Within the specified time interval, get all policy states instead of the latest only."
          },
          {
            "name": "Apply",
            "type": "string",
            "format": "--apply {value}",
            "help": "Apply expression for aggregations using OData notation."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter expression using OData notation."
          },
          {
            "name": "From",
            "type": "string",
            "format": "--from {value}",
            "help": "ISO 8601 formatted timestamp specifying the start time of the interval to query."
          },
          {
            "name": "OrderBy",
            "type": "string",
            "format": "--order-by {value}",
            "help": "Ordering expression using OData notation."
          },
          {
            "name": "Select",
            "type": "string",
            "format": "--select {value}",
            "help": "Select expression using OData notation."
          },
          {
            "name": "To",
            "type": "string",
            "format": "--to {value}",
            "help": "ISO 8601 formatted timestamp specifying the end time of the interval to query."
          },
          {
            "name": "Top",
            "type": "int",
            "format": "--top {value}",
            "help": "Maximum number of records to return."
          },
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Provider namespace (Ex: Microsoft.Provider)."
          },
          {
            "name": "Parent",
            "type": "string",
            "format": "--parent {value}",
            "help": "The parent path (Ex: resA/myA/resB/myB)."
          },
          {
            "name": "Resource",
            "type": "string",
            "format": "--resource {value}",
            "help": "Resource ID or resource name. If a name is given, please provide the resource group and other relevant resource id arguments."
          },
          {
            "name": "ResourceType",
            "type": "string",
            "format": "--resource-type {value}",
            "help": "Resource type (Ex: resC)."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "Name of management group."
          },
          {
            "name": "PolicyAssignment",
            "type": "string",
            "format": "--policy-assignment {value}",
            "help": "Name of policy assignment."
          },
          {
            "name": "PolicyDefinition",
            "type": "string",
            "format": "--policy-definition {value}",
            "help": "Name of policy definition."
          },
          {
            "name": "PolicySetDefinition",
            "type": "string",
            "format": "--policy-set-definition {value}",
            "help": "Name of policy set definition."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`."
          }
        ]
      }
    },
    {
      "postfix": "StateSummarize",
      "definiteArgument": "policy state summarize",
      "settingsClass": {
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter expression using OData notation."
          },
          {
            "name": "From",
            "type": "string",
            "format": "--from {value}",
            "help": "ISO 8601 formatted timestamp specifying the start time of the interval to query."
          },
          {
            "name": "To",
            "type": "string",
            "format": "--to {value}",
            "help": "ISO 8601 formatted timestamp specifying the end time of the interval to query."
          },
          {
            "name": "Top",
            "type": "int",
            "format": "--top {value}",
            "help": "Maximum number of records to return."
          },
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Provider namespace (Ex: Microsoft.Provider)."
          },
          {
            "name": "Parent",
            "type": "string",
            "format": "--parent {value}",
            "help": "The parent path (Ex: resA/myA/resB/myB)."
          },
          {
            "name": "Resource",
            "type": "string",
            "format": "--resource {value}",
            "help": "Resource ID or resource name. If a name is given, please provide the resource group and other relevant resource id arguments."
          },
          {
            "name": "ResourceType",
            "type": "string",
            "format": "--resource-type {value}",
            "help": "Resource type (Ex: resC)."
          },
          {
            "name": "ManagementGroup",
            "type": "string",
            "format": "--management-group {value}",
            "help": "Name of management group."
          },
          {
            "name": "PolicyAssignment",
            "type": "string",
            "format": "--policy-assignment {value}",
            "help": "Name of policy assignment."
          },
          {
            "name": "PolicyDefinition",
            "type": "string",
            "format": "--policy-definition {value}",
            "help": "Name of policy definition."
          },
          {
            "name": "PolicySetDefinition",
            "type": "string",
            "format": "--policy-set-definition {value}",
            "help": "Name of policy set definition."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`."
          }
        ]
      }
    }
  ],
  "commonTaskProperties": [
    {
      "name": "Debug",
      "type": "string",
      "format": "--debug {value}",
      "help": "Increase logging verbosity to show all debug logs."
    },
    {
      "name": "Help",
      "type": "string",
      "format": "--help {value}",
      "help": "Show this help message and exit."
    },
    {
      "name": "Output",
      "type": "AzureOutput",
      "format": "--output {value}",
      "help": "Output format."
    },
    {
      "name": "Query",
      "type": "string",
      "format": "--query {value}",
      "help": "JMESPath query string. See <a href=\"http://jmespath.org/\">http://jmespath.org/</a> for more information and examples."
    },
    {
      "name": "Verbose",
      "type": "string",
      "format": "--verbose {value}",
      "help": "Increase logging verbosity. Use --debug for full debug logs."
    }
  ],
  "enumerations": [
    {
      "name": "PolicyAssignmentCreateSku",
      "values": [
        "free",
        "standard"
      ]
    },
    {
      "name": "PolicyDefinitionCreateMode",
      "values": [
        "all",
        "indexed",
        "notspecified"
      ]
    }
  ]
}