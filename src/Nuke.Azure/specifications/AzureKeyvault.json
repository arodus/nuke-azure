{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.CodeGeneration/schema.json",
  "license": [
    "Copyright Sebastian Karasek, Matthias Koch 2018.",
    "Distributed under the MIT License.",
    "https://github.com/nuke-build/azure/blob/master/LICENSE"
  ],
  "references": [
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/certificate.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/secret.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/network-rule.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/storage.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/key.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/certificate/pending.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/certificate/contact.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/certificate/issuer.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/storage/sas-definition.yml",
    "https://raw.githubusercontent.com/Azure/azure-docs-cli-python/695ced3/latest/docs-ref-autogen/keyvault/certificate/issuer/admin.yml"
  ],
  "name": "AzureKeyvault",
  "officialUrl": "https://docs.microsoft.com/en-us/cli/azure/keyvault?view=azure-cli-latest",
  "help": "Manage KeyVault keys, secrets, and certificates.",
  "pathExecutable": "az",
  "tasks": [
    {
      "postfix": "Create",
      "definiteArgument": "keyvault create",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`."
          },
          {
            "name": "EnablePurgeProtection",
            "type": "bool",
            "format": "--enable-purge-protection",
            "help": "Prevents manual purging of deleted vault, and all contained entities."
          },
          {
            "name": "EnableSoftDelete",
            "type": "bool",
            "format": "--enable-soft-delete",
            "help": "Enable vault deletion recovery for the vault, and all contained entities."
          },
          {
            "name": "EnabledForDeployment",
            "type": "bool",
            "format": "--enabled-for-deployment",
            "help": "Allow Virtual Machines to retrieve certificates stored as secrets from the vault."
          },
          {
            "name": "EnabledForDiskEncryption",
            "type": "bool",
            "format": "--enabled-for-disk-encryption",
            "help": "Allow Disk Encryption to retrieve secrets from the vault and unwrap keys."
          },
          {
            "name": "EnabledForTemplateDeployment",
            "type": "bool",
            "format": "--enabled-for-template-deployment",
            "help": "Allow Resource Manager to retrieve secrets from the vault."
          },
          {
            "name": "Location",
            "type": "string",
            "format": "--location {value}",
            "help": "Location. You can configure the default location using `az configure --defaults location=&amp;lt;location&amp;gt;`."
          },
          {
            "name": "NoSelfPerms",
            "type": "bool",
            "format": "--no-self-perms",
            "help": "Don't add permissions for the current user/service principal in the new vault."
          },
          {
            "name": "Sku",
            "type": "KeyvaultCreateSku",
            "format": "--sku {value}",
            "help": "Required. SKU details."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Bypass",
            "type": "KeyvaultBypass",
            "format": "--bypass {value}",
            "help": "Bypass traffic for space-separated uses."
          },
          {
            "name": "DefaultAction",
            "type": "KeyvaultDefaultAction",
            "format": "--default-action {value}",
            "help": "Default action to apply when no rule matches."
          }
        ]
      }
    },
    {
      "postfix": "Delete",
      "definiteArgument": "keyvault delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          }
        ]
      }
    },
    {
      "postfix": "DeletePolicy",
      "definiteArgument": "keyvault delete-policy",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ObjectId",
            "type": "string",
            "format": "--object-id {value}",
            "help": "A GUID that identifies the principal that will receive permissions."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          },
          {
            "name": "Spn",
            "type": "string",
            "format": "--spn {value}",
            "help": "Name of a service principal that will receive permissions."
          },
          {
            "name": "Upn",
            "type": "string",
            "format": "--upn {value}",
            "help": "Name of a user principal that will receive permissions."
          }
        ]
      }
    },
    {
      "postfix": "List",
      "definiteArgument": "keyvault list",
      "settingsClass": {
        "properties": [
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Name of resource group. You can configure the default group using `az configure --defaults group=&amp;lt;name&amp;gt;`."
          }
        ]
      }
    },
    {
      "postfix": "ListDeleted",
      "definiteArgument": "keyvault list-deleted",
      "settingsClass": {}
    },
    {
      "postfix": "Purge",
      "definiteArgument": "keyvault purge",
      "settingsClass": {
        "properties": [
          {
            "name": "Location",
            "type": "string",
            "format": "--location {value}",
            "help": "Location. You can configure the default location using `az configure --defaults location=&amp;lt;location&amp;gt;`."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "Recover",
      "definiteArgument": "keyvault recover",
      "settingsClass": {
        "properties": [
          {
            "name": "Location",
            "type": "string",
            "format": "--location {value}",
            "help": "Location. You can configure the default location using `az configure --defaults location=&amp;lt;location&amp;gt;`."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          }
        ]
      }
    },
    {
      "postfix": "SetPolicy",
      "definiteArgument": "keyvault set-policy",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ObjectId",
            "type": "string",
            "format": "--object-id {value}",
            "help": "A GUID that identifies the principal that will receive permissions."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          },
          {
            "name": "Spn",
            "type": "string",
            "format": "--spn {value}",
            "help": "Name of a service principal that will receive permissions."
          },
          {
            "name": "Upn",
            "type": "string",
            "format": "--upn {value}",
            "help": "Name of a user principal that will receive permissions."
          },
          {
            "name": "CertificatePermissions",
            "type": "List<KeyvaultSetPolicyCertificatePermissions>",
            "format": "--certificate-permissions {value}",
            "separator": " ",
            "help": "Space-separated list of certificate permissions to assign."
          },
          {
            "name": "KeyPermissions",
            "type": "List<KeyvaultSetPolicyKeyPermissions>",
            "format": "--key-permissions {value}",
            "separator": " ",
            "help": "Space-separated list of key permissions to assign."
          },
          {
            "name": "SecretPermissions",
            "type": "List<KeyvaultSetPolicySecretPermissions>",
            "format": "--secret-permissions {value}",
            "separator": " ",
            "help": "Space-separated list of secret permissions to assign."
          },
          {
            "name": "StoragePermissions",
            "type": "List<KeyvaultSetPolicyStoragePermissions>",
            "format": "--storage-permissions {value}",
            "separator": " ",
            "help": "Space-separated list of storage permissions to assign."
          }
        ]
      }
    },
    {
      "postfix": "Show",
      "definiteArgument": "keyvault show",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          }
        ]
      }
    },
    {
      "postfix": "Update",
      "definiteArgument": "keyvault update",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "EnablePurgeProtection",
            "type": "bool",
            "format": "--enable-purge-protection",
            "help": "Prevents manual purging of deleted vault, and all contained entities."
          },
          {
            "name": "EnableSoftDelete",
            "type": "bool",
            "format": "--enable-soft-delete",
            "help": "Enable vault deletion recovery for the vault, and all contained entities."
          },
          {
            "name": "EnabledForDeployment",
            "type": "bool",
            "format": "--enabled-for-deployment",
            "help": "Allow Virtual Machines to retrieve certificates stored as secrets from the vault."
          },
          {
            "name": "EnabledForDiskEncryption",
            "type": "bool",
            "format": "--enabled-for-disk-encryption",
            "help": "Allow Disk Encryption to retrieve secrets from the vault and unwrap keys."
          },
          {
            "name": "EnabledForTemplateDeployment",
            "type": "bool",
            "format": "--enabled-for-template-deployment",
            "help": "Allow Resource Manager to retrieve secrets from the vault."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          },
          {
            "name": "Bypass",
            "type": "KeyvaultBypass",
            "format": "--bypass {value}",
            "help": "Bypass traffic for space-separated uses."
          },
          {
            "name": "DefaultAction",
            "type": "KeyvaultDefaultAction",
            "format": "--default-action {value}",
            "help": "Default action to apply when no rule matches."
          },
          {
            "name": "Add",
            "type": "string",
            "format": "--add {value}",
            "help": "Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty &lt;key=value, string or JSON string&gt;."
          },
          {
            "name": "ForceString",
            "type": "string",
            "format": "--force-string {value}",
            "help": "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON."
          },
          {
            "name": "Remove",
            "type": "string",
            "format": "--remove {value}",
            "help": "Remove a property or an element from a list.  Example: --remove property.list &lt;indexToRemove&gt; OR --remove propertyToRemove."
          },
          {
            "name": "Set",
            "type": "string",
            "format": "--set {value}",
            "help": "Update an object by specifying a property path and value to set.  Example: --set property1.property2=&lt;value&gt;."
          }
        ]
      }
    },
    {
      "postfix": "CertificateCreate",
      "definiteArgument": "keyvault certificate create",
      "settingsClass": {
        "properties": [
          {
            "name": "Policy",
            "type": "string",
            "format": "--policy {value}",
            "help": "JSON encoded policy defintion. Use @{file} to load from a file."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Create certificate in disabled state."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Validity",
            "type": "int",
            "format": "--validity {value}",
            "help": "Number of months the certificate is valid for. Overrides the value specified with --policy/-p."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateDelete",
      "definiteArgument": "keyvault certificate delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the certificate.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "CertificateDownload",
      "definiteArgument": "keyvault certificate download",
      "settingsClass": {
        "properties": [
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "File to receive the binary certificate contents."
          },
          {
            "name": "Encoding",
            "type": "KeyvaultCertificateDownloadEncoding",
            "format": "--encoding {value}",
            "help": "Encoding of the certificate. DER will create a binary DER formatted x509 certificate, and PEM will create a base64 PEM x509 certificate."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the certificate.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The certificate version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "CertificateGetDefaultPolicy",
      "definiteArgument": "keyvault certificate get-default-policy",
      "settingsClass": {
        "properties": [
          {
            "name": "Scaffold",
            "type": "string",
            "format": "--scaffold {value}",
            "help": "Create a fully formed policy structure with default values."
          }
        ]
      }
    },
    {
      "postfix": "CertificateImport",
      "definiteArgument": "keyvault certificate import",
      "settingsClass": {
        "properties": [
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "PKCS12 file or PEM file containing the certificate and private key."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Import the certificate in disabled state."
          },
          {
            "name": "Password",
            "type": "string",
            "format": "--password {value}",
            "secret": true,
            "help": "If the private key in certificate is encrypted, the password used for encryption."
          },
          {
            "name": "Policy",
            "type": "string",
            "format": "--policy {value}",
            "help": "JSON encoded policy defintion. Use @{file} to load from a file."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateList",
      "definiteArgument": "keyvault certificate list",
      "settingsClass": {
        "properties": [
          {
            "name": "IncludePending",
            "type": "bool",
            "format": "--include-pending",
            "help": "Specifies whether to include certificates which are not completely provisioned."
          },
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateListDeleted",
      "definiteArgument": "keyvault certificate list-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "IncludePending",
            "type": "bool",
            "format": "--include-pending",
            "help": "Specifies whether to include certificates which are not completely provisioned."
          },
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateListVersions",
      "definiteArgument": "keyvault certificate list-versions",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificatePurge",
      "definiteArgument": "keyvault certificate purge",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the certificate.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "CertificateRecover",
      "definiteArgument": "keyvault certificate recover",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the certificate.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "CertificateSetAttributes",
      "definiteArgument": "keyvault certificate set-attributes",
      "settingsClass": {
        "properties": [
          {
            "name": "Enabled",
            "type": "bool",
            "format": "--enabled",
            "help": "Enable the certificate."
          },
          {
            "name": "Policy",
            "type": "string",
            "format": "--policy {value}",
            "help": "JSON encoded policy defintion. Use @{file} to load from a file."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the certificate.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The certificate version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "CertificateShow",
      "definiteArgument": "keyvault certificate show",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the certificate.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The certificate version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "CertificateShowDeleted",
      "definiteArgument": "keyvault certificate show-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the certificate.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the certificate. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "SecretBackup",
      "definiteArgument": "keyvault secret backup",
      "settingsClass": {
        "properties": [
          {
            "name": "FilePath",
            "type": "string",
            "format": "--file-path {value}",
            "help": ""
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "SecretDelete",
      "definiteArgument": "keyvault secret delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "SecretDownload",
      "definiteArgument": "keyvault secret download",
      "settingsClass": {
        "properties": [
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "File to receive the secret contents."
          },
          {
            "name": "Encoding",
            "type": "KeyvaultSecretEncoding",
            "format": "--encoding {value}",
            "help": "Encoding of the destination file. By default, will look for the 'file-encoding' tag on the secret. Otherwise will assume 'utf-8'."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The secret version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "SecretList",
      "definiteArgument": "keyvault secret list",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified, the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "SecretListDeleted",
      "definiteArgument": "keyvault secret list-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "SecretListVersions",
      "definiteArgument": "keyvault secret list-versions",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified, the service will return up to 25 results."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "SecretPurge",
      "definiteArgument": "keyvault secret purge",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "SecretRecover",
      "definiteArgument": "keyvault secret recover",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "SecretRestore",
      "definiteArgument": "keyvault secret restore",
      "settingsClass": {
        "properties": [
          {
            "name": "FilePath",
            "type": "string",
            "format": "--file-path {value}",
            "help": ""
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "SecretSet",
      "definiteArgument": "keyvault secret set",
      "settingsClass": {
        "properties": [
          {
            "name": "Description",
            "type": "string",
            "format": "--description {value}",
            "help": "Description of the secret contents (e.g. password, connection string, etc)."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Create secret in disabled state."
          },
          {
            "name": "Expires",
            "type": "string",
            "format": "--expires {value}",
            "help": "Expiration UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "NotBefore",
            "type": "string",
            "format": "--not-before {value}",
            "help": "Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Encoding",
            "type": "KeyvaultSecretEncoding",
            "format": "--encoding {value}",
            "help": "Source file encoding. The value is saved as a tag (`file-encoding=&amp;lt;val&amp;gt;`) and used during download to automatically encode the resulting file."
          },
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "Source file for secret. Use in conjunction with '--encoding'."
          },
          {
            "name": "Value",
            "type": "string",
            "format": "--value {value}",
            "help": "Plain text secret value. Cannot be used with '--file' or '--encoding'."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "SecretSetAttributes",
      "definiteArgument": "keyvault secret set-attributes",
      "settingsClass": {
        "properties": [
          {
            "name": "ContentType",
            "type": "string",
            "format": "--content-type {value}",
            "help": "Type of the secret value such as a password."
          },
          {
            "name": "Enabled",
            "type": "bool",
            "format": "--enabled",
            "help": "Enable the secret."
          },
          {
            "name": "Expires",
            "type": "string",
            "format": "--expires {value}",
            "help": "Expiration UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "NotBefore",
            "type": "string",
            "format": "--not-before {value}",
            "help": "Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The secret version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "SecretShow",
      "definiteArgument": "keyvault secret show",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The secret version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "SecretShowDeleted",
      "definiteArgument": "keyvault secret show-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the secret.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the secret. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "NetworkRuleAdd",
      "definiteArgument": "keyvault network-rule add",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "IpAddress",
            "type": "string",
            "format": "--ip-address {value}",
            "help": "IPv4 address or CIDR range."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          },
          {
            "name": "Subnet",
            "type": "string",
            "format": "--subnet {value}",
            "help": "Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied."
          },
          {
            "name": "VnetName",
            "type": "string",
            "format": "--vnet-name {value}",
            "help": "Name of a virtual network."
          }
        ]
      }
    },
    {
      "postfix": "NetworkRuleList",
      "definiteArgument": "keyvault network-rule list",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          }
        ]
      }
    },
    {
      "postfix": "NetworkRuleRemove",
      "definiteArgument": "keyvault network-rule remove",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "IpAddress",
            "type": "string",
            "format": "--ip-address {value}",
            "help": "IPv4 address or CIDR range."
          },
          {
            "name": "ResourceGroup",
            "type": "string",
            "format": "--resource-group {value}",
            "help": "Proceed only if Key Vault belongs to the specified resource group."
          },
          {
            "name": "Subnet",
            "type": "string",
            "format": "--subnet {value}",
            "help": "Name or ID of subnet. If name is supplied, `--vnet-name` must be supplied."
          },
          {
            "name": "VnetName",
            "type": "string",
            "format": "--vnet-name {value}",
            "help": "Name of a virtual network."
          }
        ]
      }
    },
    {
      "postfix": "StorageAdd",
      "definiteArgument": "keyvault storage add",
      "settingsClass": {
        "properties": [
          {
            "name": "ActiveKeyName",
            "type": "string",
            "format": "--active-key-name {value}",
            "help": "Current active storage account key name."
          },
          {
            "name": "ResourceId",
            "type": "string",
            "format": "--resource-id {value}",
            "help": "Storage account resource id."
          },
          {
            "name": "AutoRegenerateKey",
            "type": "bool",
            "format": "--auto-regenerate-key",
            "help": "Whether keyvault should manage the storage account for the user."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Add the storage account in a disabled state."
          },
          {
            "name": "RegenerationPeriod",
            "type": "string",
            "format": "--regeneration-period {value}",
            "help": "The key regeneration time duration specified in ISO-8601 format, such as \"P30D\" for rotation every 30 days."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageBackup",
      "definiteArgument": "keyvault storage backup",
      "settingsClass": {
        "properties": [
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "Local file path in which to store storage account backup."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the storage account.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "StorageList",
      "definiteArgument": "keyvault storage list",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageListDeleted",
      "definiteArgument": "keyvault storage list-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StoragePurge",
      "definiteArgument": "keyvault storage purge",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageRecover",
      "definiteArgument": "keyvault storage recover",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageRegenerateKey",
      "definiteArgument": "keyvault storage regenerate-key",
      "settingsClass": {
        "properties": [
          {
            "name": "KeyName",
            "type": "string",
            "format": "--key-name {value}",
            "help": "The storage account key name."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the storage account.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "StorageRemove",
      "definiteArgument": "keyvault storage remove",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the storage account.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "StorageRestore",
      "definiteArgument": "keyvault storage restore",
      "settingsClass": {
        "properties": [
          {
            "name": "FilePath",
            "type": "string",
            "format": "--file-path {value}",
            "help": ""
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageShow",
      "definiteArgument": "keyvault storage show",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the storage account.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "StorageShowDeleted",
      "definiteArgument": "keyvault storage show-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageUpdate",
      "definiteArgument": "keyvault storage update",
      "settingsClass": {
        "properties": [
          {
            "name": "ActiveKeyName",
            "type": "string",
            "format": "--active-key-name {value}",
            "help": "The current active storage account key name."
          },
          {
            "name": "AutoRegenerateKey",
            "type": "bool",
            "format": "--auto-regenerate-key",
            "help": "Whether keyvault should manage the storage account for the user."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Add the storage account in a disabled state."
          },
          {
            "name": "RegenerationPeriod",
            "type": "string",
            "format": "--regeneration-period {value}",
            "help": "The key regeneration time duration specified in ISO-8601 format, such as \"P30D\" for rotation every 30 days."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the storage account.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "KeyBackup",
      "definiteArgument": "keyvault key backup",
      "settingsClass": {
        "properties": [
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "Local file path in which to store key backup."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the key.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "KeyCreate",
      "definiteArgument": "keyvault key create",
      "settingsClass": {
        "properties": [
          {
            "name": "Curve",
            "type": "KeyvaultKeyCreateCurve",
            "format": "--curve {value}",
            "help": "Elliptic curve name. For valid values, see JsonWebKeyCurveName."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Create key in disabled state."
          },
          {
            "name": "Expires",
            "type": "string",
            "format": "--expires {value}",
            "help": "Expiration UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "Kty",
            "type": "KeyvaultKeyCreateKty",
            "format": "--kty {value}",
            "help": "The type of key to create. For valid values, see JsonWebKeyType."
          },
          {
            "name": "NotBefore",
            "type": "string",
            "format": "--not-before {value}",
            "help": "Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "Ops",
            "type": "List<KeyvaultKeyOps>",
            "format": "--ops {value}",
            "separator": " ",
            "help": "Space-separated list of permitted JSON web key operations."
          },
          {
            "name": "Protection",
            "type": "KeyvaultKeyProtection",
            "format": "--protection {value}",
            "help": "Specifies the type of key protection."
          },
          {
            "name": "Size",
            "type": "string",
            "format": "--size {value}",
            "help": "The key size in bits. For example: 2048, 3072, or 4096 for RSA."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "KeyDelete",
      "definiteArgument": "keyvault key delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the key.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "KeyImport",
      "definiteArgument": "keyvault key import",
      "settingsClass": {
        "properties": [
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Create key in disabled state."
          },
          {
            "name": "Expires",
            "type": "string",
            "format": "--expires {value}",
            "help": "Expiration UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "NotBefore",
            "type": "string",
            "format": "--not-before {value}",
            "help": "Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "Ops",
            "type": "List<KeyvaultKeyOps>",
            "format": "--ops {value}",
            "separator": " ",
            "help": "Space-separated list of permitted JSON web key operations."
          },
          {
            "name": "Protection",
            "type": "KeyvaultKeyProtection",
            "format": "--protection {value}",
            "help": "Specifies the type of key protection."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "ByokFile",
            "type": "string",
            "format": "--byok-file {value}",
            "help": "BYOK file containing the key to be imported. Must not be password protected."
          },
          {
            "name": "PemFile",
            "type": "string",
            "format": "--pem-file {value}",
            "help": "PEM file containing the key to be imported."
          },
          {
            "name": "PemPassword",
            "type": "string",
            "format": "--pem-password {value}",
            "secret": true,
            "help": "Password of PEM file."
          }
        ]
      }
    },
    {
      "postfix": "KeyList",
      "definiteArgument": "keyvault key list",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "KeyListDeleted",
      "definiteArgument": "keyvault key list-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "KeyListVersions",
      "definiteArgument": "keyvault key list-versions",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "KeyPurge",
      "definiteArgument": "keyvault key purge",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the key.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "KeyRecover",
      "definiteArgument": "keyvault key recover",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the key.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "KeyRestore",
      "definiteArgument": "keyvault key restore",
      "settingsClass": {
        "properties": [
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "Local key backup from which to restore key."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "KeySetAttributes",
      "definiteArgument": "keyvault key set-attributes",
      "settingsClass": {
        "properties": [
          {
            "name": "Enabled",
            "type": "bool",
            "format": "--enabled",
            "help": "Enable the key."
          },
          {
            "name": "Expires",
            "type": "string",
            "format": "--expires {value}",
            "help": "Expiration UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "NotBefore",
            "type": "string",
            "format": "--not-before {value}",
            "help": "Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "Ops",
            "type": "List<KeyvaultKeyOps>",
            "format": "--ops {value}",
            "separator": " ",
            "help": "Space-separated list of permitted JSON web key operations."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the key.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The key version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "KeyShow",
      "definiteArgument": "keyvault key show",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the key.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "The key version. If omitted, uses the latest version."
          }
        ]
      }
    },
    {
      "postfix": "KeyShowDeleted",
      "definiteArgument": "keyvault key show-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "The recovery id of the key.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the key. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "CertificatePendingDelete",
      "definiteArgument": "keyvault certificate pending delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the pending certificate."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificatePendingMerge",
      "definiteArgument": "keyvault certificate pending merge",
      "settingsClass": {
        "properties": [
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "File containing the certificate or certificate chain to merge."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Create certificate in disabled state."
          },
          {
            "name": "Expires",
            "type": "string",
            "format": "--expires {value}",
            "help": "Expiration UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "NotBefore",
            "type": "string",
            "format": "--not-before {value}",
            "help": "Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z')."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the pending certificate."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificatePendingShow",
      "definiteArgument": "keyvault certificate pending show",
      "settingsClass": {
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name of the pending certificate."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateContactAdd",
      "definiteArgument": "keyvault certificate contact add",
      "settingsClass": {
        "properties": [
          {
            "name": "Email",
            "type": "string",
            "format": "--email {value}",
            "help": "Contact e-mail address. Must be unique."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Full contact name."
          },
          {
            "name": "Phone",
            "type": "string",
            "format": "--phone {value}",
            "help": "Contact phone number."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateContactDelete",
      "definiteArgument": "keyvault certificate contact delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Email",
            "type": "string",
            "format": "--email {value}",
            "help": "Contact e-mail address. Must be unique."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateContactList",
      "definiteArgument": "keyvault certificate contact list",
      "settingsClass": {
        "properties": [
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerCreate",
      "definiteArgument": "keyvault certificate issuer create",
      "settingsClass": {
        "properties": [
          {
            "name": "IssuerName",
            "type": "string",
            "format": "--issuer-name {value}",
            "help": "Certificate issuer name."
          },
          {
            "name": "ProviderName",
            "type": "string",
            "format": "--provider-name {value}",
            "help": "The certificate provider name. Must be registered with your tenant ID and in your region."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Set issuer to disabled state."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "AccountId",
            "type": "string",
            "format": "--account-id {value}",
            "help": "The issuer account id/username/etc."
          },
          {
            "name": "Password",
            "type": "string",
            "format": "--password {value}",
            "secret": true,
            "help": "The issuer account password/secret/etc."
          },
          {
            "name": "OrganizationId",
            "type": "string",
            "format": "--organization-id {value}",
            "help": "The organization id."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerDelete",
      "definiteArgument": "keyvault certificate issuer delete",
      "settingsClass": {
        "properties": [
          {
            "name": "IssuerName",
            "type": "string",
            "format": "--issuer-name {value}",
            "help": "Certificate issuer name."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerList",
      "definiteArgument": "keyvault certificate issuer list",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerShow",
      "definiteArgument": "keyvault certificate issuer show",
      "settingsClass": {
        "properties": [
          {
            "name": "IssuerName",
            "type": "string",
            "format": "--issuer-name {value}",
            "help": "Certificate issuer name."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerUpdate",
      "definiteArgument": "keyvault certificate issuer update",
      "settingsClass": {
        "properties": [
          {
            "name": "IssuerName",
            "type": "string",
            "format": "--issuer-name {value}",
            "help": "Certificate issuer name."
          },
          {
            "name": "Enabled",
            "type": "bool",
            "format": "--enabled",
            "help": "Set issuer enabled state."
          },
          {
            "name": "ProviderName",
            "type": "string",
            "format": "--provider-name {value}",
            "help": "The certificate provider name. Must be registered with your tenant ID and in your region."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          },
          {
            "name": "AccountId",
            "type": "string",
            "format": "--account-id {value}",
            "help": "The issuer account id/username/etc."
          },
          {
            "name": "Password",
            "type": "string",
            "format": "--password {value}",
            "secret": true,
            "help": "The issuer account password/secret/etc."
          },
          {
            "name": "OrganizationId",
            "type": "string",
            "format": "--organization-id {value}",
            "help": "The organization id."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionCreate",
      "definiteArgument": "keyvault storage sas-definition create",
      "settingsClass": {
        "properties": [
          {
            "name": "SasType",
            "type": "KeyvaultStorageSasDefinitionSasType",
            "format": "--sas-type {value}",
            "help": "The type of SAS token the SAS definition will create."
          },
          {
            "name": "TemplateUri",
            "type": "string",
            "format": "--template-uri {value}",
            "help": "The SAS definition token template signed with the key 00000000.  In the case of an account token this is only the sas token itself, for service tokens, the full service endpoint url along with the sas token.  Tokens created according to the SAS definition will have the same properties as the template."
          },
          {
            "name": "ValidityPeriod",
            "type": "string",
            "format": "--validity-period {value}",
            "help": "The validity period of SAS tokens created according to the SAS definition in ISO-8601, such as \"PT12H\" for 12 hour tokens."
          },
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Add the storage account in a disabled state."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the SAS definition in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionDelete",
      "definiteArgument": "keyvault storage sas-definition delete",
      "settingsClass": {
        "properties": [
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the SAS definition.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the SAS definition in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionList",
      "definiteArgument": "keyvault storage sas-definition list",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionListDeleted",
      "definiteArgument": "keyvault storage sas-definition list-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "Maxresults",
            "type": "int",
            "format": "--maxresults {value}",
            "help": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionRecover",
      "definiteArgument": "keyvault storage sas-definition recover",
      "settingsClass": {
        "properties": [
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the SAS definition in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionShow",
      "definiteArgument": "keyvault storage sas-definition show",
      "settingsClass": {
        "properties": [
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the SAS definition.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the SAS definition in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionShowDeleted",
      "definiteArgument": "keyvault storage sas-definition show-deleted",
      "settingsClass": {
        "properties": [
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the SAS definition in the vault."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "StorageSasDefinitionUpdate",
      "definiteArgument": "keyvault storage sas-definition update",
      "settingsClass": {
        "properties": [
          {
            "name": "Disabled",
            "type": "bool",
            "format": "--disabled",
            "help": "Add the storage account in a disabled state."
          },
          {
            "name": "SasType",
            "type": "KeyvaultStorageSasDefinitionSasType",
            "format": "--sas-type {value}",
            "help": "The type of SAS token the SAS definition will create."
          },
          {
            "name": "Tags",
            "type": "string",
            "format": "--tags {value}",
            "help": "Space-separated tags in 'key[=value]' format. Use \"\" to clear existing tags."
          },
          {
            "name": "TemplateUri",
            "type": "string",
            "format": "--template-uri {value}",
            "help": "The SAS definition token template signed with the key 00000000.  In the case of an account token this is only the sas token itself, for service tokens, the full service endpoint url along with the sas token.  Tokens created according to the SAS definition will have the same properties as the template."
          },
          {
            "name": "ValidityPeriod",
            "type": "string",
            "format": "--validity-period {value}",
            "help": "The validity period of SAS tokens created according to the SAS definition in ISO-8601, such as \"PT12H\" for 12 hour tokens."
          },
          {
            "name": "AccountName",
            "type": "string",
            "format": "--account-name {value}",
            "help": "Name to identify the storage account in the vault. Required if --id is not specified."
          },
          {
            "name": "Id",
            "type": "string",
            "format": "--id {value}",
            "help": "Id of the SAS definition.  If specified all other 'Id' arguments should be omitted."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name to identify the SAS definition in the vault. Required if --id is not specified."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault. Required if --id is not specified."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerAdminAdd",
      "definiteArgument": "keyvault certificate issuer admin add",
      "settingsClass": {
        "properties": [
          {
            "name": "Email",
            "type": "string",
            "format": "--email {value}",
            "help": "Admin e-mail address. Must be unique within the vault."
          },
          {
            "name": "IssuerName",
            "type": "string",
            "format": "--issuer-name {value}",
            "help": "Certificate issuer name."
          },
          {
            "name": "FirstName",
            "type": "string",
            "format": "--first-name {value}",
            "help": ""
          },
          {
            "name": "LastName",
            "type": "string",
            "format": "--last-name {value}",
            "help": ""
          },
          {
            "name": "Phone",
            "type": "string",
            "format": "--phone {value}",
            "help": "Amin phone number."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerAdminDelete",
      "definiteArgument": "keyvault certificate issuer admin delete",
      "settingsClass": {
        "properties": [
          {
            "name": "Email",
            "type": "string",
            "format": "--email {value}",
            "help": "Admin e-mail address. Must be unique within the vault."
          },
          {
            "name": "IssuerName",
            "type": "string",
            "format": "--issuer-name {value}",
            "help": "Certificate issuer name."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    },
    {
      "postfix": "CertificateIssuerAdminList",
      "definiteArgument": "keyvault certificate issuer admin list",
      "settingsClass": {
        "properties": [
          {
            "name": "IssuerName",
            "type": "string",
            "format": "--issuer-name {value}",
            "help": "Certificate issuer name."
          },
          {
            "name": "VaultName",
            "type": "string",
            "format": "--vault-name {value}",
            "help": "Name of the key vault."
          }
        ]
      }
    }
  ],
  "commonTaskProperties": [
    {
      "name": "Debug",
      "type": "string",
      "format": "--debug {value}",
      "help": "Increase logging verbosity to show all debug logs."
    },
    {
      "name": "Help",
      "type": "string",
      "format": "--help {value}",
      "help": "Show this help message and exit."
    },
    {
      "name": "Output",
      "type": "AzureOutput",
      "format": "--output {value}",
      "help": "Output format."
    },
    {
      "name": "Query",
      "type": "string",
      "format": "--query {value}",
      "help": "JMESPath query string. See <a href=\"http://jmespath.org/\">http://jmespath.org/</a> for more information and examples."
    },
    {
      "name": "Verbose",
      "type": "string",
      "format": "--verbose {value}",
      "help": "Increase logging verbosity. Use --debug for full debug logs."
    }
  ],
  "enumerations": [
    {
      "name": "KeyvaultCreateSku",
      "values": [
        "premium",
        "standard"
      ]
    },
    {
      "name": "KeyvaultBypass",
      "values": [
        "azureservices",
        "none"
      ]
    },
    {
      "name": "KeyvaultDefaultAction",
      "values": [
        "allow",
        "deny"
      ]
    },
    {
      "name": "KeyvaultSetPolicyCertificatePermissions",
      "values": [
        "backup",
        "create",
        "delete",
        "deleteissuers",
        "get",
        "getissuers",
        "import",
        "list",
        "listissuers",
        "managecontacts",
        "manageissuers",
        "purge",
        "recover",
        "restore",
        "setissuers",
        "update"
      ]
    },
    {
      "name": "KeyvaultSetPolicyKeyPermissions",
      "values": [
        "backup",
        "create",
        "decrypt",
        "delete",
        "encrypt",
        "get",
        "import",
        "list",
        "purge",
        "recover",
        "restore",
        "sign",
        "unwrapkey",
        "update",
        "verify",
        "wrapkey"
      ]
    },
    {
      "name": "KeyvaultSetPolicySecretPermissions",
      "values": [
        "backup",
        "delete",
        "get",
        "list",
        "purge",
        "recover",
        "restore",
        "set"
      ]
    },
    {
      "name": "KeyvaultSetPolicyStoragePermissions",
      "values": [
        "backup",
        "delete",
        "deletesas",
        "get",
        "getsas",
        "list",
        "listsas",
        "purge",
        "recover",
        "regeneratekey",
        "restore",
        "set",
        "setsas",
        "update"
      ]
    },
    {
      "name": "KeyvaultCertificateDownloadEncoding",
      "values": [
        "der",
        "pem"
      ]
    },
    {
      "name": "KeyvaultSecretEncoding",
      "values": [
        "ascii",
        "base64",
        "hex",
        "utf-16be",
        "utf-16le",
        "utf-8"
      ]
    },
    {
      "name": "KeyvaultKeyCreateCurve",
      "values": [
        "p-256",
        "p-256k",
        "p-384",
        "p-521"
      ]
    },
    {
      "name": "KeyvaultKeyCreateKty",
      "values": [
        "ec",
        "ec-hsm",
        "rsa",
        "rsa-hsm",
        "oct"
      ]
    },
    {
      "name": "KeyvaultKeyOps",
      "values": [
        "decrypt",
        "encrypt",
        "sign",
        "unwrapkey",
        "verify",
        "wrapkey"
      ]
    },
    {
      "name": "KeyvaultKeyProtection",
      "values": [
        "hsm",
        "software"
      ]
    },
    {
      "name": "KeyvaultStorageSasDefinitionSasType",
      "values": [
        "account",
        "service"
      ]
    }
  ]
}